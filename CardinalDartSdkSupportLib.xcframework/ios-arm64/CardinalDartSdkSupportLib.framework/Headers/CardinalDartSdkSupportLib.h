#import <Foundation/NSArray.h>
#import <Foundation/NSDictionary.h>
#import <Foundation/NSError.h>
#import <Foundation/NSObject.h>
#import <Foundation/NSSet.h>
#import <Foundation/NSString.h>
#import <Foundation/NSValue.h>

@class CDSSLInitializers, CDSSLAccessLogApi, CDSSLAccessLogApiEncrypted, CDSSLAccessLogApiTryAndRecover, CDSSLAccessLogBasicApi, CDSSLAgendaApi, CDSSLApplicationSettingsApi, CDSSLCalendarItemApi, CDSSLCalendarItemApiEncrypted, CDSSLCalendarItemApiTryAndRecover, CDSSLCalendarItemBasicApi, CDSSLCardinalMaintenanceTaskApi, CDSSLClassificationApi, CDSSLClassificationApiEncrypted, CDSSLClassificationApiTryAndRecover, CDSSLClassificationBasicApi, CDSSLCodeApi, CDSSLContactApi, CDSSLContactApiEncrypted, CDSSLContactApiTryAndRecover, CDSSLContactBasicApi, CDSSLCryptoApi, CDSSLDataOwnerApi, CDSSLDeviceApi, CDSSLDocumentApi, CDSSLDocumentApiEncrypted, CDSSLDocumentApiTryAndRecover, CDSSLDocumentBasicApi, CDSSLDocumentTemplateApi, CDSSLEntityReferenceApi, CDSSLEntityTemplateApi, CDSSLFormApi, CDSSLFormApiEncrypted, CDSSLFormApiTryAndRecover, CDSSLFormBasicApi, CDSSLFrontEndMigrationApi, CDSSLGroupApi, CDSSLHealthElementApi, CDSSLHealthElementApiEncrypted, CDSSLHealthElementApiTryAndRecover, CDSSLHealthElementBasicApi, CDSSLHealthcarePartyApi, CDSSLInsuranceApi, CDSSLInvoiceApi, CDSSLInvoiceApiEncrypted, CDSSLInvoiceApiTryAndRecover, CDSSLInvoiceBasicApi, CDSSLKeywordApi, CDSSLMaintenanceTaskApi, CDSSLMaintenanceTaskApiEncrypted, CDSSLMaintenanceTaskApiTryAndRecover, CDSSLMaintenanceTaskBasicApi, CDSSLMedicalLocationApi, CDSSLMessageApi, CDSSLMessageApiEncrypted, CDSSLMessageApiTryAndRecover, CDSSLMessageBasicApi, CDSSLPatientApi, CDSSLPatientApiEncrypted, CDSSLPatientApiTryAndRecover, CDSSLPatientBasicApi, CDSSLPermissionApi, CDSSLPlaceApi, CDSSLReceiptApi, CDSSLReceiptApiEncrypted, CDSSLReceiptApiTryAndRecover, CDSSLReceiptBasicApi, CDSSLRoleApi, CDSSLShamirKeysManagerApi, CDSSLSystemApi, CDSSLTarificationApi, CDSSLTimeTableApi, CDSSLTimeTableApiEncrypted, CDSSLTimeTableApiTryAndRecover, CDSSLTimeTableBasicApi, CDSSLTopicApi, CDSSLTopicApiEncrypted, CDSSLTopicApiTryAndRecover, CDSSLTopicBasicApi, CDSSLUserApi, CDSSLAuthenticationMethodCompanion, CDSSLKotlinArray<T>, CDSSLAuthenticationMethodUsingCredentialsCompanion, CDSSLAuthenticationMethodUsingCredentials, CDSSLCardinal_sdkAuthenticationMethodUsingCredentials, CDSSLCaptchaOptionsCompanion, CDSSLCaptchaOptionsFriendlyCaptchaCompanion, CDSSLCaptchaOptionsFriendlyCaptcha, CDSSLCardinal_sdkCaptchaOptionsFriendlyCaptcha, CDSSLCaptchaOptionsKerberusCompanion, CDSSLLibrarySolution, CDSSLCaptchaOptionsKerberusComputedCompanion, CDSSLCaptchaOptionsKerberusComputed, CDSSLCardinal_sdkCaptchaOptionsKerberusComputed, CDSSLCaptchaOptionsKerberusDelegated, CDSSLCardinal_sdkCaptchaOptionsKerberusDelegated, CDSSLCaptchaOptionsRecaptchaCompanion, CDSSLCaptchaOptionsRecaptcha, CDSSLCardinal_sdkCaptchaOptionsRecaptcha, CDSSLCredentialsCompanion, CDSSLCardinal_sdkThirdPartyProvider, CDSSLCredentialsThirdPartyAuthenticationCompanion, CDSSLCredentialsThirdPartyAuthentication, CDSSLCardinal_sdkThirdPartyAuthentication, CDSSLCredentialsUsernameLongTokenCompanion, CDSSLCredentialsUsernameLongToken, CDSSLCardinal_sdkUsernameLongToken, CDSSLCredentialsUsernamePasswordCompanion, CDSSLCredentialsUsernamePassword, CDSSLCardinal_sdkUsernamePassword, CDSSLAccessLogFilters, CDSSLAgendaFilters, CDSSLCalendarItemFilters, CDSSLClassificationFilters, CDSSLCodeFilters, CDSSLContactFilters, CDSSLDeviceFilters, CDSSLDocumentFilters, CDSSLFormFilters, CDSSLGroupFilters, CDSSLHealthElementFilters, CDSSLHealthcarePartyFilters, CDSSLMaintenanceTaskFilters, CDSSLMedicalLocationFilters, CDSSLMessageFilters, CDSSLMetaFilters, CDSSLPatientFilters, CDSSLServiceFilters, CDSSLTimeTableFilters, CDSSLTopicFilters, CDSSLUserFilters, CDSSLCardinal_sdkEncryptedFieldsConfiguration, CDSSLDartSdkOptionsCompanion, CDSSLDartSdkOptions, CDSSLCardinal_sdkSdkOptions, CDSSLDartStorageOptionsCompanion, CDSSLDartStorageOptionsDefault, CDSSLEntitySubscription, CDSSLApiScope, CDSSLDartResult, CDSSLNativeReferences, CDSSLPaginatedListIterator, CDSSLResourceUtils, CDSSLStorageHelper, CDSSLLibrarySolutionCompanion, CDSSLKotlinEnumCompanion, CDSSLKotlinEnum<E>, CDSSLCardinal_sdkThirdPartyProviderCompanion, CDSSLCardinal_sdkEncryptedFieldsConfigurationCompanion, CDSSLKtor_client_coreHttpClient, CDSSLKotlinx_serialization_jsonJson, CDSSLKotlinThrowable, CDSSLKotlinException, CDSSLKotlinRuntimeException, CDSSLKotlinIllegalStateException, CDSSLKotlinx_serialization_coreSerializersModule, CDSSLKotlinx_serialization_coreSerialKind, CDSSLKotlinNothing, CDSSLKtor_client_coreHttpClientEngineConfig, CDSSLKtor_client_coreHttpClientConfig<T>, CDSSLKtor_eventsEvents, CDSSLKtor_client_coreHttpReceivePipeline, CDSSLKtor_client_coreHttpRequestPipeline, CDSSLKtor_client_coreHttpResponsePipeline, CDSSLKtor_client_coreHttpSendPipeline, CDSSLKotlinx_serialization_jsonJsonDefault, CDSSLKotlinx_serialization_jsonJsonElement, CDSSLKotlinx_serialization_jsonJsonConfiguration, CDSSLKotlinByteArray, CDSSLCardinal_sdkCryptoActorStubWithType, CDSSLLibRsaAlgorithmRsaEncryptionAlgorithmOaepWithSha256, CDSSLLibRsaKeypair<__covariant A>, CDSSLCardinal_sdkCryptoStrategiesKeyDataRecoveryRequest, CDSSLCardinal_sdkCryptoStrategiesRecoveredKeyData, CDSSLLibAesKey<__covariant A>, CDSSLLibAesServiceKeySize, CDSSLLibHmacKey<__covariant A>, CDSSLLibPrivateRsaKey<__covariant A>, CDSSLLibPublicRsaKey<__covariant A>, CDSSLLibPrivateRsaKeyJwk, CDSSLLibPublicRsaKeyJwk, CDSSLLibRsaServiceKeySize, CDSSLKtor_client_coreHttpRequestData, CDSSLKtor_client_coreHttpResponseData, CDSSLKotlinx_coroutines_coreCoroutineDispatcher, CDSSLKtor_client_coreProxyConfig, CDSSLKtor_utilsAttributeKey<T>, CDSSLKtor_eventsEventDefinition<T>, CDSSLKtor_utilsPipelinePhase, CDSSLKtor_utilsPipeline<TSubject, TContext>, CDSSLKtor_client_coreHttpReceivePipelinePhases, CDSSLKtor_client_coreHttpResponse, CDSSLKotlinUnit, CDSSLKtor_client_coreHttpRequestPipelinePhases, CDSSLKtor_client_coreHttpRequestBuilder, CDSSLKtor_client_coreHttpResponsePipelinePhases, CDSSLKtor_client_coreHttpResponseContainer, CDSSLKtor_client_coreHttpClientCall, CDSSLKtor_client_coreHttpSendPipelinePhases, CDSSLKotlinx_serialization_jsonJsonElementCompanion, CDSSLKotlinx_serialization_jsonClassDiscriminatorMode, CDSSLKotlinByteIterator, CDSSLCardinal_sdkDataOwnerType, CDSSLCardinal_sdkCryptoActorStub, CDSSLCardinal_sdkCryptoActorStubWithTypeCompanion, CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfo, CDSSLCardinal_sdkCryptoStrategiesKeyDataRecoveryRequestCompanion, CDSSLCardinal_sdkRecoveryDataKey, CDSSLKtor_httpUrl, CDSSLKtor_httpHttpMethod, CDSSLKtor_httpOutgoingContent, CDSSLKtor_httpHttpStatusCode, CDSSLKtor_utilsGMTDate, CDSSLKtor_httpHttpProtocolVersion, CDSSLKotlinAbstractCoroutineContextElement, CDSSLKotlinx_coroutines_coreCoroutineDispatcherKey, CDSSLKtor_utilsTypeInfo, CDSSLKtor_httpHeadersBuilder, CDSSLKtor_client_coreHttpRequestBuilderCompanion, CDSSLKtor_httpURLBuilder, CDSSLKtor_client_coreHttpClientCallCompanion, CDSSLCardinal_sdkDataOwnerTypeCompanion, CDSSLCardinal_sdkCodeStub, CDSSLCardinal_sdkCryptoActorStubCompanion, CDSSLCardinal_sdkDecryptedAccessLog, CDSSLCardinal_sdkEncryptedAccessLog, CDSSLCardinal_sdkUser, CDSSLCardinal_sdkAccessLevel, CDSSLCardinal_sdkDocIdentifier, CDSSLCardinal_sdkIdWithMandatoryRev, CDSSLCardinal_sdkAccessLogShareOptions, CDSSLCardinal_sdkPaginatedList<T>, CDSSLCardinal_sdkDecryptedCalendarItem, CDSSLCardinal_sdkEncryptedCalendarItem, CDSSLCardinal_sdkCalendarItemShareOptions, CDSSLCardinal_sdkSubscriptionEventType, CDSSLCardinal_sdkEntitySubscriptionConfiguration, CDSSLCardinal_sdkKeyPairUpdateNotification, CDSSLCardinal_sdkDecryptedClassification, CDSSLCardinal_sdkEncryptedClassification, CDSSLCardinal_sdkClassificationShareOptions, CDSSLCardinal_sdkDecryptedContact, CDSSLCardinal_sdkEncryptedContact, CDSSLCardinal_sdkEncryptedService, CDSSLCardinal_sdkDecryptedService, CDSSLCardinal_sdkIcureStub, CDSSLCardinal_sdkLabelledOccurence, CDSSLCardinal_sdkContactShareOptions, CDSSLCardinal_sdkDecryptedDocument, CDSSLCardinal_sdkEncryptedDocument, CDSSLCardinal_sdkDocumentShareOptions, CDSSLCardinal_sdkDecryptedForm, CDSSLCardinal_sdkEncryptedForm, CDSSLCardinal_sdkFormTemplate, CDSSLCardinal_sdkFormShareOptions, CDSSLCardinal_sdkDecryptedHealthElement, CDSSLCardinal_sdkEncryptedHealthElement, CDSSLCardinal_sdkHealthElementShareOptions, CDSSLCardinal_sdkDecryptedInvoice, CDSSLCardinal_sdkEncryptedInvoice, CDSSLCardinal_sdkInvoiceShareOptions, CDSSLCardinal_sdkEncryptedInvoicingCode, CDSSLCardinal_sdkMediumType, CDSSLCardinal_sdkInvoiceType, CDSSLCardinal_sdkDecryptedMaintenanceTask, CDSSLCardinal_sdkEncryptedMaintenanceTask, CDSSLCardinal_sdkMaintenanceTaskShareOptions, CDSSLCardinal_sdkDecryptedMessage, CDSSLCardinal_sdkEncryptedMessage, CDSSLCardinal_sdkMessageShareOptions, CDSSLCardinal_sdkDecryptedPatient, CDSSLCardinal_sdkIdWithRev, CDSSLCardinal_sdkEncryptedPatient, CDSSLCardinal_sdkEntityWithTypeInfo<T>, CDSSLCardinal_sdkShareAllPatientDataOptionsTag, CDSSLCardinal_sdkShareAllPatientDataOptionsResult, CDSSLCardinal_sdkEntityAccessInformation, CDSSLCardinal_sdkPatientShareOptions, CDSSLCardinal_sdkSortDirection, CDSSLCardinal_sdkDecryptedReceipt, CDSSLCardinal_sdkEncryptedReceipt, CDSSLCardinal_sdkReceiptShareOptions, CDSSLCardinal_sdkRecoveryKeySize, CDSSLCardinal_sdkRecoveryDataUseFailureReason, CDSSLCardinal_sdkDecryptedTimeTable, CDSSLCardinal_sdkEncryptedTimeTable, CDSSLCardinal_sdkTimeTableShareOptions, CDSSLCardinal_sdkDecryptedTopic, CDSSLCardinal_sdkEncryptedTopic, CDSSLCardinal_sdkTopicShareOptions, CDSSLCardinal_sdkTopicRole, CDSSLCardinal_sdkAgenda, CDSSLCardinal_sdkApplicationSettings, CDSSLCardinal_sdkCode, CDSSLCardinal_sdkBooleanResponse, CDSSLCardinal_sdkDevice, CDSSLCardinal_sdkDocumentTemplate, CDSSLCardinal_sdkEntityReference, CDSSLCardinal_sdkEntityTemplate, CDSSLCardinal_sdkFrontEndMigration, CDSSLCardinal_sdkGroup, CDSSLCardinal_sdkGroupType, CDSSLCardinal_sdkDatabaseInitialisation, CDSSLCardinal_sdkUserType, CDSSLCardinal_sdkRoleConfiguration, CDSSLCardinal_sdkGroupDatabasesInfo, CDSSLCardinal_sdkOperation, CDSSLCardinal_sdkReplicationInfo, CDSSLCardinal_sdkGroupDeletionReport, CDSSLCardinal_sdkDesignDocument, CDSSLCardinal_sdkListOfProperties, CDSSLCardinal_sdkPermissionType, CDSSLCardinal_sdkRegistrationInformation, CDSSLCardinal_sdkRegistrationSuccess, CDSSLCardinal_sdkHealthcareParty, CDSSLCardinal_sdkPublicKey, CDSSLCardinal_sdkDataOwnerRegistrationSuccess, CDSSLCardinal_sdkInsurance, CDSSLCardinal_sdkKeyword, CDSSLCardinal_sdkMedicalLocation, CDSSLCardinal_sdkListOfIds, CDSSLCardinal_sdkPermission, CDSSLCardinal_sdkPlace, CDSSLCardinal_sdkRole, CDSSLCardinal_sdkIndexingInfo, CDSSLCardinal_sdkReplicatorDocument, CDSSLCardinal_sdkTarification, CDSSLCardinal_sdkEnable2faRequest, CDSSLCardinal_sdkUserGroup, CDSSLCardinal_sdkTokenWithGroup, CDSSLCardinal_sdkEncryptedPropertyStub, CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfoCompanion, CDSSLCardinal_sdkRecoveryDataKeyCompanion, CDSSLKtor_httpUrlCompanion, CDSSLKtor_httpURLProtocol, CDSSLKtor_httpHttpMethodCompanion, CDSSLKtor_httpContentType, CDSSLKotlinCancellationException, CDSSLKtor_httpHttpStatusCodeCompanion, CDSSLKtor_utilsWeekDay, CDSSLKtor_utilsMonth, CDSSLKtor_utilsGMTDateCompanion, CDSSLKtor_httpHttpProtocolVersionCompanion, CDSSLKotlinAbstractCoroutineContextKey<B, E>, CDSSLKtor_utilsStringValuesBuilderImpl, CDSSLKtor_httpURLBuilderCompanion, CDSSLCardinal_sdkCodeStubCompanion, CDSSLKotlinx_datetimeInstant, CDSSLCardinal_sdkSecurityMetadata, CDSSLCardinal_sdkDelegation, CDSSLCardinal_sdkDecryptedAccessLogCompanion, CDSSLCardinal_sdkEncryptedAccessLogCompanion, CDSSLCardinal_sdkGender, CDSSLCardinal_sdkDeactivationReason, CDSSLCardinal_sdkEmploymentInfo, CDSSLCardinal_sdkIdentifier, CDSSLCardinal_sdkAnnotation, CDSSLCardinal_sdkPartnership, CDSSLCardinal_sdkPersonalStatus, CDSSLCardinal_sdkSchoolingInfo, CDSSLCardinal_sdkPersonName, CDSSLCardinal_sdkDecryptedPropertyStub, CDSSLCardinal_sdkUsersType, CDSSLCardinal_sdkUsersStatus, CDSSLCardinal_sdkDelegationTag, CDSSLCardinal_sdkAuthenticationToken, CDSSLCardinal_sdkUserSystemMetadata, CDSSLCardinal_sdkUserCompanion, CDSSLCardinal_sdkAccessLevelCompanion, CDSSLCardinal_sdkDocIdentifierCompanion, CDSSLCardinal_sdkIdWithMandatoryRevCompanion, CDSSLCardinal_sdkRequestedPermission, CDSSLCardinal_sdkShareMetadataBehaviour, CDSSLCardinal_sdkAccessLogShareOptionsCompanion, CDSSLCardinal_sdkPaginatedDocumentKeyIdPair, CDSSLCardinal_sdkPaginatedListCompanion, CDSSLCardinal_sdkFlowItem, CDSSLCardinal_sdkCalendarItemTag, CDSSLCardinal_sdkDecryptedAddress, CDSSLCardinal_sdkDecryptedCalendarItemCompanion, CDSSLCardinal_sdkEncryptedAddress, CDSSLCardinal_sdkEncryptedCalendarItemCompanion, CDSSLCardinal_sdkCalendarItemShareOptionsCompanion, CDSSLCardinal_sdkSubscriptionEventTypeCompanion, CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour, CDSSLCardinal_sdkEntitySubscriptionConfigurationCompanion, CDSSLCardinal_sdkEntitySubscriptionCloseReason, CDSSLCardinal_sdkKeyPairUpdateNotificationCompanion, CDSSLCardinal_sdkDecryptedClassificationCompanion, CDSSLCardinal_sdkEncryptedClassificationCompanion, CDSSLCardinal_sdkClassificationShareOptionsCompanion, CDSSLCardinal_sdkParticipantType, CDSSLCardinal_sdkDecryptedSubContact, CDSSLCardinal_sdkDecryptedContactCompanion, CDSSLCardinal_sdkEncryptedSubContact, CDSSLCardinal_sdkEncryptedContactCompanion, CDSSLCardinal_sdkLinkQualification, CDSSLCardinal_sdkEncryptedContent, CDSSLCardinal_sdkEncryptedServiceCompanion, CDSSLCardinal_sdkDecryptedContent, CDSSLCardinal_sdkDecryptedServiceCompanion, CDSSLCardinal_sdkIcureStubCompanion, CDSSLCardinal_sdkLabelledOccurenceCompanion, CDSSLCardinal_sdkContactShareOptionsCompanion, CDSSLCardinal_sdkShamirUpdateRequest, CDSSLCardinal_sdkDeletedAttachment, CDSSLCardinal_sdkDocumentLocation, CDSSLCardinal_sdkDocumentStatus, CDSSLCardinal_sdkDocumentType, CDSSLCardinal_sdkDataAttachment, CDSSLCardinal_sdkDecryptedDocumentCompanion, CDSSLCardinal_sdkEncryptedDocumentCompanion, CDSSLCardinal_sdkMessageAttachment, CDSSLCardinal_sdkMessageReadStatus, CDSSLCardinal_sdkDocumentShareOptionsCompanion, CDSSLCardinal_sdkDecryptedFormCompanion, CDSSLCardinal_sdkEncryptedFormCompanion, CDSSLCardinal_sdkFormTemplateLayout, CDSSLCardinal_sdkDocumentGroup, CDSSLCardinal_sdkFormTemplateCompanion, CDSSLCardinal_sdkFormShareOptionsCompanion, CDSSLCardinal_sdkLaterality, CDSSLCardinal_sdkDecryptedPlanOfAction, CDSSLCardinal_sdkDecryptedEpisode, CDSSLCardinal_sdkDecryptedCareTeamMember, CDSSLCardinal_sdkDecryptedHealthElementCompanion, CDSSLCardinal_sdkEncryptedPlanOfAction, CDSSLCardinal_sdkEncryptedEpisode, CDSSLCardinal_sdkEncryptedCareTeamMember, CDSSLCardinal_sdkEncryptedHealthElementCompanion, CDSSLCardinal_sdkHealthElementShareOptionsCompanion, CDSSLCardinal_sdkIdentityDocumentReader, CDSSLCardinal_sdkInvoiceInterventionType, CDSSLCardinal_sdkPaymentType, CDSSLCardinal_sdkPayment, CDSSLCardinal_sdkDecryptedInvoicingCode, CDSSLCardinal_sdkDecryptedInvoiceCompanion, CDSSLCardinal_sdkEncryptedInvoiceCompanion, CDSSLCardinal_sdkInvoiceShareOptionsCompanion, CDSSLCardinal_sdkEncryptedInvoicingCodeCompanion, CDSSLCardinal_sdkMediumTypeCompanion, CDSSLCardinal_sdkInvoiceTypeCompanion, CDSSLCardinal_sdkTaskStatus, CDSSLCardinal_sdkDecryptedMaintenanceTaskCompanion, CDSSLCardinal_sdkEncryptedMaintenanceTaskCompanion, CDSSLCardinal_sdkMaintenanceTaskShareOptionsCompanion, CDSSLCardinal_sdkDecryptedMessageCompanion, CDSSLCardinal_sdkEncryptedMessageCompanion, CDSSLCardinal_sdkMessageShareOptionsCompanion, CDSSLCardinal_sdkDecryptedInsurability, CDSSLCardinal_sdkDecryptedPatientHealthCareParty, CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation, CDSSLCardinal_sdkDecryptedMedicalHouseContract, CDSSLCardinal_sdkDecryptedPatientCompanion, CDSSLCardinal_sdkIdWithRevCompanion, CDSSLCardinal_sdkEncryptedInsurability, CDSSLCardinal_sdkEncryptedPatientHealthCareParty, CDSSLCardinal_sdkEncryptedFinancialInstitutionInformation, CDSSLCardinal_sdkEncryptedMedicalHouseContract, CDSSLCardinal_sdkEncryptedPatientCompanion, CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName, CDSSLCardinal_sdkEntityWithTypeInfoCompanion, CDSSLCardinal_sdkShareAllPatientDataOptionsTagCompanion, CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity, CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResult, CDSSLCardinal_sdkShareAllPatientDataOptionsResultCompanion, CDSSLCardinal_sdkEntityAccessInformationCompanion, CDSSLCardinal_sdkPatientShareOptionsCompanion, CDSSLCardinal_sdkSortDirectionCompanion, CDSSLCardinal_sdkReceiptBlobType, CDSSLCardinal_sdkDecryptedReceiptCompanion, CDSSLCardinal_sdkEncryptedReceiptCompanion, CDSSLCardinal_sdkReceiptShareOptionsCompanion, CDSSLCardinal_sdkRecoveryDataUseFailureReasonCompanion, CDSSLCardinal_sdkTimeTableItem, CDSSLCardinal_sdkDecryptedTimeTableCompanion, CDSSLCardinal_sdkEncryptedTimeTableCompanion, CDSSLCardinal_sdkTimeTableShareOptionsCompanion, CDSSLCardinal_sdkDecryptedTopicCompanion, CDSSLCardinal_sdkEncryptedTopicCompanion, CDSSLCardinal_sdkTopicShareOptionsCompanion, CDSSLCardinal_sdkTopicRoleCompanion, CDSSLCardinal_sdkRight, CDSSLCardinal_sdkAgendaCompanion, CDSSLCardinal_sdkApplicationSettingsCompanion, CDSSLCardinal_sdkPeriodicity, CDSSLCardinal_sdkCodeFlag, CDSSLCardinal_sdkAppendixType, CDSSLCardinal_sdkCodeCompanion, CDSSLCardinal_sdkBooleanResponseCompanion, CDSSLCardinal_sdkDeviceCompanion, CDSSLCardinal_sdkReportVersion, CDSSLCardinal_sdkDocumentTemplateCompanion, CDSSLCardinal_sdkEntityReferenceCompanion, CDSSLCardinal_sdkEntityTemplateCompanion, CDSSLCardinal_sdkFrontEndMigrationStatus, CDSSLCardinal_sdkFrontEndMigrationCompanion, CDSSLCardinal_sdkOperationToken, CDSSLCardinal_sdkAuthenticationClass, CDSSLCardinal_sdkGroupCompanion, CDSSLCardinal_sdkGroupTypeCompanion, CDSSLCardinal_sdkReplication, CDSSLCardinal_sdkDatabaseInitialisationCompanion, CDSSLCardinal_sdkUserTypeCompanion, CDSSLCardinal_sdkRoleConfigurationSource, CDSSLCardinal_sdkRoleConfigurationCompanion, CDSSLCardinal_sdkDatabaseInfo, CDSSLCardinal_sdkGroupDatabasesInfoCompanion, CDSSLCardinal_sdkOperationCompanion, CDSSLCardinal_sdkReplicationInfoCompanion, CDSSLCardinal_sdkGroupDeletionReportCompanion, CDSSLCardinal_sdkView, CDSSLCardinal_sdkDesignDocumentCompanion, CDSSLCardinal_sdkListOfPropertiesCompanion, CDSSLCardinal_sdkPermissionTypeCompanion, CDSSLCardinal_sdkRegistrationInformationCompanion, CDSSLCardinal_sdkRegistrationSuccessCompanion, CDSSLCardinal_sdkHealthcarePartyStatus, CDSSLCardinal_sdkHealthcarePartyHistoryStatus, CDSSLCardinal_sdkTelecomType, CDSSLCardinal_sdkDecryptedFlatRateTarification, CDSSLCardinal_sdkHealthcarePartyCompanion, CDSSLCardinal_sdkPublicKeyCompanion, CDSSLCardinal_sdkDataOwnerRegistrationSuccessCompanion, CDSSLCardinal_sdkInsuranceCompanion, CDSSLCardinal_sdkKeywordSubword, CDSSLCardinal_sdkKeywordCompanion, CDSSLCardinal_sdkMedicalLocationCompanion, CDSSLCardinal_sdkListOfIdsCompanion, CDSSLCardinal_sdkPermissionCompanion, CDSSLCardinal_sdkPlaceCompanion, CDSSLCardinal_sdkRoleCompanion, CDSSLCardinal_sdkIndexingInfoCompanion, CDSSLCardinal_sdkRemote, CDSSLCardinal_sdkZonedDateTime, CDSSLCardinal_sdkReplicationStats, CDSSLCardinal_sdkReplicatorDocumentCompanion, CDSSLCardinal_sdkDecryptedValorisation, CDSSLCardinal_sdkLetterValue, CDSSLCardinal_sdkTarificationCompanion, CDSSLCardinal_sdkEnable2faRequestCompanion, CDSSLCardinal_sdkUserGroupCompanion, CDSSLCardinal_sdkTokenWithGroupCompanion, CDSSLCardinal_sdkPropertyTypeStub, CDSSLCardinal_sdkEncryptedTypedValue, CDSSLCardinal_sdkEncryptedPropertyStubCompanion, CDSSLKtor_httpURLProtocolCompanion, CDSSLKtor_httpHeaderValueParam, CDSSLKtor_httpHeaderValueWithParametersCompanion, CDSSLKtor_httpHeaderValueWithParameters, CDSSLKtor_httpContentTypeCompanion, CDSSLKtor_utilsWeekDayCompanion, CDSSLKtor_utilsMonthCompanion, CDSSLKotlinKTypeProjection, CDSSLKotlinx_io_coreBuffer, CDSSLKotlinx_datetimeInstantCompanion, CDSSLCardinal_sdkSecureDelegation, CDSSLCardinal_sdkSecurityMetadataCompanion, CDSSLCardinal_sdkDelegationCompanion, CDSSLCardinal_sdkGenderCompanion, CDSSLCardinal_sdkDeactivationReasonCompanion, CDSSLCardinal_sdkEmployer, CDSSLCardinal_sdkEmploymentInfoCompanion, CDSSLCardinal_sdkIdentifierCompanion, CDSSLCardinal_sdkContractChangeType, CDSSLCardinal_sdkMhcSignatureType, CDSSLCardinal_sdkSuspensionReason, CDSSLCardinal_sdkAnnotationCompanion, CDSSLCardinal_sdkPartnershipType, CDSSLCardinal_sdkPartnershipStatus, CDSSLCardinal_sdkPartnershipCompanion, CDSSLCardinal_sdkReferralPeriod, CDSSLCardinal_sdkPatientHealthCarePartyType, CDSSLCardinal_sdkPersonalStatusCompanion, CDSSLCardinal_sdkSchoolingInfoCompanion, CDSSLCardinal_sdkAddressType, CDSSLCardinal_sdkPersonNameUse, CDSSLCardinal_sdkPersonNameCompanion, CDSSLCardinal_sdkDecryptedTypedValue, CDSSLCardinal_sdkDecryptedPropertyStubCompanion, CDSSLCardinal_sdkUsersTypeCompanion, CDSSLCardinal_sdkUsersStatusCompanion, CDSSLCardinal_sdkDelegationTagCompanion, CDSSLCardinal_sdkAuthenticationTokenCompanion, CDSSLCardinal_sdkUserSystemMetadataCompanion, CDSSLCardinal_sdkRequestedPermissionCompanion, CDSSLCardinal_sdkShareMetadataBehaviourCompanion, CDSSLCardinal_sdkPaginatedDocumentKeyIdPairCompanion, CDSSLCardinal_sdkFlowItemCompanion, CDSSLCardinal_sdkCalendarItemTagCompanion, CDSSLCardinal_sdkDecryptedTelecom, CDSSLCardinal_sdkDecryptedAddressCompanion, CDSSLCardinal_sdkEncryptedTelecom, CDSSLCardinal_sdkEncryptedAddressCompanion, CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviourCompanion, CDSSLCardinal_sdkEntitySubscriptionCloseReasonCompanion, CDSSLCardinal_sdkParticipantTypeCompanion, CDSSLCardinal_sdkServiceLink, CDSSLCardinal_sdkDecryptedSubContactCompanion, CDSSLCardinal_sdkEncryptedSubContactCompanion, CDSSLCardinal_sdkMeasure, CDSSLCardinal_sdkMedication, CDSSLCardinal_sdkTimeSeries, CDSSLCardinal_sdkLinkQualificationCompanion, CDSSLCardinal_sdkEncryptedContentCompanion, CDSSLCardinal_sdkDecryptedContentCompanion, CDSSLCardinal_sdkShamirUpdateRequestCompanion, CDSSLCardinal_sdkDeletedAttachmentCompanion, CDSSLCardinal_sdkDocumentLocationCompanion, CDSSLCardinal_sdkDocumentStatusCompanion, CDSSLCardinal_sdkDocumentTypeCompanion, CDSSLCardinal_sdkDataAttachmentCompanion, CDSSLCardinal_sdkMessageAttachmentCompanion, CDSSLCardinal_sdkMessageReadStatusCompanion, CDSSLCardinal_sdkAction, CDSSLCardinal_sdkSection, CDSSLCardinal_sdkFormTemplateLayoutCompanion, CDSSLCardinal_sdkDocumentGroupCompanion, CDSSLCardinal_sdkCareTeamMemberType, CDSSLCardinal_sdkLateralityCompanion, CDSSLCardinal_sdkDecryptedPlanOfActionCompanion, CDSSLCardinal_sdkDecryptedEpisodeCompanion, CDSSLCardinal_sdkDecryptedCareTeamMemberCompanion, CDSSLCardinal_sdkEncryptedPlanOfActionCompanion, CDSSLCardinal_sdkEncryptedEpisodeCompanion, CDSSLCardinal_sdkEncryptedCareTeamMemberCompanion, CDSSLCardinal_sdkIdentityDocumentReaderCompanion, CDSSLCardinal_sdkInvoiceInterventionTypeCompanion, CDSSLCardinal_sdkPaymentTypeCompanion, CDSSLCardinal_sdkPaymentCompanion, CDSSLCardinal_sdkDecryptedInvoicingCodeCompanion, CDSSLCardinal_sdkTaskStatusCompanion, CDSSLCardinal_sdkDecryptedInsurabilityCompanion, CDSSLCardinal_sdkDecryptedPatientHealthCarePartyCompanion, CDSSLCardinal_sdkDecryptedFinancialInstitutionInformationCompanion, CDSSLCardinal_sdkDecryptedMedicalHouseContractCompanion, CDSSLCardinal_sdkEncryptedInsurabilityCompanion, CDSSLCardinal_sdkEncryptedPatientHealthCarePartyCompanion, CDSSLCardinal_sdkEncryptedFinancialInstitutionInformationCompanion, CDSSLCardinal_sdkEncryptedMedicalHouseContractCompanion, CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeNameCompanion, CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntityCompanion, CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResultCompanion, CDSSLCardinal_sdkReceiptBlobTypeCompanion, CDSSLCardinal_sdkTimeTableHour, CDSSLCardinal_sdkTimeTableItemCompanion, CDSSLCardinal_sdkRightCompanion, CDSSLCardinal_sdkPeriodicityCompanion, CDSSLCardinal_sdkCodeFlagCompanion, CDSSLCardinal_sdkAppendixTypeCompanion, CDSSLCardinal_sdkReportVersionCompanion, CDSSLCardinal_sdkFrontEndMigrationStatusCompanion, CDSSLCardinal_sdkOperationTokenCompanion, CDSSLCardinal_sdkAuthenticationClassCompanion, CDSSLCardinal_sdkDatabaseSynchronization, CDSSLCardinal_sdkReplicationCompanion, CDSSLCardinal_sdkRoleConfigurationSourceCompanion, CDSSLCardinal_sdkDatabaseInfoCompanion, CDSSLCardinal_sdkViewCompanion, CDSSLCardinal_sdkHealthcarePartyStatusCompanion, CDSSLCardinal_sdkHealthcarePartyHistoryStatusCompanion, CDSSLCardinal_sdkTelecomTypeCompanion, CDSSLCardinal_sdkFlatRateType, CDSSLCardinal_sdkDecryptedFlatRateTarificationCompanion, CDSSLCardinal_sdkKeywordSubwordCompanion, CDSSLCardinal_sdkRemoteAuthentication, CDSSLCardinal_sdkRemoteCompanion, CDSSLKotlinx_datetimeLocalDateTime, CDSSLKotlinx_datetimeUtcOffset, CDSSLKotlinx_datetimeTimeZone, CDSSLCardinal_sdkZonedDateTimeCompanion, CDSSLCardinal_sdkReplicationStatsCompanion, CDSSLCardinal_sdkDecryptedValorisationCompanion, CDSSLCardinal_sdkLetterValueCompanion, CDSSLCardinal_sdkTypedValuesType, CDSSLCardinal_sdkPropertyTypeStubCompanion, CDSSLCardinal_sdkEncryptedTypedValueCompanion, CDSSLKotlinKVariance, CDSSLKotlinKTypeProjectionCompanion, CDSSLCardinal_sdkSecureDelegationCompanion, CDSSLCardinal_sdkEmployerCompanion, CDSSLCardinal_sdkContractChangeTypeCompanion, CDSSLCardinal_sdkMhcSignatureTypeCompanion, CDSSLCardinal_sdkSuspensionReasonCompanion, CDSSLCardinal_sdkPartnershipTypeCompanion, CDSSLCardinal_sdkPartnershipStatusCompanion, CDSSLCardinal_sdkReferralPeriodCompanion, CDSSLCardinal_sdkPatientHealthCarePartyTypeCompanion, CDSSLCardinal_sdkAddressTypeCompanion, CDSSLCardinal_sdkPersonNameUseCompanion, CDSSLCardinal_sdkDecryptedTypedValueCompanion, CDSSLCardinal_sdkDecryptedTelecomCompanion, CDSSLCardinal_sdkEncryptedTelecomCompanion, CDSSLCardinal_sdkServiceLinkCompanion, CDSSLCardinal_sdkReferenceRange, CDSSLCardinal_sdkMeasureCompanion, CDSSLCardinal_sdkSubstanceproduct, CDSSLCardinal_sdkMedicinalproduct, CDSSLCardinal_sdkDuration, CDSSLCardinal_sdkRenewal, CDSSLCardinal_sdkRegimenItem, CDSSLCardinal_sdkParagraphAgreement, CDSSLCardinal_sdkSuspension, CDSSLCardinal_sdkMedicationCompanion, CDSSLCardinal_sdkTimeSeriesCompanion, CDSSLCardinal_sdkLauncher, CDSSLCardinal_sdkState, CDSSLCardinal_sdkActionCompanion, CDSSLCardinal_sdkSectionCompanion, CDSSLCardinal_sdkCareTeamMemberTypeCompanion, CDSSLCardinal_sdkTimeTableHourCompanion, CDSSLCardinal_sdkDatabaseSynchronizationTarget, CDSSLCardinal_sdkDatabaseSynchronizationCompanion, CDSSLCardinal_sdkFlatRateTypeCompanion, CDSSLCardinal_sdkBasic, CDSSLCardinal_sdkRemoteAuthenticationCompanion, CDSSLKotlinx_datetimeLocalDate, CDSSLKotlinx_datetimeLocalTime, CDSSLKotlinx_datetimeMonth, CDSSLKotlinx_datetimeLocalDateTimeCompanion, CDSSLKotlinx_datetimeDayOfWeek, CDSSLKotlinx_datetimeUtcOffsetCompanion, CDSSLKotlinx_datetimeTimeZoneCompanion, CDSSLCardinal_sdkTypedValuesTypeCompanion, CDSSLCardinal_sdkRange, CDSSLCardinal_sdkReferenceRangeCompanion, CDSSLCardinal_sdkSubstanceproductCompanion, CDSSLCardinal_sdkMedicinalproductCompanion, CDSSLCardinal_sdkDurationCompanion, CDSSLCardinal_sdkRenewalCompanion, CDSSLCardinal_sdkWeekday, CDSSLCardinal_sdkAdministrationQuantity, CDSSLCardinal_sdkRegimenItemCompanion, CDSSLCardinal_sdkAgreementAppendix, CDSSLCardinal_sdkParagraphAgreementCompanion, CDSSLCardinal_sdkSuspensionCompanion, CDSSLCardinal_sdkTrigger, CDSSLCardinal_sdkLauncherCompanion, CDSSLCardinal_sdkStateToUpdate, CDSSLCardinal_sdkStateCompanion, CDSSLCardinal_sdkDatabaseSynchronizationTargetCompanion, CDSSLCardinal_sdkBasicCompanion, CDSSLKotlinx_datetimeLocalDateCompanion, CDSSLKotlinx_datetimeLocalTimeCompanion, CDSSLKotlinx_datetimeFixedOffsetTimeZone, CDSSLCardinal_sdkRangeCompanion, CDSSLCardinal_sdkWeekdayCompanion, CDSSLCardinal_sdkAdministrationQuantityCompanion, CDSSLCardinal_sdkAgreementAppendixCompanion, CDSSLCardinal_sdkTriggerCompanion, CDSSLCardinal_sdkStateToUpdateCompanion, CDSSLKotlinx_datetimePadding, CDSSLKotlinx_datetimeDayOfWeekNames, CDSSLKotlinx_datetimeMonthNames, CDSSLKotlinx_datetimeFixedOffsetTimeZoneCompanion, CDSSLKotlinx_datetimeDayOfWeekNamesCompanion, CDSSLKotlinx_datetimeMonthNamesCompanion;

@protocol CDSSLCardinal_sdkStorageFacade, CDSSLCardinal_sdkAuthenticationMethod, CDSSLKotlinx_serialization_coreKSerializer, CDSSLAuthenticationMethod, CDSSLCredentials, CDSSLCardinal_sdkCaptchaOptions, CDSSLCaptchaOptions, CDSSLCaptchaOptionsKerberus, CDSSLCardinal_sdkCredentials, CDSSLDartStorageOptions, CDSSLKotlinSuspendFunction0, CDSSLKotlinx_serialization_coreEncoder, CDSSLKotlinx_serialization_coreSerialDescriptor, CDSSLKotlinx_serialization_coreSerializationStrategy, CDSSLKotlinx_serialization_coreDecoder, CDSSLKotlinx_serialization_coreDeserializationStrategy, CDSSLKotlinIterator, CDSSLCardinal_sdkCaptchaOptionsKerberus, CDSSLKotlinComparable, CDSSLLibCryptoService, CDSSLKotlinSuspendFunction1, CDSSLCardinal_sdkCommonSdkOptions, CDSSLCardinal_sdkKeyStorageFacade, CDSSLCardinal_sdkCryptoStrategies, CDSSLCardinal_sdkJsonPatcher, CDSSLKotlinFunction, CDSSLKotlinx_serialization_coreCompositeEncoder, CDSSLKotlinAnnotation, CDSSLKotlinx_serialization_coreCompositeDecoder, CDSSLLibAesService, CDSSLLibDigestService, CDSSLLibHmacService, CDSSLLibRsaService, CDSSLLibStrongRandom, CDSSLKotlinCoroutineContext, CDSSLKotlinx_coroutines_coreCoroutineScope, CDSSLKtor_ioCloseable, CDSSLKtor_client_coreHttpClientEngine, CDSSLKtor_client_coreHttpClientEngineCapability, CDSSLKtor_utilsAttributes, CDSSLKotlinx_serialization_coreSerialFormat, CDSSLKotlinx_serialization_coreStringFormat, CDSSLCardinal_sdkDataOwnerWithType, CDSSLCardinal_sdkCryptoStrategiesKeyGenerationRequestResult, CDSSLCardinal_sdkCardinalApis, CDSSLCardinal_sdkKeyPairRecoverer, CDSSLKotlinx_serialization_coreSerializersModuleCollector, CDSSLKotlinKClass, CDSSLLibAesAlgorithm, CDSSLLibHmacAlgorithm, CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm, CDSSLLibRsaAlgorithm, CDSSLLibRsaAlgorithmRsaSignatureAlgorithm, CDSSLKotlinCoroutineContextElement, CDSSLKotlinCoroutineContextKey, CDSSLKtor_client_coreHttpClientPlugin, CDSSLKotlinx_coroutines_coreDisposableHandle, CDSSLKotlinSuspendFunction2, CDSSLKotlinx_serialization_jsonJsonNamingStrategy, CDSSLCardinal_sdkCryptoActor, CDSSLCardinal_sdkAccessLogApi, CDSSLCardinal_sdkCalendarItemApi, CDSSLCardinal_sdkCardinalMaintenanceTaskApi, CDSSLCardinal_sdkClassificationApi, CDSSLCardinal_sdkContactApi, CDSSLCardinal_sdkCryptoApi, CDSSLCardinal_sdkDataOwnerApi, CDSSLCardinal_sdkDocumentApi, CDSSLCardinal_sdkFormApi, CDSSLCardinal_sdkHealthElementApi, CDSSLCardinal_sdkInvoiceApi, CDSSLCardinal_sdkMaintenanceTaskApi, CDSSLCardinal_sdkMessageApi, CDSSLCardinal_sdkPatientApi, CDSSLCardinal_sdkReceiptApi, CDSSLCardinal_sdkRecoveryApi, CDSSLCardinal_sdkTimeTableApi, CDSSLCardinal_sdkTopicApi, CDSSLCardinal_sdkAgendaApi, CDSSLCardinal_sdkApplicationSettingsApi, CDSSLCardinal_sdkCodeApi, CDSSLCardinal_sdkDeviceApi, CDSSLCardinal_sdkDocumentTemplateApi, CDSSLCardinal_sdkEntityReferenceApi, CDSSLCardinal_sdkEntityTemplateApi, CDSSLCardinal_sdkFrontEndMigrationApi, CDSSLCardinal_sdkGroupApi, CDSSLCardinal_sdkHealthcarePartyApi, CDSSLCardinal_sdkInsuranceApi, CDSSLCardinal_sdkKeywordApi, CDSSLCardinal_sdkMedicalLocationApi, CDSSLCardinal_sdkPermissionApi, CDSSLCardinal_sdkPlaceApi, CDSSLCardinal_sdkRoleApi, CDSSLCardinal_sdkSystemApi, CDSSLCardinal_sdkTarificationApi, CDSSLCardinal_sdkUserApi, CDSSLCardinal_sdkCardinalNonCryptoApis, CDSSLLibRsaKey, CDSSLCardinal_sdkRecoveryResult, CDSSLKotlinKDeclarationContainer, CDSSLKotlinKAnnotatedElement, CDSSLKotlinKClassifier, CDSSLLibJwkKey, CDSSLLibRsaKeyJwk, CDSSLKtor_httpHeaders, CDSSLKotlinx_coroutines_coreJob, CDSSLKotlinContinuation, CDSSLKotlinContinuationInterceptor, CDSSLKotlinx_coroutines_coreRunnable, CDSSLKtor_httpHttpMessage, CDSSLKtor_ioByteReadChannel, CDSSLKtor_httpHttpMessageBuilder, CDSSLKtor_client_coreHttpRequest, CDSSLCardinal_sdkIdentifiable, CDSSLCardinal_sdkVersionable, CDSSLCardinal_sdkHasTags, CDSSLCardinal_sdkAccessLog, CDSSLCardinal_sdkFilterOptions, CDSSLCardinal_sdkSortableFilterOptions, CDSSLCardinal_sdkPatient, CDSSLCardinal_sdkSecretIdUseOption, CDSSLCardinal_sdkAccessLogFlavouredApi, CDSSLCardinal_sdkAccessLogBasicFlavourlessApi, CDSSLCardinal_sdkPaginatedListIterator, CDSSLCardinal_sdkAccessLogBasicFlavouredApi, CDSSLCardinal_sdkCalendarItem, CDSSLCardinal_sdkCalendarItemFlavouredApi, CDSSLCardinal_sdkCalendarItemBasicFlavourlessApi, CDSSLCardinal_sdkCalendarItemBasicFlavouredApi, CDSSLCardinal_sdkEntitySubscription, CDSSLCardinal_sdkSubscribable, CDSSLCardinal_sdkClassification, CDSSLCardinal_sdkClassificationFlavouredApi, CDSSLCardinal_sdkClassificationBasicFlavourlessApi, CDSSLCardinal_sdkClassificationBasicFlavouredApi, CDSSLCardinal_sdkContact, CDSSLCardinal_sdkService, CDSSLCardinal_sdkContactFlavouredApi, CDSSLCardinal_sdkContactBasicFlavourlessApi, CDSSLCardinal_sdkContactBasicFlavouredApi, CDSSLCardinal_sdkShamirKeysManagerApi, CDSSLCardinal_sdkDocument, CDSSLCardinal_sdkMessage, CDSSLCardinal_sdkDocumentFlavouredApi, CDSSLCardinal_sdkDocumentBasicFlavourlessApi, CDSSLCardinal_sdkDocumentBasicFlavouredApi, CDSSLCardinal_sdkForm, CDSSLCardinal_sdkFormFlavouredApi, CDSSLCardinal_sdkFormBasicFlavourlessApi, CDSSLCardinal_sdkFormBasicFlavouredApi, CDSSLCardinal_sdkHealthElement, CDSSLCardinal_sdkHealthElementFlavouredApi, CDSSLCardinal_sdkHealthElementBasicFlavourlessApi, CDSSLCardinal_sdkHealthElementBasicFlavouredApi, CDSSLCardinal_sdkInvoice, CDSSLCardinal_sdkInvoiceFlavouredApi, CDSSLCardinal_sdkInvoiceBasicFlavourlessApi, CDSSLCardinal_sdkInvoiceBasicFlavouredApi, CDSSLCardinal_sdkMaintenanceTask, CDSSLCardinal_sdkMaintenanceTaskFlavouredApi, CDSSLCardinal_sdkMaintenanceTaskBasicFlavourlessApi, CDSSLCardinal_sdkMaintenanceTaskBasicFlavouredApi, CDSSLCardinal_sdkMessageFlavouredApi, CDSSLCardinal_sdkMessageBasicFlavourlessApi, CDSSLCardinal_sdkMessageBasicFlavouredApi, CDSSLCardinal_sdkPatientFlavouredApi, CDSSLCardinal_sdkPatientBasicFlavourlessApi, CDSSLCardinal_sdkPatientBasicFlavouredApi, CDSSLCardinal_sdkReceipt, CDSSLCardinal_sdkReceiptFlavouredApi, CDSSLCardinal_sdkReceiptBasicFlavourlessApi, CDSSLCardinal_sdkReceiptBasicFlavouredApi, CDSSLCardinal_sdkTimeTable, CDSSLCardinal_sdkTimeTableFlavouredApi, CDSSLCardinal_sdkTimeTableBasicFlavourlessApi, CDSSLCardinal_sdkTimeTableBasicFlavouredApi, CDSSLCardinal_sdkTopic, CDSSLCardinal_sdkTopicFlavouredApi, CDSSLCardinal_sdkTopicBasicFlavourlessApi, CDSSLCardinal_sdkTopicBasicFlavouredApi, CDSSLCardinal_sdkBaseFilterOptions, CDSSLCardinal_sdkBaseSortableFilterOptions, CDSSLKtor_httpParameters, CDSSLKotlinMapEntry, CDSSLKtor_utilsStringValues, CDSSLKotlinx_coroutines_coreChildHandle, CDSSLKotlinx_coroutines_coreChildJob, CDSSLKotlinSequence, CDSSLKotlinx_coroutines_coreSelectClause0, CDSSLKotlinKType, CDSSLKotlinx_io_coreSource, CDSSLKtor_utilsStringValuesBuilder, CDSSLKtor_httpParametersBuilder, CDSSLCardinal_sdkCodeIdentification, CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkHasCodes, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable, CDSSLCardinal_sdkFinancialInstitutionInformation, CDSSLCardinal_sdkInsurability, CDSSLCardinal_sdkMedicalHouseContract, CDSSLCardinal_sdkPatientHealthCareParty, CDSSLCardinal_sdkPropertyStub, CDSSLCardinal_sdkAddress, CDSSLCardinal_sdkPerson, CDSSLCardinal_sdkSecretIdShareOptions, CDSSLCardinal_sdkSimpleDelegateShareOptions, CDSSLKotlinx_coroutines_coreReceiveChannel, CDSSLCardinal_sdkSubContact, CDSSLCardinal_sdkContent, CDSSLCardinal_sdkCareTeamMember, CDSSLCardinal_sdkEpisode, CDSSLCardinal_sdkPlanOfAction, CDSSLCardinal_sdkInvoicingCode, CDSSLCardinal_sdkNamed, CDSSLCardinal_sdkDataOwner, CDSSLCardinal_sdkPermissionItem, CDSSLCardinal_sdkTypedValue, CDSSLKotlinx_coroutines_coreParentJob, CDSSLKotlinx_coroutines_coreSelectInstance, CDSSLKotlinx_coroutines_coreSelectClause, CDSSLKotlinx_io_coreRawSink, CDSSLKotlinAutoCloseable, CDSSLKotlinx_io_coreRawSource, CDSSLCardinal_sdkTelecom, CDSSLKotlinx_coroutines_coreChannelIterator, CDSSLKotlinx_coroutines_coreSelectClause1, CDSSLCardinal_sdkShareAllPatientDataOptionsSharePatientDataError, CDSSLCardinal_sdkValorisation, CDSSLCardinal_sdkFlatRateTarification, CDSSLCardinal_sdkPredicate, CDSSLKotlinx_io_coreSink, CDSSLKotlinx_datetimeDateTimeFormat, CDSSLCardinal_sdkStructureElement, CDSSLKotlinAppendable, CDSSLKotlinx_datetimeDateTimeFormatBuilderWithDateTime, CDSSLKotlinx_datetimeDateTimeFormatBuilderWithUtcOffset, CDSSLKotlinx_datetimeDateTimeFormatBuilderWithDate, CDSSLKotlinx_datetimeDateTimeFormatBuilderWithTime, CDSSLKotlinx_datetimeDateTimeFormatBuilder;

NS_ASSUME_NONNULL_BEGIN
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wunknown-warning-option"
#pragma clang diagnostic ignored "-Wincompatible-property-type"
#pragma clang diagnostic ignored "-Wnullability"

#pragma push_macro("_Nullable_result")
#if !__has_feature(nullability_nullable_result)
#undef _Nullable_result
#define _Nullable_result _Nullable
#endif

__attribute__((swift_name("KotlinBase")))
@interface CDSSLBase : NSObject
- (instancetype)init __attribute__((unavailable));
+ (instancetype)new __attribute__((unavailable));
+ (void)initialize __attribute__((objc_requires_super));
@end

@interface CDSSLBase (CDSSLBaseCopying) <NSCopying>
@end

__attribute__((swift_name("KotlinMutableSet")))
@interface CDSSLMutableSet<ObjectType> : NSMutableSet<ObjectType>
@end

__attribute__((swift_name("KotlinMutableDictionary")))
@interface CDSSLMutableDictionary<KeyType, ObjectType> : NSMutableDictionary<KeyType, ObjectType>
@end

@interface NSError (NSErrorCDSSLKotlinException)
@property (readonly) id _Nullable kotlinException;
@end

__attribute__((swift_name("KotlinNumber")))
@interface CDSSLNumber : NSNumber
- (instancetype)initWithChar:(char)value __attribute__((unavailable));
- (instancetype)initWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
- (instancetype)initWithShort:(short)value __attribute__((unavailable));
- (instancetype)initWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
- (instancetype)initWithInt:(int)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
- (instancetype)initWithLong:(long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
- (instancetype)initWithLongLong:(long long)value __attribute__((unavailable));
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
- (instancetype)initWithFloat:(float)value __attribute__((unavailable));
- (instancetype)initWithDouble:(double)value __attribute__((unavailable));
- (instancetype)initWithBool:(BOOL)value __attribute__((unavailable));
- (instancetype)initWithInteger:(NSInteger)value __attribute__((unavailable));
- (instancetype)initWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
+ (instancetype)numberWithChar:(char)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedChar:(unsigned char)value __attribute__((unavailable));
+ (instancetype)numberWithShort:(short)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedShort:(unsigned short)value __attribute__((unavailable));
+ (instancetype)numberWithInt:(int)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInt:(unsigned int)value __attribute__((unavailable));
+ (instancetype)numberWithLong:(long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLong:(unsigned long)value __attribute__((unavailable));
+ (instancetype)numberWithLongLong:(long long)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value __attribute__((unavailable));
+ (instancetype)numberWithFloat:(float)value __attribute__((unavailable));
+ (instancetype)numberWithDouble:(double)value __attribute__((unavailable));
+ (instancetype)numberWithBool:(BOOL)value __attribute__((unavailable));
+ (instancetype)numberWithInteger:(NSInteger)value __attribute__((unavailable));
+ (instancetype)numberWithUnsignedInteger:(NSUInteger)value __attribute__((unavailable));
@end

__attribute__((swift_name("KotlinByte")))
@interface CDSSLByte : CDSSLNumber
- (instancetype)initWithChar:(char)value;
+ (instancetype)numberWithChar:(char)value;
@end

__attribute__((swift_name("KotlinUByte")))
@interface CDSSLUByte : CDSSLNumber
- (instancetype)initWithUnsignedChar:(unsigned char)value;
+ (instancetype)numberWithUnsignedChar:(unsigned char)value;
@end

__attribute__((swift_name("KotlinShort")))
@interface CDSSLShort : CDSSLNumber
- (instancetype)initWithShort:(short)value;
+ (instancetype)numberWithShort:(short)value;
@end

__attribute__((swift_name("KotlinUShort")))
@interface CDSSLUShort : CDSSLNumber
- (instancetype)initWithUnsignedShort:(unsigned short)value;
+ (instancetype)numberWithUnsignedShort:(unsigned short)value;
@end

__attribute__((swift_name("KotlinInt")))
@interface CDSSLInt : CDSSLNumber
- (instancetype)initWithInt:(int)value;
+ (instancetype)numberWithInt:(int)value;
@end

__attribute__((swift_name("KotlinUInt")))
@interface CDSSLUInt : CDSSLNumber
- (instancetype)initWithUnsignedInt:(unsigned int)value;
+ (instancetype)numberWithUnsignedInt:(unsigned int)value;
@end

__attribute__((swift_name("KotlinLong")))
@interface CDSSLLong : CDSSLNumber
- (instancetype)initWithLongLong:(long long)value;
+ (instancetype)numberWithLongLong:(long long)value;
@end

__attribute__((swift_name("KotlinULong")))
@interface CDSSLULong : CDSSLNumber
- (instancetype)initWithUnsignedLongLong:(unsigned long long)value;
+ (instancetype)numberWithUnsignedLongLong:(unsigned long long)value;
@end

__attribute__((swift_name("KotlinFloat")))
@interface CDSSLFloat : CDSSLNumber
- (instancetype)initWithFloat:(float)value;
+ (instancetype)numberWithFloat:(float)value;
@end

__attribute__((swift_name("KotlinDouble")))
@interface CDSSLDouble : CDSSLNumber
- (instancetype)initWithDouble:(double)value;
+ (instancetype)numberWithDouble:(double)value;
@end

__attribute__((swift_name("KotlinBoolean")))
@interface CDSSLBoolean : CDSSLNumber
- (instancetype)initWithBool:(BOOL)value;
+ (instancetype)numberWithBool:(BOOL)value;
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Initializers")))
@interface CDSSLInitializers : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)initializers __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLInitializers *shared __attribute__((swift_name("shared")));
- (void)completeAuthenticationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback authenticationStepId:(NSString *)authenticationStepId validationCodeString:(NSString *)validationCodeString __attribute__((swift_name("completeAuthentication(dartResultCallback:authenticationStepId:validationCodeString:)")));
- (void)initializeSdkDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback applicationIdString:(NSString *)applicationIdString baseUrlString:(NSString *)baseUrlString authenticationMethodString:(NSString *)authenticationMethodString storageFacade:(id<CDSSLCardinal_sdkStorageFacade>)storageFacade optionsString:(NSString *)optionsString __attribute__((swift_name("initializeSdk(dartResultCallback:applicationIdString:baseUrlString:authenticationMethodString:storageFacade:optionsString:)")));
- (void)initializeWithAuthProcessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback applicationIdString:(NSString *)applicationIdString baseUrlString:(NSString *)baseUrlString messageGatewayUrlString:(NSString *)messageGatewayUrlString externalServicesSpecIdString:(NSString *)externalServicesSpecIdString processIdString:(NSString *)processIdString userTelecomTypeString:(NSString *)userTelecomTypeString userTelecomString:(NSString *)userTelecomString captchaOptionsString:(NSString *)captchaOptionsString baseStorage:(id<CDSSLCardinal_sdkStorageFacade>)baseStorage authenticationProcessTemplateParametersString:(NSString *)authenticationProcessTemplateParametersString optionsString:(NSString *)optionsString __attribute__((swift_name("initializeWithAuthProcess(dartResultCallback:applicationIdString:baseUrlString:messageGatewayUrlString:externalServicesSpecIdString:processIdString:userTelecomTypeString:userTelecomString:captchaOptionsString:baseStorage:authenticationProcessTemplateParametersString:optionsString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AccessLogApi")))
@interface CDSSLAccessLogApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)accessLogApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAccessLogApi *shared __attribute__((swift_name("shared")));
- (void)createAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createAccessLog(dartResultCallback:sdkId:entityString:)")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:accessLogString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:accessLogString:)")));
- (void)deleteAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("deleteAccessLog(dartResultCallback:sdkId:accessLogString:)")));
- (void)deleteAccessLogByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteAccessLogById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteAccessLogsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogsString:(NSString *)accessLogsString __attribute__((swift_name("deleteAccessLogs(dartResultCallback:sdkId:accessLogsString:)")));
- (void)deleteAccessLogsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteAccessLogsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterAccessLogsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAccessLogsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterAccessLogsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAccessLogsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getAccessLog(dartResultCallback:sdkId:entityIdString:)")));
- (void)getAccessLogsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getAccessLogs(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:accessLogString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:accessLogString:)")));
- (void)matchAccessLogsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchAccessLogsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchAccessLogsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchAccessLogsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyAccessLog(dartResultCallback:sdkId:entityString:)")));
- (void)purgeAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("purgeAccessLog(dartResultCallback:sdkId:accessLogString:)")));
- (void)purgeAccessLogByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeAccessLogById(dartResultCallback:sdkId:idString:revString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString accessLogString:(NSString *)accessLogString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:accessLogString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:accessLogString:delegatesString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:accessLogString:)")));
- (void)undeleteAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("undeleteAccessLog(dartResultCallback:sdkId:accessLogString:)")));
- (void)undeleteAccessLogByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteAccessLogById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AccessLogApi.encrypted")))
@interface CDSSLAccessLogApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAccessLogApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterAccessLogsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAccessLogsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterAccessLogsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAccessLogsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getAccessLog(dartResultCallback:sdkId:entityIdString:)")));
- (void)getAccessLogsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getAccessLogs(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyAccessLog(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString accessLogString:(NSString *)accessLogString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:accessLogString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:accessLogString:delegatesString:)")));
- (void)undeleteAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("undeleteAccessLog(dartResultCallback:sdkId:accessLogString:)")));
- (void)undeleteAccessLogByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteAccessLogById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AccessLogApi.tryAndRecover")))
@interface CDSSLAccessLogApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAccessLogApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterAccessLogsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAccessLogsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterAccessLogsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAccessLogsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getAccessLog(dartResultCallback:sdkId:entityIdString:)")));
- (void)getAccessLogsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getAccessLogs(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyAccessLog(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString accessLogString:(NSString *)accessLogString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:accessLogString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:accessLogString:delegatesString:)")));
- (void)undeleteAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("undeleteAccessLog(dartResultCallback:sdkId:accessLogString:)")));
- (void)undeleteAccessLogByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteAccessLogById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AccessLogBasicApi")))
@interface CDSSLAccessLogBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)accessLogBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAccessLogBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("deleteAccessLog(dartResultCallback:sdkId:accessLogString:)")));
- (void)deleteAccessLogByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteAccessLogById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteAccessLogsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogsString:(NSString *)accessLogsString __attribute__((swift_name("deleteAccessLogs(dartResultCallback:sdkId:accessLogsString:)")));
- (void)deleteAccessLogsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteAccessLogsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterAccessLogsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAccessLogsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterAccessLogsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAccessLogsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getAccessLog(dartResultCallback:sdkId:entityIdString:)")));
- (void)getAccessLogsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getAccessLogs(dartResultCallback:sdkId:entityIdsString:)")));
- (void)matchAccessLogsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchAccessLogsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchAccessLogsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchAccessLogsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyAccessLog(dartResultCallback:sdkId:entityString:)")));
- (void)purgeAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("purgeAccessLog(dartResultCallback:sdkId:accessLogString:)")));
- (void)purgeAccessLogByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeAccessLogById(dartResultCallback:sdkId:idString:revString:)")));
- (void)undeleteAccessLogDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId accessLogString:(NSString *)accessLogString __attribute__((swift_name("undeleteAccessLog(dartResultCallback:sdkId:accessLogString:)")));
- (void)undeleteAccessLogByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteAccessLogById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgendaApi")))
@interface CDSSLAgendaApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)agendaApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAgendaApi *shared __attribute__((swift_name("shared")));
- (void)createAgendaDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId agendaDtoString:(NSString *)agendaDtoString __attribute__((swift_name("createAgenda(dartResultCallback:sdkId:agendaDtoString:)")));
- (void)deleteAgendaDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId agendaString:(NSString *)agendaString __attribute__((swift_name("deleteAgenda(dartResultCallback:sdkId:agendaString:)")));
- (void)deleteAgendaByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteAgendaById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteAgendasDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId agendasString:(NSString *)agendasString __attribute__((swift_name("deleteAgendas(dartResultCallback:sdkId:agendasString:)")));
- (void)deleteAgendasByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteAgendasByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterAgendasByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAgendasBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterAgendasBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterAgendasBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getAgendaDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId agendaIdString:(NSString *)agendaIdString __attribute__((swift_name("getAgenda(dartResultCallback:sdkId:agendaIdString:)")));
- (void)getAgendasDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId agendaIdsString:(NSString *)agendaIdsString __attribute__((swift_name("getAgendas(dartResultCallback:sdkId:agendaIdsString:)")));
- (void)matchAgendasByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchAgendasBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchAgendasBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchAgendasBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyAgendaDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId agendaDtoString:(NSString *)agendaDtoString __attribute__((swift_name("modifyAgenda(dartResultCallback:sdkId:agendaDtoString:)")));
- (void)purgeAgendaDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId agendaString:(NSString *)agendaString __attribute__((swift_name("purgeAgenda(dartResultCallback:sdkId:agendaString:)")));
- (void)purgeAgendaByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeAgendaById(dartResultCallback:sdkId:idString:revString:)")));
- (void)undeleteAgendaDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId agendaString:(NSString *)agendaString __attribute__((swift_name("undeleteAgenda(dartResultCallback:sdkId:agendaString:)")));
- (void)undeleteAgendaByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteAgendaById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ApplicationSettingsApi")))
@interface CDSSLApplicationSettingsApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)applicationSettingsApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLApplicationSettingsApi *shared __attribute__((swift_name("shared")));
- (void)createApplicationSettingsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId applicationSettingsString:(NSString *)applicationSettingsString __attribute__((swift_name("createApplicationSettings(dartResultCallback:sdkId:applicationSettingsString:)")));
- (void)getApplicationSettingsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getApplicationSettings(dartResultCallback:sdkId:)")));
- (void)updateApplicationSettingsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId applicationSettingsString:(NSString *)applicationSettingsString __attribute__((swift_name("updateApplicationSettings(dartResultCallback:sdkId:applicationSettingsString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CalendarItemApi")))
@interface CDSSLCalendarItemApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)calendarItemApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCalendarItemApi *shared __attribute__((swift_name("shared")));
- (void)createCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createCalendarItem(dartResultCallback:sdkId:entityString:)")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:calendarItemString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:calendarItemString:)")));
- (void)deleteCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("deleteCalendarItem(dartResultCallback:sdkId:calendarItemString:)")));
- (void)deleteCalendarItemByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteCalendarItemById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteCalendarItemsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemsString:(NSString *)calendarItemsString __attribute__((swift_name("deleteCalendarItems(dartResultCallback:sdkId:calendarItemsString:)")));
- (void)deleteCalendarItemsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteCalendarItemsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterCalendarItemsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCalendarItemsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterCalendarItemsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCalendarItemsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getCalendarItem(dartResultCallback:sdkId:entityIdString:)")));
- (void)getCalendarItemsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getCalendarItems(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:calendarItemString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:calendarItemString:)")));
- (void)linkToPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString patientString:(NSString *)patientString shareLinkWithDelegatesString:(NSString *)shareLinkWithDelegatesString __attribute__((swift_name("linkToPatient(dartResultCallback:sdkId:calendarItemString:patientString:shareLinkWithDelegatesString:)")));
- (void)matchCalendarItemsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchCalendarItemsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchCalendarItemsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchCalendarItemsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyCalendarItem(dartResultCallback:sdkId:entityString:)")));
- (void)purgeCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("purgeCalendarItem(dartResultCallback:sdkId:calendarItemString:)")));
- (void)purgeCalendarItemByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeCalendarItemById(dartResultCallback:sdkId:idString:revString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString calendarItemString:(NSString *)calendarItemString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:calendarItemString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:calendarItemString:delegatesString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:calendarItemString:)")));
- (void)undeleteCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("undeleteCalendarItem(dartResultCallback:sdkId:calendarItemString:)")));
- (void)undeleteCalendarItemByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteCalendarItemById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CalendarItemApi.encrypted")))
@interface CDSSLCalendarItemApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCalendarItemApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterCalendarItemsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCalendarItemsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterCalendarItemsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCalendarItemsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getCalendarItem(dartResultCallback:sdkId:entityIdString:)")));
- (void)getCalendarItemsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getCalendarItems(dartResultCallback:sdkId:entityIdsString:)")));
- (void)linkToPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString patientString:(NSString *)patientString shareLinkWithDelegatesString:(NSString *)shareLinkWithDelegatesString __attribute__((swift_name("linkToPatient(dartResultCallback:sdkId:calendarItemString:patientString:shareLinkWithDelegatesString:)")));
- (void)modifyCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyCalendarItem(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString calendarItemString:(NSString *)calendarItemString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:calendarItemString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:calendarItemString:delegatesString:)")));
- (void)undeleteCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("undeleteCalendarItem(dartResultCallback:sdkId:calendarItemString:)")));
- (void)undeleteCalendarItemByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteCalendarItemById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CalendarItemApi.tryAndRecover")))
@interface CDSSLCalendarItemApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCalendarItemApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterCalendarItemsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCalendarItemsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterCalendarItemsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCalendarItemsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getCalendarItem(dartResultCallback:sdkId:entityIdString:)")));
- (void)getCalendarItemsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getCalendarItems(dartResultCallback:sdkId:entityIdsString:)")));
- (void)linkToPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString patientString:(NSString *)patientString shareLinkWithDelegatesString:(NSString *)shareLinkWithDelegatesString __attribute__((swift_name("linkToPatient(dartResultCallback:sdkId:calendarItemString:patientString:shareLinkWithDelegatesString:)")));
- (void)modifyCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyCalendarItem(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString calendarItemString:(NSString *)calendarItemString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:calendarItemString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:calendarItemString:delegatesString:)")));
- (void)undeleteCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("undeleteCalendarItem(dartResultCallback:sdkId:calendarItemString:)")));
- (void)undeleteCalendarItemByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteCalendarItemById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CalendarItemBasicApi")))
@interface CDSSLCalendarItemBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)calendarItemBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCalendarItemBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("deleteCalendarItem(dartResultCallback:sdkId:calendarItemString:)")));
- (void)deleteCalendarItemByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteCalendarItemById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteCalendarItemsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemsString:(NSString *)calendarItemsString __attribute__((swift_name("deleteCalendarItems(dartResultCallback:sdkId:calendarItemsString:)")));
- (void)deleteCalendarItemsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteCalendarItemsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterCalendarItemsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCalendarItemsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterCalendarItemsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCalendarItemsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getCalendarItem(dartResultCallback:sdkId:entityIdString:)")));
- (void)getCalendarItemsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getCalendarItems(dartResultCallback:sdkId:entityIdsString:)")));
- (void)matchCalendarItemsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchCalendarItemsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchCalendarItemsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchCalendarItemsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyCalendarItem(dartResultCallback:sdkId:entityString:)")));
- (void)purgeCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("purgeCalendarItem(dartResultCallback:sdkId:calendarItemString:)")));
- (void)purgeCalendarItemByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeCalendarItemById(dartResultCallback:sdkId:idString:revString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeleteCalendarItemDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId calendarItemString:(NSString *)calendarItemString __attribute__((swift_name("undeleteCalendarItem(dartResultCallback:sdkId:calendarItemString:)")));
- (void)undeleteCalendarItemByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteCalendarItemById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CardinalMaintenanceTaskApi")))
@interface CDSSLCardinalMaintenanceTaskApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cardinalMaintenanceTaskApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinalMaintenanceTaskApi *shared __attribute__((swift_name("shared")));
- (void)applyKeyPairUpdateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId updateRequestString:(NSString *)updateRequestString __attribute__((swift_name("applyKeyPairUpdate(dartResultCallback:sdkId:updateRequestString:)")));
- (void)createKeyPairUpdateNotificationToDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId dataOwnerIdString:(NSString *)dataOwnerIdString keyString:(NSString *)keyString __attribute__((swift_name("createKeyPairUpdateNotificationTo(dartResultCallback:sdkId:dataOwnerIdString:keyString:)")));
- (void)createKeyPairUpdateNotificationsToAllDelegationCounterpartsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId keyString:(NSString *)keyString requestToOwnerTypesString:(NSString *)requestToOwnerTypesString __attribute__((swift_name("createKeyPairUpdateNotificationsToAllDelegationCounterparts(dartResultCallback:sdkId:keyString:requestToOwnerTypesString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClassificationApi")))
@interface CDSSLClassificationApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)classificationApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLClassificationApi *shared __attribute__((swift_name("shared")));
- (void)createClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createClassification(dartResultCallback:sdkId:entityString:)")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId classificationString:(NSString *)classificationString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:classificationString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId classificationString:(NSString *)classificationString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:classificationString:)")));
- (void)deleteClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("deleteClassification(dartResultCallback:sdkId:entityIdString:)")));
- (void)deleteClassificationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteClassifications(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterClassificationsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterClassificationsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterClassificationsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterClassificationsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getClassification(dartResultCallback:sdkId:entityIdString:)")));
- (void)getClassificationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getClassifications(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId classificationString:(NSString *)classificationString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:classificationString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId classificationString:(NSString *)classificationString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:classificationString:)")));
- (void)matchClassificationsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchClassificationsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchClassificationsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchClassificationsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyClassification(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString classificationString:(NSString *)classificationString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:classificationString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId classificationString:(NSString *)classificationString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:classificationString:delegatesString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId classificationString:(NSString *)classificationString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:classificationString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClassificationApi.encrypted")))
@interface CDSSLClassificationApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLClassificationApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterClassificationsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterClassificationsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterClassificationsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterClassificationsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getClassification(dartResultCallback:sdkId:entityIdString:)")));
- (void)getClassificationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getClassifications(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyClassification(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString classificationString:(NSString *)classificationString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:classificationString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId classificationString:(NSString *)classificationString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:classificationString:delegatesString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClassificationApi.tryAndRecover")))
@interface CDSSLClassificationApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLClassificationApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterClassificationsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterClassificationsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterClassificationsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterClassificationsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getClassification(dartResultCallback:sdkId:entityIdString:)")));
- (void)getClassificationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getClassifications(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyClassification(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString classificationString:(NSString *)classificationString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:classificationString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId classificationString:(NSString *)classificationString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:classificationString:delegatesString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClassificationBasicApi")))
@interface CDSSLClassificationBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)classificationBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLClassificationBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("deleteClassification(dartResultCallback:sdkId:entityIdString:)")));
- (void)deleteClassificationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteClassifications(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterClassificationsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterClassificationsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterClassificationsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterClassificationsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getClassification(dartResultCallback:sdkId:entityIdString:)")));
- (void)getClassificationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getClassifications(dartResultCallback:sdkId:entityIdsString:)")));
- (void)matchClassificationsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchClassificationsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchClassificationsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchClassificationsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyClassificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyClassification(dartResultCallback:sdkId:entityString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CodeApi")))
@interface CDSSLCodeApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)codeApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCodeApi *shared __attribute__((swift_name("shared")));
- (void)createCodeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId cString:(NSString *)cString __attribute__((swift_name("createCode(dartResultCallback:sdkId:cString:)")));
- (void)createCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId codeBatchString:(NSString *)codeBatchString __attribute__((swift_name("createCodes(dartResultCallback:sdkId:codeBatchString:)")));
- (void)createCodesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString codeBatchString:(NSString *)codeBatchString __attribute__((swift_name("createCodesInGroup(dartResultCallback:sdkId:groupIdString:codeBatchString:)")));
- (void)filterCodesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCodesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterCodesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterCodesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getCodeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId codeIdString:(NSString *)codeIdString __attribute__((swift_name("getCode(dartResultCallback:sdkId:codeIdString:)")));
- (void)getCodeByRegionLanguageTypeLabelDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId regionString:(NSString *)regionString labelString:(NSString *)labelString typeString:(NSString *)typeString languagesString:(NSString *)languagesString __attribute__((swift_name("getCodeByRegionLanguageTypeLabel(dartResultCallback:sdkId:regionString:labelString:typeString:languagesString:)")));
- (void)getCodeWithPartsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId typeString:(NSString *)typeString codeString:(NSString *)codeString versionString:(NSString *)versionString __attribute__((swift_name("getCodeWithParts(dartResultCallback:sdkId:typeString:codeString:versionString:)")));
- (void)getCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId codeIdsString:(NSString *)codeIdsString __attribute__((swift_name("getCodes(dartResultCallback:sdkId:codeIdsString:)")));
- (void)getCodesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString codeIdsString:(NSString *)codeIdsString __attribute__((swift_name("getCodesInGroup(dartResultCallback:sdkId:groupIdString:codeIdsString:)")));
- (void)importCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId codeTypeString:(NSString *)codeTypeString __attribute__((swift_name("importCodes(dartResultCallback:sdkId:codeTypeString:)")));
- (void)isCodeValidDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId typeString:(NSString *)typeString codeString:(NSString *)codeString versionString:(NSString *)versionString __attribute__((swift_name("isCodeValid(dartResultCallback:sdkId:typeString:codeString:versionString:)")));
- (void)listCodeTypesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId regionString:(NSString *)regionString typeString:(NSString *)typeString __attribute__((swift_name("listCodeTypesBy(dartResultCallback:sdkId:regionString:typeString:)")));
- (void)listCodesByRegionTypeCodeVersionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId regionString:(NSString *)regionString typeString:(NSString *)typeString codeString:(NSString *)codeString versionString:(NSString *)versionString __attribute__((swift_name("listCodesByRegionTypeCodeVersion(dartResultCallback:sdkId:regionString:typeString:codeString:versionString:)")));
- (void)listTagTypesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId regionString:(NSString *)regionString typeString:(NSString *)typeString __attribute__((swift_name("listTagTypesBy(dartResultCallback:sdkId:regionString:typeString:)")));
- (void)matchCodesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchCodesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchCodesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchCodesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyCodeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId codeDtoString:(NSString *)codeDtoString __attribute__((swift_name("modifyCode(dartResultCallback:sdkId:codeDtoString:)")));
- (void)modifyCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId codeBatchString:(NSString *)codeBatchString __attribute__((swift_name("modifyCodes(dartResultCallback:sdkId:codeBatchString:)")));
- (void)modifyCodesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString codeBatchString:(NSString *)codeBatchString __attribute__((swift_name("modifyCodesInGroup(dartResultCallback:sdkId:groupIdString:codeBatchString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactApi")))
@interface CDSSLContactApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)contactApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLContactApi *shared __attribute__((swift_name("shared")));
- (void)createContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createContact(dartResultCallback:sdkId:entityString:)")));
- (void)createContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("createContacts(dartResultCallback:sdkId:entitiesString:)")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:contactString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:contactString:)")));
- (void)decryptServiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId serviceString:(NSString *)serviceString __attribute__((swift_name("decryptService(dartResultCallback:sdkId:serviceString:)")));
- (void)deleteContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("deleteContact(dartResultCallback:sdkId:contactString:)")));
- (void)deleteContactByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteContactById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactsString:(NSString *)contactsString __attribute__((swift_name("deleteContacts(dartResultCallback:sdkId:contactsString:)")));
- (void)deleteContactsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteContactsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterContactsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterContactsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterContactsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterContactsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)filterServicesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterServicesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterServicesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterServicesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getContact(dartResultCallback:sdkId:entityIdString:)")));
- (void)getContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getContacts(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:contactString:)")));
- (void)getServiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId serviceIdString:(NSString *)serviceIdString __attribute__((swift_name("getService(dartResultCallback:sdkId:serviceIdString:)")));
- (void)getServiceCodesOccurrencesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId codeTypeString:(NSString *)codeTypeString minOccurrencesString:(NSString *)minOccurrencesString __attribute__((swift_name("getServiceCodesOccurrences(dartResultCallback:sdkId:codeTypeString:minOccurrencesString:)")));
- (void)getServicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getServices(dartResultCallback:sdkId:entityIdsString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:contactString:)")));
- (void)matchContactsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchContactsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchContactsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchContactsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)matchServicesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchServicesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchServicesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchServicesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyContact(dartResultCallback:sdkId:entityString:)")));
- (void)modifyContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyContacts(dartResultCallback:sdkId:entitiesString:)")));
- (void)purgeContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("purgeContact(dartResultCallback:sdkId:contactString:)")));
- (void)purgeContactByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeContactById(dartResultCallback:sdkId:idString:revString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString contactString:(NSString *)contactString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:contactString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:contactString:delegatesString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)subscribeToServiceCreateOrUpdateEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToServiceCreateOrUpdateEvents(dartResultCallback:sdkId:filterString:subscriptionConfigString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:contactString:)")));
- (void)tryDecryptServiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId serviceString:(NSString *)serviceString __attribute__((swift_name("tryDecryptService(dartResultCallback:sdkId:serviceString:)")));
- (void)undeleteContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("undeleteContact(dartResultCallback:sdkId:contactString:)")));
- (void)undeleteContactByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteContactById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactApi.encrypted")))
@interface CDSSLContactApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLContactApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterContactsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterContactsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterContactsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterContactsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)filterServicesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterServicesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterServicesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterServicesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getContact(dartResultCallback:sdkId:entityIdString:)")));
- (void)getContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getContacts(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getServiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId serviceIdString:(NSString *)serviceIdString __attribute__((swift_name("getService(dartResultCallback:sdkId:serviceIdString:)")));
- (void)getServicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getServices(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyContact(dartResultCallback:sdkId:entityString:)")));
- (void)modifyContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyContacts(dartResultCallback:sdkId:entitiesString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString contactString:(NSString *)contactString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:contactString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:contactString:delegatesString:)")));
- (void)undeleteContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("undeleteContact(dartResultCallback:sdkId:contactString:)")));
- (void)undeleteContactByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteContactById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactApi.tryAndRecover")))
@interface CDSSLContactApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLContactApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterContactsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterContactsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterContactsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterContactsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)filterServicesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterServicesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterServicesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterServicesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getContact(dartResultCallback:sdkId:entityIdString:)")));
- (void)getContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getContacts(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getServiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId serviceIdString:(NSString *)serviceIdString __attribute__((swift_name("getService(dartResultCallback:sdkId:serviceIdString:)")));
- (void)getServicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getServices(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyContact(dartResultCallback:sdkId:entityString:)")));
- (void)modifyContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyContacts(dartResultCallback:sdkId:entitiesString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString contactString:(NSString *)contactString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:contactString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:contactString:delegatesString:)")));
- (void)undeleteContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("undeleteContact(dartResultCallback:sdkId:contactString:)")));
- (void)undeleteContactByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteContactById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactBasicApi")))
@interface CDSSLContactBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)contactBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLContactBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("deleteContact(dartResultCallback:sdkId:contactString:)")));
- (void)deleteContactByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteContactById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactsString:(NSString *)contactsString __attribute__((swift_name("deleteContacts(dartResultCallback:sdkId:contactsString:)")));
- (void)deleteContactsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteContactsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterContactsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterContactsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterContactsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterContactsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)filterServicesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterServicesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterServicesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterServicesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getContact(dartResultCallback:sdkId:entityIdString:)")));
- (void)getContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getContacts(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getServiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId serviceIdString:(NSString *)serviceIdString __attribute__((swift_name("getService(dartResultCallback:sdkId:serviceIdString:)")));
- (void)getServiceCodesOccurrencesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId codeTypeString:(NSString *)codeTypeString minOccurrencesString:(NSString *)minOccurrencesString __attribute__((swift_name("getServiceCodesOccurrences(dartResultCallback:sdkId:codeTypeString:minOccurrencesString:)")));
- (void)getServicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getServices(dartResultCallback:sdkId:entityIdsString:)")));
- (void)matchContactsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchContactsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchContactsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchContactsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)matchServicesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchServicesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchServicesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchServicesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyContact(dartResultCallback:sdkId:entityString:)")));
- (void)modifyContactsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyContacts(dartResultCallback:sdkId:entitiesString:)")));
- (void)purgeContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("purgeContact(dartResultCallback:sdkId:contactString:)")));
- (void)purgeContactByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeContactById(dartResultCallback:sdkId:idString:revString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)subscribeToServiceCreateOrUpdateEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToServiceCreateOrUpdateEvents(dartResultCallback:sdkId:filterString:subscriptionConfigString:)")));
- (void)undeleteContactDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactString:(NSString *)contactString __attribute__((swift_name("undeleteContact(dartResultCallback:sdkId:contactString:)")));
- (void)undeleteContactByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteContactById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CryptoApi")))
@interface CDSSLCryptoApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)cryptoApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCryptoApi *shared __attribute__((swift_name("shared")));
- (void)currentDataOwnerKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterTrustedKeysString:(NSString *)filterTrustedKeysString __attribute__((swift_name("currentDataOwnerKeys(dartResultCallback:sdkId:filterTrustedKeysString:)")));
- (void)forceReloadDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("forceReload(dartResultCallback:sdkId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DataOwnerApi")))
@interface CDSSLDataOwnerApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)dataOwnerApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDataOwnerApi *shared __attribute__((swift_name("shared")));
- (void)clearCurrentDataOwnerIdsCacheDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("clearCurrentDataOwnerIdsCache(dartResultCallback:sdkId:)")));
- (void)getCryptoActorStubDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId ownerIdString:(NSString *)ownerIdString __attribute__((swift_name("getCryptoActorStub(dartResultCallback:sdkId:ownerIdString:)")));
- (void)getCurrentDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getCurrentDataOwner(dartResultCallback:sdkId:)")));
- (void)getCurrentDataOwnerHierarchyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getCurrentDataOwnerHierarchy(dartResultCallback:sdkId:)")));
- (void)getCurrentDataOwnerHierarchyIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getCurrentDataOwnerHierarchyIds(dartResultCallback:sdkId:)")));
- (void)getCurrentDataOwnerHierarchyIdsFromDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId parentIdString:(NSString *)parentIdString __attribute__((swift_name("getCurrentDataOwnerHierarchyIdsFrom(dartResultCallback:sdkId:parentIdString:)")));
- (void)getCurrentDataOwnerIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getCurrentDataOwnerId(dartResultCallback:sdkId:)")));
- (void)getCurrentDataOwnerStubDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getCurrentDataOwnerStub(dartResultCallback:sdkId:)")));
- (void)getCurrentDataOwnerTypeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getCurrentDataOwnerType(dartResultCallback:sdkId:)")));
- (void)getDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId ownerIdString:(NSString *)ownerIdString __attribute__((swift_name("getDataOwner(dartResultCallback:sdkId:ownerIdString:)")));
- (void)modifyDataOwnerStubDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId cryptoActorStubWithTypeDtoString:(NSString *)cryptoActorStubWithTypeDtoString __attribute__((swift_name("modifyDataOwnerStub(dartResultCallback:sdkId:cryptoActorStubWithTypeDtoString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeviceApi")))
@interface CDSSLDeviceApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)deviceApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDeviceApi *shared __attribute__((swift_name("shared")));
- (void)createDeviceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId pString:(NSString *)pString __attribute__((swift_name("createDevice(dartResultCallback:sdkId:pString:)")));
- (void)createDeviceInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString deviceString:(NSString *)deviceString __attribute__((swift_name("createDeviceInGroup(dartResultCallback:sdkId:groupIdString:deviceString:)")));
- (void)createDevicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId devicesString:(NSString *)devicesString __attribute__((swift_name("createDevices(dartResultCallback:sdkId:devicesString:)")));
- (void)deleteDeviceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId deviceString:(NSString *)deviceString __attribute__((swift_name("deleteDevice(dartResultCallback:sdkId:deviceString:)")));
- (void)deleteDeviceByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteDeviceById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteDevicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId devicesString:(NSString *)devicesString __attribute__((swift_name("deleteDevices(dartResultCallback:sdkId:devicesString:)")));
- (void)deleteDevicesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteDevicesByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)deleteDevicesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString deviceIdsString:(NSString *)deviceIdsString __attribute__((swift_name("deleteDevicesInGroup(dartResultCallback:sdkId:groupIdString:deviceIdsString:)")));
- (void)filterDevicesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDevicesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterDevicesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDevicesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getDeviceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId deviceIdString:(NSString *)deviceIdString __attribute__((swift_name("getDevice(dartResultCallback:sdkId:deviceIdString:)")));
- (void)getDevicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId deviceIdsString:(NSString *)deviceIdsString __attribute__((swift_name("getDevices(dartResultCallback:sdkId:deviceIdsString:)")));
- (void)getDevicesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString deviceIdsString:(NSString *)deviceIdsString __attribute__((swift_name("getDevicesInGroup(dartResultCallback:sdkId:groupIdString:deviceIdsString:)")));
- (void)matchDevicesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchDevicesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchDevicesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchDevicesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyDeviceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId deviceString:(NSString *)deviceString __attribute__((swift_name("modifyDevice(dartResultCallback:sdkId:deviceString:)")));
- (void)modifyDeviceInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString deviceString:(NSString *)deviceString __attribute__((swift_name("modifyDeviceInGroup(dartResultCallback:sdkId:groupIdString:deviceString:)")));
- (void)modifyDevicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId devicesString:(NSString *)devicesString __attribute__((swift_name("modifyDevices(dartResultCallback:sdkId:devicesString:)")));
- (void)purgeDeviceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId deviceString:(NSString *)deviceString __attribute__((swift_name("purgeDevice(dartResultCallback:sdkId:deviceString:)")));
- (void)purgeDeviceByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeDeviceById(dartResultCallback:sdkId:idString:revString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeleteDeviceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId deviceString:(NSString *)deviceString __attribute__((swift_name("undeleteDevice(dartResultCallback:sdkId:deviceString:)")));
- (void)undeleteDeviceByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteDeviceById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DocumentApi")))
@interface CDSSLDocumentApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)documentApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDocumentApi *shared __attribute__((swift_name("shared")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createDocument(dartResultCallback:sdkId:entityString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:documentString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:documentString:)")));
- (void)deleteDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("deleteDocument(dartResultCallback:sdkId:documentString:)")));
- (void)deleteDocumentByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteDocumentById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentsString:(NSString *)documentsString __attribute__((swift_name("deleteDocuments(dartResultCallback:sdkId:documentsString:)")));
- (void)deleteDocumentsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteDocumentsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)deleteMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteMainAttachment(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteSecondaryAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString keyString:(NSString *)keyString revString:(NSString *)revString __attribute__((swift_name("deleteSecondaryAttachment(dartResultCallback:sdkId:documentIdString:keyString:revString:)")));
- (void)encryptAndSetMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString utisString:(NSString *)utisString attachmentString:(NSString *)attachmentString __attribute__((swift_name("encryptAndSetMainAttachment(dartResultCallback:sdkId:documentString:utisString:attachmentString:)")));
- (void)encryptAndSetSecondaryAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString keyString:(NSString *)keyString utisString:(NSString *)utisString attachmentString:(NSString *)attachmentString __attribute__((swift_name("encryptAndSetSecondaryAttachment(dartResultCallback:sdkId:documentString:keyString:utisString:attachmentString:)")));
- (void)filterDocumentsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDocumentsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterDocumentsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDocumentsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getAndDecryptMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("getAndDecryptMainAttachment(dartResultCallback:sdkId:documentString:)")));
- (void)getAndDecryptSecondaryAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString keyString:(NSString *)keyString __attribute__((swift_name("getAndDecryptSecondaryAttachment(dartResultCallback:sdkId:documentString:keyString:)")));
- (void)getAndTryDecryptMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("getAndTryDecryptMainAttachment(dartResultCallback:sdkId:documentString:)")));
- (void)getDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getDocument(dartResultCallback:sdkId:entityIdString:)")));
- (void)getDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getDocuments(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:documentString:)")));
- (void)getRawMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString __attribute__((swift_name("getRawMainAttachment(dartResultCallback:sdkId:documentIdString:)")));
- (void)getRawSecondaryAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString keyString:(NSString *)keyString __attribute__((swift_name("getRawSecondaryAttachment(dartResultCallback:sdkId:documentIdString:keyString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:documentString:)")));
- (void)matchDocumentsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchDocumentsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchDocumentsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchDocumentsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyDocument(dartResultCallback:sdkId:entityString:)")));
- (void)modifyDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyDocuments(dartResultCallback:sdkId:entitiesString:)")));
- (void)purgeDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("purgeDocument(dartResultCallback:sdkId:documentString:)")));
- (void)purgeDocumentByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeDocumentById(dartResultCallback:sdkId:idString:revString:)")));
- (void)setRawMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString revString:(NSString *)revString utisString:(NSString *)utisString attachmentString:(NSString *)attachmentString encryptedString:(NSString *)encryptedString __attribute__((swift_name("setRawMainAttachment(dartResultCallback:sdkId:documentIdString:revString:utisString:attachmentString:encryptedString:)")));
- (void)setRawSecondaryAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString keyString:(NSString *)keyString revString:(NSString *)revString utisString:(NSString *)utisString attachmentString:(NSString *)attachmentString encryptedString:(NSString *)encryptedString __attribute__((swift_name("setRawSecondaryAttachment(dartResultCallback:sdkId:documentIdString:keyString:revString:utisString:attachmentString:encryptedString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString documentString:(NSString *)documentString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:documentString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:documentString:delegatesString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:documentString:)")));
- (void)tryDecryptAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString encryptedAttachmentString:(NSString *)encryptedAttachmentString __attribute__((swift_name("tryDecryptAttachment(dartResultCallback:sdkId:documentString:encryptedAttachmentString:)")));
- (void)undeleteDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("undeleteDocument(dartResultCallback:sdkId:documentString:)")));
- (void)undeleteDocumentByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteDocumentById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString messageString:(NSString *)messageString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:messageString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DocumentApi.encrypted")))
@interface CDSSLDocumentApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDocumentApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterDocumentsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDocumentsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterDocumentsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDocumentsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getDocument(dartResultCallback:sdkId:entityIdString:)")));
- (void)getDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getDocuments(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyDocument(dartResultCallback:sdkId:entityString:)")));
- (void)modifyDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyDocuments(dartResultCallback:sdkId:entitiesString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString documentString:(NSString *)documentString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:documentString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:documentString:delegatesString:)")));
- (void)undeleteDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("undeleteDocument(dartResultCallback:sdkId:documentString:)")));
- (void)undeleteDocumentByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteDocumentById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DocumentApi.tryAndRecover")))
@interface CDSSLDocumentApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDocumentApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterDocumentsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDocumentsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterDocumentsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDocumentsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getDocument(dartResultCallback:sdkId:entityIdString:)")));
- (void)getDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getDocuments(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyDocument(dartResultCallback:sdkId:entityString:)")));
- (void)modifyDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyDocuments(dartResultCallback:sdkId:entitiesString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString documentString:(NSString *)documentString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:documentString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:documentString:delegatesString:)")));
- (void)undeleteDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("undeleteDocument(dartResultCallback:sdkId:documentString:)")));
- (void)undeleteDocumentByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteDocumentById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DocumentBasicApi")))
@interface CDSSLDocumentBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)documentBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDocumentBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("deleteDocument(dartResultCallback:sdkId:documentString:)")));
- (void)deleteDocumentByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteDocumentById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentsString:(NSString *)documentsString __attribute__((swift_name("deleteDocuments(dartResultCallback:sdkId:documentsString:)")));
- (void)deleteDocumentsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteDocumentsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)deleteMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteMainAttachment(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteSecondaryAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString keyString:(NSString *)keyString revString:(NSString *)revString __attribute__((swift_name("deleteSecondaryAttachment(dartResultCallback:sdkId:documentIdString:keyString:revString:)")));
- (void)filterDocumentsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDocumentsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterDocumentsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterDocumentsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getDocument(dartResultCallback:sdkId:entityIdString:)")));
- (void)getDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getDocuments(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getRawMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString __attribute__((swift_name("getRawMainAttachment(dartResultCallback:sdkId:documentIdString:)")));
- (void)getRawSecondaryAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString keyString:(NSString *)keyString __attribute__((swift_name("getRawSecondaryAttachment(dartResultCallback:sdkId:documentIdString:keyString:)")));
- (void)matchDocumentsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchDocumentsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchDocumentsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchDocumentsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyDocument(dartResultCallback:sdkId:entityString:)")));
- (void)modifyDocumentsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyDocuments(dartResultCallback:sdkId:entitiesString:)")));
- (void)purgeDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("purgeDocument(dartResultCallback:sdkId:documentString:)")));
- (void)purgeDocumentByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeDocumentById(dartResultCallback:sdkId:idString:revString:)")));
- (void)setRawMainAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString revString:(NSString *)revString utisString:(NSString *)utisString attachmentString:(NSString *)attachmentString encryptedString:(NSString *)encryptedString __attribute__((swift_name("setRawMainAttachment(dartResultCallback:sdkId:documentIdString:revString:utisString:attachmentString:encryptedString:)")));
- (void)setRawSecondaryAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString keyString:(NSString *)keyString revString:(NSString *)revString utisString:(NSString *)utisString attachmentString:(NSString *)attachmentString encryptedString:(NSString *)encryptedString __attribute__((swift_name("setRawSecondaryAttachment(dartResultCallback:sdkId:documentIdString:keyString:revString:utisString:attachmentString:encryptedString:)")));
- (void)undeleteDocumentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentString:(NSString *)documentString __attribute__((swift_name("undeleteDocument(dartResultCallback:sdkId:documentString:)")));
- (void)undeleteDocumentByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteDocumentById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DocumentTemplateApi")))
@interface CDSSLDocumentTemplateApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)documentTemplateApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDocumentTemplateApi *shared __attribute__((swift_name("shared")));
- (void)createDocumentTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateString:(NSString *)documentTemplateString __attribute__((swift_name("createDocumentTemplate(dartResultCallback:sdkId:documentTemplateString:)")));
- (void)deleteDocumentTemplatesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateIdsString:(NSString *)documentTemplateIdsString __attribute__((swift_name("deleteDocumentTemplates(dartResultCallback:sdkId:documentTemplateIdsString:)")));
- (void)getAttachmentTextDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateIdString:(NSString *)documentTemplateIdString attachmentIdString:(NSString *)attachmentIdString __attribute__((swift_name("getAttachmentText(dartResultCallback:sdkId:documentTemplateIdString:attachmentIdString:)")));
- (void)getAttachmentUrlDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentIdString:(NSString *)documentIdString attachmentIdString:(NSString *)attachmentIdString __attribute__((swift_name("getAttachmentUrl(dartResultCallback:sdkId:documentIdString:attachmentIdString:)")));
- (void)getDocumentTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateIdString:(NSString *)documentTemplateIdString __attribute__((swift_name("getDocumentTemplate(dartResultCallback:sdkId:documentTemplateIdString:)")));
- (void)getDocumentTemplateAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateIdString:(NSString *)documentTemplateIdString attachmentIdString:(NSString *)attachmentIdString __attribute__((swift_name("getDocumentTemplateAttachment(dartResultCallback:sdkId:documentTemplateIdString:attachmentIdString:)")));
- (void)listDocumentTemplatesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("listDocumentTemplates(dartResultCallback:sdkId:)")));
- (void)listDocumentTemplatesByDocumentTypeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTypeCodeString:(NSString *)documentTypeCodeString __attribute__((swift_name("listDocumentTemplatesByDocumentType(dartResultCallback:sdkId:documentTypeCodeString:)")));
- (void)listDocumentTemplatesByDocumentTypeForCurrentUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTypeCodeString:(NSString *)documentTypeCodeString __attribute__((swift_name("listDocumentTemplatesByDocumentTypeForCurrentUser(dartResultCallback:sdkId:documentTypeCodeString:)")));
- (void)listDocumentTemplatesBySpecialityDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId specialityCodeString:(NSString *)specialityCodeString __attribute__((swift_name("listDocumentTemplatesBySpeciality(dartResultCallback:sdkId:specialityCodeString:)")));
- (void)modifyDocumentTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateString:(NSString *)documentTemplateString __attribute__((swift_name("modifyDocumentTemplate(dartResultCallback:sdkId:documentTemplateString:)")));
- (void)setDocumentTemplateAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateIdString:(NSString *)documentTemplateIdString payloadString:(NSString *)payloadString __attribute__((swift_name("setDocumentTemplateAttachment(dartResultCallback:sdkId:documentTemplateIdString:payloadString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EntityReferenceApi")))
@interface CDSSLEntityReferenceApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)entityReferenceApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLEntityReferenceApi *shared __attribute__((swift_name("shared")));
- (void)createEntityReferenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityReferenceString:(NSString *)entityReferenceString __attribute__((swift_name("createEntityReference(dartResultCallback:sdkId:entityReferenceString:)")));
- (void)getLatestDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId prefixString:(NSString *)prefixString __attribute__((swift_name("getLatest(dartResultCallback:sdkId:prefixString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EntityTemplateApi")))
@interface CDSSLEntityTemplateApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)entityTemplateApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLEntityTemplateApi *shared __attribute__((swift_name("shared")));
- (void)createEntityTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId applicationSettingsString:(NSString *)applicationSettingsString __attribute__((swift_name("createEntityTemplate(dartResultCallback:sdkId:applicationSettingsString:)")));
- (void)createEntityTemplatesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityTemplatesString:(NSString *)entityTemplatesString __attribute__((swift_name("createEntityTemplates(dartResultCallback:sdkId:entityTemplatesString:)")));
- (void)deleteEntityTemplatesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityTemplateIdsString:(NSString *)entityTemplateIdsString __attribute__((swift_name("deleteEntityTemplates(dartResultCallback:sdkId:entityTemplateIdsString:)")));
- (void)findAllEntityTemplatesByKeywordDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId typeString:(NSString *)typeString keywordString:(NSString *)keywordString includeEntitiesString:(NSString *)includeEntitiesString __attribute__((swift_name("findAllEntityTemplatesByKeyword(dartResultCallback:sdkId:typeString:keywordString:includeEntitiesString:)")));
- (void)getEntityTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateIdString:(NSString *)documentTemplateIdString __attribute__((swift_name("getEntityTemplate(dartResultCallback:sdkId:documentTemplateIdString:)")));
- (void)getEntityTemplatesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityTemplateIdsString:(NSString *)entityTemplateIdsString __attribute__((swift_name("getEntityTemplates(dartResultCallback:sdkId:entityTemplateIdsString:)")));
- (void)listAllEntityTemplatesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId typeString:(NSString *)typeString searchStringString:(NSString *)searchStringString includeEntitiesString:(NSString *)includeEntitiesString __attribute__((swift_name("listAllEntityTemplatesBy(dartResultCallback:sdkId:typeString:searchStringString:includeEntitiesString:)")));
- (void)listEntityTemplatesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString typeString:(NSString *)typeString searchStringString:(NSString *)searchStringString includeEntitiesString:(NSString *)includeEntitiesString __attribute__((swift_name("listEntityTemplatesBy(dartResultCallback:sdkId:userIdString:typeString:searchStringString:includeEntitiesString:)")));
- (void)listEntityTemplatesByKeywordDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString typeString:(NSString *)typeString keywordString:(NSString *)keywordString includeEntitiesString:(NSString *)includeEntitiesString __attribute__((swift_name("listEntityTemplatesByKeyword(dartResultCallback:sdkId:userIdString:typeString:keywordString:includeEntitiesString:)")));
- (void)modifyEntityTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId documentTemplateString:(NSString *)documentTemplateString __attribute__((swift_name("modifyEntityTemplate(dartResultCallback:sdkId:documentTemplateString:)")));
- (void)modifyEntityTemplatesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityTemplatesString:(NSString *)entityTemplatesString __attribute__((swift_name("modifyEntityTemplates(dartResultCallback:sdkId:entityTemplatesString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormApi")))
@interface CDSSLFormApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)formApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLFormApi *shared __attribute__((swift_name("shared")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createForm(dartResultCallback:sdkId:entityString:)")));
- (void)createFormTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateString:(NSString *)formTemplateString __attribute__((swift_name("createFormTemplate(dartResultCallback:sdkId:formTemplateString:)")));
- (void)createFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("createForms(dartResultCallback:sdkId:entitiesString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:formString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:formString:)")));
- (void)deleteFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("deleteForm(dartResultCallback:sdkId:formString:)")));
- (void)deleteFormByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteFormById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteFormTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateIdString:(NSString *)formTemplateIdString __attribute__((swift_name("deleteFormTemplate(dartResultCallback:sdkId:formTemplateIdString:)")));
- (void)deleteFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formsString:(NSString *)formsString __attribute__((swift_name("deleteForms(dartResultCallback:sdkId:formsString:)")));
- (void)deleteFormsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteFormsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterFormsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterFormsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterFormsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterFormsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:formString:)")));
- (void)getFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getForm(dartResultCallback:sdkId:entityIdString:)")));
- (void)getFormTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateIdString:(NSString *)formTemplateIdString rawString:(NSString *)rawString __attribute__((swift_name("getFormTemplate(dartResultCallback:sdkId:formTemplateIdString:rawString:)")));
- (void)getFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getForms(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getLatestFormByLogicalUuidDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId logicalUuidString:(NSString *)logicalUuidString __attribute__((swift_name("getLatestFormByLogicalUuid(dartResultCallback:sdkId:logicalUuidString:)")));
- (void)getLatestFormByUniqueIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId uniqueIdString:(NSString *)uniqueIdString __attribute__((swift_name("getLatestFormByUniqueId(dartResultCallback:sdkId:uniqueIdString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:formString:)")));
- (void)matchFormsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchFormsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchFormsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchFormsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyForm(dartResultCallback:sdkId:entityString:)")));
- (void)modifyFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyForms(dartResultCallback:sdkId:entitiesString:)")));
- (void)purgeFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("purgeForm(dartResultCallback:sdkId:formString:)")));
- (void)purgeFormByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeFormById(dartResultCallback:sdkId:idString:revString:)")));
- (void)setTemplateAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateIdString:(NSString *)formTemplateIdString payloadString:(NSString *)payloadString __attribute__((swift_name("setTemplateAttachment(dartResultCallback:sdkId:formTemplateIdString:payloadString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString formString:(NSString *)formString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:formString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:formString:delegatesString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:formString:)")));
- (void)undeleteFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("undeleteForm(dartResultCallback:sdkId:formString:)")));
- (void)undeleteFormByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteFormById(dartResultCallback:sdkId:idString:revString:)")));
- (void)updateFormTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateString:(NSString *)formTemplateString __attribute__((swift_name("updateFormTemplate(dartResultCallback:sdkId:formTemplateString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormApi.encrypted")))
@interface CDSSLFormApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLFormApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterFormsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterFormsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterFormsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterFormsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getForm(dartResultCallback:sdkId:entityIdString:)")));
- (void)getFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getForms(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getLatestFormByLogicalUuidDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId logicalUuidString:(NSString *)logicalUuidString __attribute__((swift_name("getLatestFormByLogicalUuid(dartResultCallback:sdkId:logicalUuidString:)")));
- (void)getLatestFormByUniqueIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId uniqueIdString:(NSString *)uniqueIdString __attribute__((swift_name("getLatestFormByUniqueId(dartResultCallback:sdkId:uniqueIdString:)")));
- (void)modifyFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyForm(dartResultCallback:sdkId:entityString:)")));
- (void)modifyFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyForms(dartResultCallback:sdkId:entitiesString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString formString:(NSString *)formString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:formString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:formString:delegatesString:)")));
- (void)undeleteFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("undeleteForm(dartResultCallback:sdkId:formString:)")));
- (void)undeleteFormByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteFormById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormApi.tryAndRecover")))
@interface CDSSLFormApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLFormApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterFormsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterFormsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterFormsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterFormsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getForm(dartResultCallback:sdkId:entityIdString:)")));
- (void)getFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getForms(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getLatestFormByLogicalUuidDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId logicalUuidString:(NSString *)logicalUuidString __attribute__((swift_name("getLatestFormByLogicalUuid(dartResultCallback:sdkId:logicalUuidString:)")));
- (void)getLatestFormByUniqueIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId uniqueIdString:(NSString *)uniqueIdString __attribute__((swift_name("getLatestFormByUniqueId(dartResultCallback:sdkId:uniqueIdString:)")));
- (void)modifyFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyForm(dartResultCallback:sdkId:entityString:)")));
- (void)modifyFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyForms(dartResultCallback:sdkId:entitiesString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString formString:(NSString *)formString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:formString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:formString:delegatesString:)")));
- (void)undeleteFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("undeleteForm(dartResultCallback:sdkId:formString:)")));
- (void)undeleteFormByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteFormById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormBasicApi")))
@interface CDSSLFormBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)formBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLFormBasicApi *shared __attribute__((swift_name("shared")));
- (void)createFormTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateString:(NSString *)formTemplateString __attribute__((swift_name("createFormTemplate(dartResultCallback:sdkId:formTemplateString:)")));
- (void)deleteFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("deleteForm(dartResultCallback:sdkId:formString:)")));
- (void)deleteFormByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteFormById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteFormTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateIdString:(NSString *)formTemplateIdString __attribute__((swift_name("deleteFormTemplate(dartResultCallback:sdkId:formTemplateIdString:)")));
- (void)deleteFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formsString:(NSString *)formsString __attribute__((swift_name("deleteForms(dartResultCallback:sdkId:formsString:)")));
- (void)deleteFormsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteFormsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterFormsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterFormsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterFormsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterFormsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getForm(dartResultCallback:sdkId:entityIdString:)")));
- (void)getFormTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateIdString:(NSString *)formTemplateIdString rawString:(NSString *)rawString __attribute__((swift_name("getFormTemplate(dartResultCallback:sdkId:formTemplateIdString:rawString:)")));
- (void)getFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getForms(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getLatestFormByLogicalUuidDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId logicalUuidString:(NSString *)logicalUuidString __attribute__((swift_name("getLatestFormByLogicalUuid(dartResultCallback:sdkId:logicalUuidString:)")));
- (void)getLatestFormByUniqueIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId uniqueIdString:(NSString *)uniqueIdString __attribute__((swift_name("getLatestFormByUniqueId(dartResultCallback:sdkId:uniqueIdString:)")));
- (void)matchFormsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchFormsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchFormsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchFormsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyForm(dartResultCallback:sdkId:entityString:)")));
- (void)modifyFormsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyForms(dartResultCallback:sdkId:entitiesString:)")));
- (void)purgeFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("purgeForm(dartResultCallback:sdkId:formString:)")));
- (void)purgeFormByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeFormById(dartResultCallback:sdkId:idString:revString:)")));
- (void)setTemplateAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateIdString:(NSString *)formTemplateIdString payloadString:(NSString *)payloadString __attribute__((swift_name("setTemplateAttachment(dartResultCallback:sdkId:formTemplateIdString:payloadString:)")));
- (void)undeleteFormDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formString:(NSString *)formString __attribute__((swift_name("undeleteForm(dartResultCallback:sdkId:formString:)")));
- (void)undeleteFormByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteFormById(dartResultCallback:sdkId:idString:revString:)")));
- (void)updateFormTemplateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId formTemplateString:(NSString *)formTemplateString __attribute__((swift_name("updateFormTemplate(dartResultCallback:sdkId:formTemplateString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FrontEndMigrationApi")))
@interface CDSSLFrontEndMigrationApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)frontEndMigrationApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLFrontEndMigrationApi *shared __attribute__((swift_name("shared")));
- (void)createFrontEndMigrationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId frontEndMigrationString:(NSString *)frontEndMigrationString __attribute__((swift_name("createFrontEndMigration(dartResultCallback:sdkId:frontEndMigrationString:)")));
- (void)deleteFrontEndMigrationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId frontEndMigrationIdString:(NSString *)frontEndMigrationIdString __attribute__((swift_name("deleteFrontEndMigration(dartResultCallback:sdkId:frontEndMigrationIdString:)")));
- (void)getFrontEndMigrationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId frontEndMigrationIdString:(NSString *)frontEndMigrationIdString __attribute__((swift_name("getFrontEndMigration(dartResultCallback:sdkId:frontEndMigrationIdString:)")));
- (void)getFrontEndMigrationByNameDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId frontEndMigrationNameString:(NSString *)frontEndMigrationNameString __attribute__((swift_name("getFrontEndMigrationByName(dartResultCallback:sdkId:frontEndMigrationNameString:)")));
- (void)getFrontEndMigrationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getFrontEndMigrations(dartResultCallback:sdkId:)")));
- (void)modifyFrontEndMigrationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId frontEndMigrationString:(NSString *)frontEndMigrationString __attribute__((swift_name("modifyFrontEndMigration(dartResultCallback:sdkId:frontEndMigrationString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupApi")))
@interface CDSSLGroupApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)groupApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLGroupApi *shared __attribute__((swift_name("shared")));
- (void)changeSuperGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId childGroupIdString:(NSString *)childGroupIdString operationTokenString:(NSString *)operationTokenString __attribute__((swift_name("changeSuperGroup(dartResultCallback:sdkId:childGroupIdString:operationTokenString:)")));
- (void)createGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString nameString:(NSString *)nameString typeString:(NSString *)typeString passwordString:(NSString *)passwordString serverString:(NSString *)serverString qString:(NSString *)qString nString:(NSString *)nString superGroupString:(NSString *)superGroupString applicationIdString:(NSString *)applicationIdString initialisationDataString:(NSString *)initialisationDataString __attribute__((swift_name("createGroup(dartResultCallback:sdkId:idString:nameString:typeString:passwordString:serverString:qString:nString:superGroupString:applicationIdString:initialisationDataString:)")));
- (void)deleteGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("deleteGroup(dartResultCallback:sdkId:idString:)")));
- (void)deleteOperationTokenDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId tokenIdString:(NSString *)tokenIdString __attribute__((swift_name("deleteOperationToken(dartResultCallback:sdkId:tokenIdString:)")));
- (void)getDefaultRolesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString __attribute__((swift_name("getDefaultRoles(dartResultCallback:sdkId:groupIdString:)")));
- (void)getGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("getGroup(dartResultCallback:sdkId:idString:)")));
- (void)getGroupsStorageInfosDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupsString:(NSString *)groupsString __attribute__((swift_name("getGroupsStorageInfos(dartResultCallback:sdkId:groupsString:)")));
- (void)getHierarchyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("getHierarchy(dartResultCallback:sdkId:idString:)")));
- (void)getNameOfGroupParentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("getNameOfGroupParent(dartResultCallback:sdkId:idString:)")));
- (void)getOperationTokenDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId operationString:(NSString *)operationString durationString:(NSString *)durationString descriptionString:(NSString *)descriptionString __attribute__((swift_name("getOperationToken(dartResultCallback:sdkId:operationString:durationString:descriptionString:)")));
- (void)getReplicationInfoDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("getReplicationInfo(dartResultCallback:sdkId:idString:)")));
- (void)hardDeleteGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("hardDeleteGroup(dartResultCallback:sdkId:idString:)")));
- (void)doInitDesignDocsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString clazzString:(NSString *)clazzString warmupString:(NSString *)warmupString dryRunString:(NSString *)dryRunString __attribute__((swift_name("doInitDesignDocs(dartResultCallback:sdkId:idString:clazzString:warmupString:dryRunString:)")));
- (void)listAllGroupsIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("listAllGroupsIds(dartResultCallback:sdkId:)")));
- (void)listAppsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("listApps(dartResultCallback:sdkId:)")));
- (void)listGroupsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("listGroups(dartResultCallback:sdkId:)")));
- (void)modifyGroupNameDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString nameString:(NSString *)nameString __attribute__((swift_name("modifyGroupName(dartResultCallback:sdkId:idString:nameString:)")));
- (void)modifyGroupPropertiesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString propertiesString:(NSString *)propertiesString __attribute__((swift_name("modifyGroupProperties(dartResultCallback:sdkId:idString:propertiesString:)")));
- (void)registerNewGroupAdministratorDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId typeString:(NSString *)typeString roleString:(NSString *)roleString registrationInformationString:(NSString *)registrationInformationString __attribute__((swift_name("registerNewGroupAdministrator(dartResultCallback:sdkId:typeString:roleString:registrationInformationString:)")));
- (void)resetStorageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString qString:(NSString *)qString nString:(NSString *)nString databasesString:(NSString *)databasesString __attribute__((swift_name("resetStorage(dartResultCallback:sdkId:idString:qString:nString:databasesString:)")));
- (void)setDefaultRolesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString userTypeString:(NSString *)userTypeString roleIdsString:(NSString *)roleIdsString __attribute__((swift_name("setDefaultRoles(dartResultCallback:sdkId:groupIdString:userTypeString:roleIdsString:)")));
- (void)setGroupPasswordDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString passwordString:(NSString *)passwordString __attribute__((swift_name("setGroupPassword(dartResultCallback:sdkId:idString:passwordString:)")));
- (void)solveConflictsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString limitString:(NSString *)limitString warmupString:(NSString *)warmupString __attribute__((swift_name("solveConflicts(dartResultCallback:sdkId:idString:limitString:warmupString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HealthElementApi")))
@interface CDSSLHealthElementApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)healthElementApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLHealthElementApi *shared __attribute__((swift_name("shared")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createHealthElement(dartResultCallback:sdkId:entityString:)")));
- (void)createHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("createHealthElements(dartResultCallback:sdkId:entitiesString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:healthElementString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:healthElementString:)")));
- (void)deleteHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("deleteHealthElement(dartResultCallback:sdkId:healthElementString:)")));
- (void)deleteHealthElementByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteHealthElementById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementsString:(NSString *)healthElementsString __attribute__((swift_name("deleteHealthElements(dartResultCallback:sdkId:healthElementsString:)")));
- (void)deleteHealthElementsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteHealthElementsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterHealthElementsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthElementsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterHealthElementsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthElementsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:healthElementString:)")));
- (void)getHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getHealthElement(dartResultCallback:sdkId:entityIdString:)")));
- (void)getHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getHealthElements(dartResultCallback:sdkId:entityIdsString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:healthElementString:)")));
- (void)matchHealthElementsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchHealthElementsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchHealthElementsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchHealthElementsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyHealthElement(dartResultCallback:sdkId:entityString:)")));
- (void)modifyHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyHealthElements(dartResultCallback:sdkId:entitiesString:)")));
- (void)purgeHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("purgeHealthElement(dartResultCallback:sdkId:healthElementString:)")));
- (void)purgeHealthElementByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeHealthElementById(dartResultCallback:sdkId:idString:revString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString healthElementString:(NSString *)healthElementString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:healthElementString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:healthElementString:delegatesString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:healthElementString:)")));
- (void)undeleteHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("undeleteHealthElement(dartResultCallback:sdkId:healthElementString:)")));
- (void)undeleteHealthElementByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteHealthElementById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HealthElementApi.encrypted")))
@interface CDSSLHealthElementApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLHealthElementApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterHealthElementsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthElementsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterHealthElementsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthElementsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getHealthElement(dartResultCallback:sdkId:entityIdString:)")));
- (void)getHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getHealthElements(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyHealthElement(dartResultCallback:sdkId:entityString:)")));
- (void)modifyHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyHealthElements(dartResultCallback:sdkId:entitiesString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString healthElementString:(NSString *)healthElementString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:healthElementString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:healthElementString:delegatesString:)")));
- (void)undeleteHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("undeleteHealthElement(dartResultCallback:sdkId:healthElementString:)")));
- (void)undeleteHealthElementByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteHealthElementById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HealthElementApi.tryAndRecover")))
@interface CDSSLHealthElementApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLHealthElementApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterHealthElementsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthElementsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterHealthElementsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthElementsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getHealthElement(dartResultCallback:sdkId:entityIdString:)")));
- (void)getHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getHealthElements(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyHealthElement(dartResultCallback:sdkId:entityString:)")));
- (void)modifyHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyHealthElements(dartResultCallback:sdkId:entitiesString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString healthElementString:(NSString *)healthElementString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:healthElementString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:healthElementString:delegatesString:)")));
- (void)undeleteHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("undeleteHealthElement(dartResultCallback:sdkId:healthElementString:)")));
- (void)undeleteHealthElementByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteHealthElementById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HealthElementBasicApi")))
@interface CDSSLHealthElementBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)healthElementBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLHealthElementBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("deleteHealthElement(dartResultCallback:sdkId:healthElementString:)")));
- (void)deleteHealthElementByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteHealthElementById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementsString:(NSString *)healthElementsString __attribute__((swift_name("deleteHealthElements(dartResultCallback:sdkId:healthElementsString:)")));
- (void)deleteHealthElementsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteHealthElementsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterHealthElementsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthElementsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterHealthElementsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthElementsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getHealthElement(dartResultCallback:sdkId:entityIdString:)")));
- (void)getHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getHealthElements(dartResultCallback:sdkId:entityIdsString:)")));
- (void)matchHealthElementsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchHealthElementsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchHealthElementsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchHealthElementsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyHealthElement(dartResultCallback:sdkId:entityString:)")));
- (void)modifyHealthElementsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyHealthElements(dartResultCallback:sdkId:entitiesString:)")));
- (void)purgeHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("purgeHealthElement(dartResultCallback:sdkId:healthElementString:)")));
- (void)purgeHealthElementByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeHealthElementById(dartResultCallback:sdkId:idString:revString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeleteHealthElementDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthElementString:(NSString *)healthElementString __attribute__((swift_name("undeleteHealthElement(dartResultCallback:sdkId:healthElementString:)")));
- (void)undeleteHealthElementByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteHealthElementById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HealthcarePartyApi")))
@interface CDSSLHealthcarePartyApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)healthcarePartyApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLHealthcarePartyApi *shared __attribute__((swift_name("shared")));
- (void)createHealthcarePartyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId pString:(NSString *)pString __attribute__((swift_name("createHealthcareParty(dartResultCallback:sdkId:pString:)")));
- (void)createHealthcarePartyInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString healthcarePartyString:(NSString *)healthcarePartyString __attribute__((swift_name("createHealthcarePartyInGroup(dartResultCallback:sdkId:groupIdString:healthcarePartyString:)")));
- (void)deleteHealthcarePartiesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartiesString:(NSString *)healthcarePartiesString __attribute__((swift_name("deleteHealthcareParties(dartResultCallback:sdkId:healthcarePartiesString:)")));
- (void)deleteHealthcarePartiesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteHealthcarePartiesByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)deleteHealthcarePartiesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString healthcarePartiesString:(NSString *)healthcarePartiesString __attribute__((swift_name("deleteHealthcarePartiesInGroup(dartResultCallback:sdkId:groupIdString:healthcarePartiesString:)")));
- (void)deleteHealthcarePartiesInGroupByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteHealthcarePartiesInGroupByIds(dartResultCallback:sdkId:groupIdString:entityIdsString:)")));
- (void)deleteHealthcarePartyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartyString:(NSString *)healthcarePartyString __attribute__((swift_name("deleteHealthcareParty(dartResultCallback:sdkId:healthcarePartyString:)")));
- (void)deleteHealthcarePartyByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteHealthcarePartyById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteHealthcarePartyInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString hcpString:(NSString *)hcpString __attribute__((swift_name("deleteHealthcarePartyInGroup(dartResultCallback:sdkId:groupIdString:hcpString:)")));
- (void)deleteHealthcarePartyInGroupByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteHealthcarePartyInGroupById(dartResultCallback:sdkId:groupIdString:entityIdString:revString:)")));
- (void)filterHealthPartiesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthPartiesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterHealthPartiesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterHealthPartiesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getCurrentHealthcarePartyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getCurrentHealthcareParty(dartResultCallback:sdkId:)")));
- (void)getHealthcarePartiesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartyIdsString:(NSString *)healthcarePartyIdsString __attribute__((swift_name("getHealthcareParties(dartResultCallback:sdkId:healthcarePartyIdsString:)")));
- (void)getHealthcarePartiesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString healthcarePartyIdsString:(NSString *)healthcarePartyIdsString __attribute__((swift_name("getHealthcarePartiesInGroup(dartResultCallback:sdkId:groupIdString:healthcarePartyIdsString:)")));
- (void)getHealthcarePartyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartyIdString:(NSString *)healthcarePartyIdString __attribute__((swift_name("getHealthcareParty(dartResultCallback:sdkId:healthcarePartyIdString:)")));
- (void)getPublicKeyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartyIdString:(NSString *)healthcarePartyIdString __attribute__((swift_name("getPublicKey(dartResultCallback:sdkId:healthcarePartyIdString:)")));
- (void)listHealthcarePartiesByNameDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId nameString:(NSString *)nameString __attribute__((swift_name("listHealthcarePartiesByName(dartResultCallback:sdkId:nameString:)")));
- (void)listHealthcarePartiesByParentIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId parentIdString:(NSString *)parentIdString __attribute__((swift_name("listHealthcarePartiesByParentId(dartResultCallback:sdkId:parentIdString:)")));
- (void)matchHealthcarePartiesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchHealthcarePartiesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchHealthcarePartiesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchHealthcarePartiesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyHealthcarePartyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartyString:(NSString *)healthcarePartyString __attribute__((swift_name("modifyHealthcareParty(dartResultCallback:sdkId:healthcarePartyString:)")));
- (void)modifyHealthcarePartyInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString healthcarePartyString:(NSString *)healthcarePartyString __attribute__((swift_name("modifyHealthcarePartyInGroup(dartResultCallback:sdkId:groupIdString:healthcarePartyString:)")));
- (void)purgeHealthcarePartyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartyString:(NSString *)healthcarePartyString __attribute__((swift_name("purgeHealthcareParty(dartResultCallback:sdkId:healthcarePartyString:)")));
- (void)purgeHealthcarePartyByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeHealthcarePartyById(dartResultCallback:sdkId:idString:revString:)")));
- (void)registerPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString parentHcPartyIdString:(NSString *)parentHcPartyIdString tokenString:(NSString *)tokenString useShortTokenString:(NSString *)useShortTokenString hcpString:(NSString *)hcpString __attribute__((swift_name("registerPatient(dartResultCallback:sdkId:groupIdString:parentHcPartyIdString:tokenString:useShortTokenString:hcpString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeleteHealthcarePartyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartyString:(NSString *)healthcarePartyString __attribute__((swift_name("undeleteHealthcareParty(dartResultCallback:sdkId:healthcarePartyString:)")));
- (void)undeleteHealthcarePartyByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteHealthcarePartyById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InsuranceApi")))
@interface CDSSLInsuranceApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)insuranceApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLInsuranceApi *shared __attribute__((swift_name("shared")));
- (void)createInsuranceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId insuranceString:(NSString *)insuranceString __attribute__((swift_name("createInsurance(dartResultCallback:sdkId:insuranceString:)")));
- (void)deleteInsuranceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId insuranceIdString:(NSString *)insuranceIdString __attribute__((swift_name("deleteInsurance(dartResultCallback:sdkId:insuranceIdString:)")));
- (void)getInsuranceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId insuranceIdString:(NSString *)insuranceIdString __attribute__((swift_name("getInsurance(dartResultCallback:sdkId:insuranceIdString:)")));
- (void)getInsurancesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId insuranceIdsString:(NSString *)insuranceIdsString __attribute__((swift_name("getInsurances(dartResultCallback:sdkId:insuranceIdsString:)")));
- (void)listInsurancesByCodeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId insuranceCodeString:(NSString *)insuranceCodeString __attribute__((swift_name("listInsurancesByCode(dartResultCallback:sdkId:insuranceCodeString:)")));
- (void)listInsurancesByNameDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId insuranceNameString:(NSString *)insuranceNameString __attribute__((swift_name("listInsurancesByName(dartResultCallback:sdkId:insuranceNameString:)")));
- (void)modifyInsuranceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId insuranceString:(NSString *)insuranceString __attribute__((swift_name("modifyInsurance(dartResultCallback:sdkId:insuranceString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceApi")))
@interface CDSSLInvoiceApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)invoiceApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLInvoiceApi *shared __attribute__((swift_name("shared")));
- (void)appendCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString typeString:(NSString *)typeString sentMediumTypeString:(NSString *)sentMediumTypeString secretFKeysString:(NSString *)secretFKeysString insuranceIdString:(NSString *)insuranceIdString invoiceIdString:(NSString *)invoiceIdString gracePeriodString:(NSString *)gracePeriodString invoicingCodesString:(NSString *)invoicingCodesString __attribute__((swift_name("appendCodes(dartResultCallback:sdkId:userIdString:typeString:sentMediumTypeString:secretFKeysString:insuranceIdString:invoiceIdString:gracePeriodString:invoicingCodesString:)")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString prefixString:(NSString *)prefixString __attribute__((swift_name("createInvoice(dartResultCallback:sdkId:entityString:prefixString:)")));
- (void)createInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("createInvoices(dartResultCallback:sdkId:entitiesString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:invoiceString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:invoiceString:)")));
- (void)deleteInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("deleteInvoice(dartResultCallback:sdkId:entityIdString:)")));
- (void)findInvoicesByHcPartyPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("findInvoicesByHcPartyPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)findInvoicesDelegationsStubsByHcPartyPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("findInvoicesDelegationsStubsByHcPartyPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:invoiceString:)")));
- (void)getInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getInvoice(dartResultCallback:sdkId:entityIdString:)")));
- (void)getInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getInvoices(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getTarificationsCodesOccurrencesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId minOccurrenceString:(NSString *)minOccurrenceString __attribute__((swift_name("getTarificationsCodesOccurrences(dartResultCallback:sdkId:minOccurrenceString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:invoiceString:)")));
- (void)listInvoicesByContactIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactIdsString:(NSString *)contactIdsString __attribute__((swift_name("listInvoicesByContactIds(dartResultCallback:sdkId:contactIdsString:)")));
- (void)listInvoicesByHCPartyAndPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("listInvoicesByHCPartyAndPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)listInvoicesByHcPartyAndGroupIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString groupIdString:(NSString *)groupIdString __attribute__((swift_name("listInvoicesByHcPartyAndGroupId(dartResultCallback:sdkId:hcPartyIdString:groupIdString:)")));
- (void)listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString sentMediumTypeString:(NSString *)sentMediumTypeString invoiceTypeString:(NSString *)invoiceTypeString sentString:(NSString *)sentString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDate(dartResultCallback:sdkId:hcPartyIdString:sentMediumTypeString:invoiceTypeString:sentString:fromString:toString:)")));
- (void)listInvoicesByHcpartySendingModeStatusDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString sendingModeString:(NSString *)sendingModeString statusString:(NSString *)statusString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("listInvoicesByHcpartySendingModeStatusDate(dartResultCallback:sdkId:hcPartyIdString:sendingModeString:statusString:fromString:toString:)")));
- (void)listInvoicesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString __attribute__((swift_name("listInvoicesByIds(dartResultCallback:sdkId:idsString:)")));
- (void)listInvoicesByRecipientsIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId recipientsIdsString:(NSString *)recipientsIdsString __attribute__((swift_name("listInvoicesByRecipientsIds(dartResultCallback:sdkId:recipientsIdsString:)")));
- (void)listToInsurancesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("listToInsurances(dartResultCallback:sdkId:userIdsString:)")));
- (void)listToInsurancesUnsentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("listToInsurancesUnsent(dartResultCallback:sdkId:userIdsString:)")));
- (void)listToPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString __attribute__((swift_name("listToPatients(dartResultCallback:sdkId:hcPartyIdString:)")));
- (void)listToPatientsUnsentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString __attribute__((swift_name("listToPatientsUnsent(dartResultCallback:sdkId:hcPartyIdString:)")));
- (void)mergeToDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceIdString:(NSString *)invoiceIdString idsString:(NSString *)idsString __attribute__((swift_name("mergeTo(dartResultCallback:sdkId:invoiceIdString:idsString:)")));
- (void)modifyInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyInvoice(dartResultCallback:sdkId:entityString:)")));
- (void)modifyInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyInvoices(dartResultCallback:sdkId:entitiesString:)")));
- (void)reassignInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("reassignInvoice(dartResultCallback:sdkId:invoiceString:)")));
- (void)removeCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString serviceIdString:(NSString *)serviceIdString secretFKeysString:(NSString *)secretFKeysString tarificationIdsString:(NSString *)tarificationIdsString __attribute__((swift_name("removeCodes(dartResultCallback:sdkId:userIdString:serviceIdString:secretFKeysString:tarificationIdsString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString invoiceString:(NSString *)invoiceString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:invoiceString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:invoiceString:delegatesString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:invoiceString:)")));
- (void)validateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceIdString:(NSString *)invoiceIdString schemeString:(NSString *)schemeString forcedValueString:(NSString *)forcedValueString __attribute__((swift_name("validate(dartResultCallback:sdkId:invoiceIdString:schemeString:forcedValueString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceApi.encrypted")))
@interface CDSSLInvoiceApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLInvoiceApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)appendCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString typeString:(NSString *)typeString sentMediumTypeString:(NSString *)sentMediumTypeString secretFKeysString:(NSString *)secretFKeysString insuranceIdString:(NSString *)insuranceIdString invoiceIdString:(NSString *)invoiceIdString gracePeriodString:(NSString *)gracePeriodString invoicingCodesString:(NSString *)invoicingCodesString __attribute__((swift_name("appendCodes(dartResultCallback:sdkId:userIdString:typeString:sentMediumTypeString:secretFKeysString:insuranceIdString:invoiceIdString:gracePeriodString:invoicingCodesString:)")));
- (void)findInvoicesByHcPartyPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("findInvoicesByHcPartyPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)getInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getInvoice(dartResultCallback:sdkId:entityIdString:)")));
- (void)getInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getInvoices(dartResultCallback:sdkId:entityIdsString:)")));
- (void)listInvoicesByContactIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactIdsString:(NSString *)contactIdsString __attribute__((swift_name("listInvoicesByContactIds(dartResultCallback:sdkId:contactIdsString:)")));
- (void)listInvoicesByHCPartyAndPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("listInvoicesByHCPartyAndPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)listInvoicesByHcPartyAndGroupIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString groupIdString:(NSString *)groupIdString __attribute__((swift_name("listInvoicesByHcPartyAndGroupId(dartResultCallback:sdkId:hcPartyIdString:groupIdString:)")));
- (void)listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString sentMediumTypeString:(NSString *)sentMediumTypeString invoiceTypeString:(NSString *)invoiceTypeString sentString:(NSString *)sentString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDate(dartResultCallback:sdkId:hcPartyIdString:sentMediumTypeString:invoiceTypeString:sentString:fromString:toString:)")));
- (void)listInvoicesByHcpartySendingModeStatusDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString sendingModeString:(NSString *)sendingModeString statusString:(NSString *)statusString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("listInvoicesByHcpartySendingModeStatusDate(dartResultCallback:sdkId:hcPartyIdString:sendingModeString:statusString:fromString:toString:)")));
- (void)listInvoicesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString __attribute__((swift_name("listInvoicesByIds(dartResultCallback:sdkId:idsString:)")));
- (void)listInvoicesByRecipientsIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId recipientsIdsString:(NSString *)recipientsIdsString __attribute__((swift_name("listInvoicesByRecipientsIds(dartResultCallback:sdkId:recipientsIdsString:)")));
- (void)listToInsurancesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("listToInsurances(dartResultCallback:sdkId:userIdsString:)")));
- (void)listToInsurancesUnsentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("listToInsurancesUnsent(dartResultCallback:sdkId:userIdsString:)")));
- (void)listToPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString __attribute__((swift_name("listToPatients(dartResultCallback:sdkId:hcPartyIdString:)")));
- (void)listToPatientsUnsentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString __attribute__((swift_name("listToPatientsUnsent(dartResultCallback:sdkId:hcPartyIdString:)")));
- (void)mergeToDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceIdString:(NSString *)invoiceIdString idsString:(NSString *)idsString __attribute__((swift_name("mergeTo(dartResultCallback:sdkId:invoiceIdString:idsString:)")));
- (void)modifyInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyInvoice(dartResultCallback:sdkId:entityString:)")));
- (void)modifyInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyInvoices(dartResultCallback:sdkId:entitiesString:)")));
- (void)reassignInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("reassignInvoice(dartResultCallback:sdkId:invoiceString:)")));
- (void)removeCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString serviceIdString:(NSString *)serviceIdString secretFKeysString:(NSString *)secretFKeysString tarificationIdsString:(NSString *)tarificationIdsString __attribute__((swift_name("removeCodes(dartResultCallback:sdkId:userIdString:serviceIdString:secretFKeysString:tarificationIdsString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString invoiceString:(NSString *)invoiceString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:invoiceString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:invoiceString:delegatesString:)")));
- (void)validateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceIdString:(NSString *)invoiceIdString schemeString:(NSString *)schemeString forcedValueString:(NSString *)forcedValueString __attribute__((swift_name("validate(dartResultCallback:sdkId:invoiceIdString:schemeString:forcedValueString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceApi.tryAndRecover")))
@interface CDSSLInvoiceApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLInvoiceApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)appendCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString typeString:(NSString *)typeString sentMediumTypeString:(NSString *)sentMediumTypeString secretFKeysString:(NSString *)secretFKeysString insuranceIdString:(NSString *)insuranceIdString invoiceIdString:(NSString *)invoiceIdString gracePeriodString:(NSString *)gracePeriodString invoicingCodesString:(NSString *)invoicingCodesString __attribute__((swift_name("appendCodes(dartResultCallback:sdkId:userIdString:typeString:sentMediumTypeString:secretFKeysString:insuranceIdString:invoiceIdString:gracePeriodString:invoicingCodesString:)")));
- (void)findInvoicesByHcPartyPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("findInvoicesByHcPartyPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)getInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getInvoice(dartResultCallback:sdkId:entityIdString:)")));
- (void)getInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getInvoices(dartResultCallback:sdkId:entityIdsString:)")));
- (void)listInvoicesByContactIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactIdsString:(NSString *)contactIdsString __attribute__((swift_name("listInvoicesByContactIds(dartResultCallback:sdkId:contactIdsString:)")));
- (void)listInvoicesByHCPartyAndPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("listInvoicesByHCPartyAndPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)listInvoicesByHcPartyAndGroupIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString groupIdString:(NSString *)groupIdString __attribute__((swift_name("listInvoicesByHcPartyAndGroupId(dartResultCallback:sdkId:hcPartyIdString:groupIdString:)")));
- (void)listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString sentMediumTypeString:(NSString *)sentMediumTypeString invoiceTypeString:(NSString *)invoiceTypeString sentString:(NSString *)sentString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDate(dartResultCallback:sdkId:hcPartyIdString:sentMediumTypeString:invoiceTypeString:sentString:fromString:toString:)")));
- (void)listInvoicesByHcpartySendingModeStatusDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString sendingModeString:(NSString *)sendingModeString statusString:(NSString *)statusString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("listInvoicesByHcpartySendingModeStatusDate(dartResultCallback:sdkId:hcPartyIdString:sendingModeString:statusString:fromString:toString:)")));
- (void)listInvoicesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString __attribute__((swift_name("listInvoicesByIds(dartResultCallback:sdkId:idsString:)")));
- (void)listInvoicesByRecipientsIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId recipientsIdsString:(NSString *)recipientsIdsString __attribute__((swift_name("listInvoicesByRecipientsIds(dartResultCallback:sdkId:recipientsIdsString:)")));
- (void)listToInsurancesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("listToInsurances(dartResultCallback:sdkId:userIdsString:)")));
- (void)listToInsurancesUnsentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("listToInsurancesUnsent(dartResultCallback:sdkId:userIdsString:)")));
- (void)listToPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString __attribute__((swift_name("listToPatients(dartResultCallback:sdkId:hcPartyIdString:)")));
- (void)listToPatientsUnsentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString __attribute__((swift_name("listToPatientsUnsent(dartResultCallback:sdkId:hcPartyIdString:)")));
- (void)mergeToDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceIdString:(NSString *)invoiceIdString idsString:(NSString *)idsString __attribute__((swift_name("mergeTo(dartResultCallback:sdkId:invoiceIdString:idsString:)")));
- (void)modifyInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyInvoice(dartResultCallback:sdkId:entityString:)")));
- (void)modifyInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyInvoices(dartResultCallback:sdkId:entitiesString:)")));
- (void)reassignInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("reassignInvoice(dartResultCallback:sdkId:invoiceString:)")));
- (void)removeCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString serviceIdString:(NSString *)serviceIdString secretFKeysString:(NSString *)secretFKeysString tarificationIdsString:(NSString *)tarificationIdsString __attribute__((swift_name("removeCodes(dartResultCallback:sdkId:userIdString:serviceIdString:secretFKeysString:tarificationIdsString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString invoiceString:(NSString *)invoiceString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:invoiceString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:invoiceString:delegatesString:)")));
- (void)validateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceIdString:(NSString *)invoiceIdString schemeString:(NSString *)schemeString forcedValueString:(NSString *)forcedValueString __attribute__((swift_name("validate(dartResultCallback:sdkId:invoiceIdString:schemeString:forcedValueString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("InvoiceBasicApi")))
@interface CDSSLInvoiceBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)invoiceBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLInvoiceBasicApi *shared __attribute__((swift_name("shared")));
- (void)appendCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString typeString:(NSString *)typeString sentMediumTypeString:(NSString *)sentMediumTypeString secretFKeysString:(NSString *)secretFKeysString insuranceIdString:(NSString *)insuranceIdString invoiceIdString:(NSString *)invoiceIdString gracePeriodString:(NSString *)gracePeriodString invoicingCodesString:(NSString *)invoicingCodesString __attribute__((swift_name("appendCodes(dartResultCallback:sdkId:userIdString:typeString:sentMediumTypeString:secretFKeysString:insuranceIdString:invoiceIdString:gracePeriodString:invoicingCodesString:)")));
- (void)deleteInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("deleteInvoice(dartResultCallback:sdkId:entityIdString:)")));
- (void)findInvoicesByHcPartyPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("findInvoicesByHcPartyPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)findInvoicesDelegationsStubsByHcPartyPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("findInvoicesDelegationsStubsByHcPartyPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)getInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getInvoice(dartResultCallback:sdkId:entityIdString:)")));
- (void)getInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getInvoices(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getTarificationsCodesOccurrencesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId minOccurrenceString:(NSString *)minOccurrenceString __attribute__((swift_name("getTarificationsCodesOccurrences(dartResultCallback:sdkId:minOccurrenceString:)")));
- (void)listInvoicesByContactIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId contactIdsString:(NSString *)contactIdsString __attribute__((swift_name("listInvoicesByContactIds(dartResultCallback:sdkId:contactIdsString:)")));
- (void)listInvoicesByHCPartyAndPatientForeignKeysDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString secretPatientKeysString:(NSString *)secretPatientKeysString __attribute__((swift_name("listInvoicesByHCPartyAndPatientForeignKeys(dartResultCallback:sdkId:hcPartyIdString:secretPatientKeysString:)")));
- (void)listInvoicesByHcPartyAndGroupIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString groupIdString:(NSString *)groupIdString __attribute__((swift_name("listInvoicesByHcPartyAndGroupId(dartResultCallback:sdkId:hcPartyIdString:groupIdString:)")));
- (void)listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString sentMediumTypeString:(NSString *)sentMediumTypeString invoiceTypeString:(NSString *)invoiceTypeString sentString:(NSString *)sentString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDate(dartResultCallback:sdkId:hcPartyIdString:sentMediumTypeString:invoiceTypeString:sentString:fromString:toString:)")));
- (void)listInvoicesByHcpartySendingModeStatusDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString sendingModeString:(NSString *)sendingModeString statusString:(NSString *)statusString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("listInvoicesByHcpartySendingModeStatusDate(dartResultCallback:sdkId:hcPartyIdString:sendingModeString:statusString:fromString:toString:)")));
- (void)listInvoicesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString __attribute__((swift_name("listInvoicesByIds(dartResultCallback:sdkId:idsString:)")));
- (void)listInvoicesByRecipientsIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId recipientsIdsString:(NSString *)recipientsIdsString __attribute__((swift_name("listInvoicesByRecipientsIds(dartResultCallback:sdkId:recipientsIdsString:)")));
- (void)listToInsurancesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("listToInsurances(dartResultCallback:sdkId:userIdsString:)")));
- (void)listToInsurancesUnsentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("listToInsurancesUnsent(dartResultCallback:sdkId:userIdsString:)")));
- (void)listToPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString __attribute__((swift_name("listToPatients(dartResultCallback:sdkId:hcPartyIdString:)")));
- (void)listToPatientsUnsentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId hcPartyIdString:(NSString *)hcPartyIdString __attribute__((swift_name("listToPatientsUnsent(dartResultCallback:sdkId:hcPartyIdString:)")));
- (void)mergeToDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceIdString:(NSString *)invoiceIdString idsString:(NSString *)idsString __attribute__((swift_name("mergeTo(dartResultCallback:sdkId:invoiceIdString:idsString:)")));
- (void)modifyInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyInvoice(dartResultCallback:sdkId:entityString:)")));
- (void)modifyInvoicesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entitiesString:(NSString *)entitiesString __attribute__((swift_name("modifyInvoices(dartResultCallback:sdkId:entitiesString:)")));
- (void)reassignInvoiceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceString:(NSString *)invoiceString __attribute__((swift_name("reassignInvoice(dartResultCallback:sdkId:invoiceString:)")));
- (void)removeCodesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString serviceIdString:(NSString *)serviceIdString secretFKeysString:(NSString *)secretFKeysString tarificationIdsString:(NSString *)tarificationIdsString __attribute__((swift_name("removeCodes(dartResultCallback:sdkId:userIdString:serviceIdString:secretFKeysString:tarificationIdsString:)")));
- (void)validateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId invoiceIdString:(NSString *)invoiceIdString schemeString:(NSString *)schemeString forcedValueString:(NSString *)forcedValueString __attribute__((swift_name("validate(dartResultCallback:sdkId:invoiceIdString:schemeString:forcedValueString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KeywordApi")))
@interface CDSSLKeywordApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)keywordApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKeywordApi *shared __attribute__((swift_name("shared")));
- (void)createKeywordDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId frontEndMigrationString:(NSString *)frontEndMigrationString __attribute__((swift_name("createKeyword(dartResultCallback:sdkId:frontEndMigrationString:)")));
- (void)deleteKeywordsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId keywordIdsString:(NSString *)keywordIdsString __attribute__((swift_name("deleteKeywords(dartResultCallback:sdkId:keywordIdsString:)")));
- (void)getKeywordDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId frontEndMigrationIdString:(NSString *)frontEndMigrationIdString __attribute__((swift_name("getKeyword(dartResultCallback:sdkId:frontEndMigrationIdString:)")));
- (void)getKeywordsByUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString __attribute__((swift_name("getKeywordsByUser(dartResultCallback:sdkId:userIdString:)")));
- (void)modifyKeywordDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId keywordString:(NSString *)keywordString __attribute__((swift_name("modifyKeyword(dartResultCallback:sdkId:keywordString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaintenanceTaskApi")))
@interface CDSSLMaintenanceTaskApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)maintenanceTaskApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMaintenanceTaskApi *shared __attribute__((swift_name("shared")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createMaintenanceTask(dartResultCallback:sdkId:entityString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)deleteMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("deleteMaintenanceTask(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)deleteMaintenanceTaskByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteMaintenanceTaskById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteMaintenanceTasksDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTasksString:(NSString *)maintenanceTasksString __attribute__((swift_name("deleteMaintenanceTasks(dartResultCallback:sdkId:maintenanceTasksString:)")));
- (void)deleteMaintenanceTasksByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteMaintenanceTasksByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterMaintenanceTasksByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMaintenanceTasksBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMaintenanceTasksBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMaintenanceTasksBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)getMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getMaintenanceTask(dartResultCallback:sdkId:entityIdString:)")));
- (void)getMaintenanceTasksDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getMaintenanceTasks(dartResultCallback:sdkId:entityIdsString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)matchMaintenanceTasksByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMaintenanceTasksBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchMaintenanceTasksBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMaintenanceTasksBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyMaintenanceTask(dartResultCallback:sdkId:entityString:)")));
- (void)purgeMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("purgeMaintenanceTask(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)purgeMaintenanceTaskByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeMaintenanceTaskById(dartResultCallback:sdkId:idString:revString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString maintenanceTaskString:(NSString *)maintenanceTaskString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:maintenanceTaskString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:maintenanceTaskString:delegatesString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)undeleteMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("undeleteMaintenanceTask(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)undeleteMaintenanceTaskByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteMaintenanceTaskById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString userString:(NSString *)userString delegatesString:(NSString *)delegatesString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:maintenanceTaskString:userString:delegatesString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaintenanceTaskApi.encrypted")))
@interface CDSSLMaintenanceTaskApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMaintenanceTaskApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterMaintenanceTasksByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMaintenanceTasksBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMaintenanceTasksBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMaintenanceTasksBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getMaintenanceTask(dartResultCallback:sdkId:entityIdString:)")));
- (void)getMaintenanceTasksDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getMaintenanceTasks(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyMaintenanceTask(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString maintenanceTaskString:(NSString *)maintenanceTaskString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:maintenanceTaskString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:maintenanceTaskString:delegatesString:)")));
- (void)undeleteMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("undeleteMaintenanceTask(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)undeleteMaintenanceTaskByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteMaintenanceTaskById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaintenanceTaskApi.tryAndRecover")))
@interface CDSSLMaintenanceTaskApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMaintenanceTaskApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterMaintenanceTasksByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMaintenanceTasksBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMaintenanceTasksBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMaintenanceTasksBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getMaintenanceTask(dartResultCallback:sdkId:entityIdString:)")));
- (void)getMaintenanceTasksDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getMaintenanceTasks(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyMaintenanceTask(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString maintenanceTaskString:(NSString *)maintenanceTaskString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:maintenanceTaskString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:maintenanceTaskString:delegatesString:)")));
- (void)undeleteMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("undeleteMaintenanceTask(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)undeleteMaintenanceTaskByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteMaintenanceTaskById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaintenanceTaskBasicApi")))
@interface CDSSLMaintenanceTaskBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)maintenanceTaskBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMaintenanceTaskBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("deleteMaintenanceTask(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)deleteMaintenanceTaskByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteMaintenanceTaskById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteMaintenanceTasksDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTasksString:(NSString *)maintenanceTasksString __attribute__((swift_name("deleteMaintenanceTasks(dartResultCallback:sdkId:maintenanceTasksString:)")));
- (void)deleteMaintenanceTasksByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteMaintenanceTasksByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterMaintenanceTasksByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMaintenanceTasksBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMaintenanceTasksBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMaintenanceTasksBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getMaintenanceTask(dartResultCallback:sdkId:entityIdString:)")));
- (void)getMaintenanceTasksDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getMaintenanceTasks(dartResultCallback:sdkId:entityIdsString:)")));
- (void)matchMaintenanceTasksByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMaintenanceTasksBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchMaintenanceTasksBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMaintenanceTasksBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyMaintenanceTask(dartResultCallback:sdkId:entityString:)")));
- (void)purgeMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("purgeMaintenanceTask(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)purgeMaintenanceTaskByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeMaintenanceTaskById(dartResultCallback:sdkId:idString:revString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeleteMaintenanceTaskDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId maintenanceTaskString:(NSString *)maintenanceTaskString __attribute__((swift_name("undeleteMaintenanceTask(dartResultCallback:sdkId:maintenanceTaskString:)")));
- (void)undeleteMaintenanceTaskByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteMaintenanceTaskById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MedicalLocationApi")))
@interface CDSSLMedicalLocationApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)medicalLocationApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMedicalLocationApi *shared __attribute__((swift_name("shared")));
- (void)createMedicalLocationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId medicalLocationDtoString:(NSString *)medicalLocationDtoString __attribute__((swift_name("createMedicalLocation(dartResultCallback:sdkId:medicalLocationDtoString:)")));
- (void)deleteMedicalLocationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId locationIdsString:(NSString *)locationIdsString __attribute__((swift_name("deleteMedicalLocations(dartResultCallback:sdkId:locationIdsString:)")));
- (void)filterMedicalLocationsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMedicalLocationsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMedicalLocationsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMedicalLocationsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getMedicalLocationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId locationIdString:(NSString *)locationIdString __attribute__((swift_name("getMedicalLocation(dartResultCallback:sdkId:locationIdString:)")));
- (void)getMedicalLocationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId medicalLocationIdsString:(NSString *)medicalLocationIdsString __attribute__((swift_name("getMedicalLocations(dartResultCallback:sdkId:medicalLocationIdsString:)")));
- (void)matchMedicalLocationsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMedicalLocationsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchMedicalLocationsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMedicalLocationsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyMedicalLocationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId medicalLocationDtoString:(NSString *)medicalLocationDtoString __attribute__((swift_name("modifyMedicalLocation(dartResultCallback:sdkId:medicalLocationDtoString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageApi")))
@interface CDSSLMessageApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)messageApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMessageApi *shared __attribute__((swift_name("shared")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createMessage(dartResultCallback:sdkId:entityString:)")));
- (void)createMessageInTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createMessageInTopic(dartResultCallback:sdkId:entityString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:messageString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:messageString:)")));
- (void)deleteMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("deleteMessage(dartResultCallback:sdkId:messageString:)")));
- (void)deleteMessageByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteMessageById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteMessagesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messagesString:(NSString *)messagesString __attribute__((swift_name("deleteMessages(dartResultCallback:sdkId:messagesString:)")));
- (void)deleteMessagesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteMessagesByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterMessagesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMessagesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMessagesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMessagesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:messageString:)")));
- (void)getMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getMessage(dartResultCallback:sdkId:entityIdString:)")));
- (void)getMessagesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getMessages(dartResultCallback:sdkId:entityIdsString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:messageString:)")));
- (void)matchMessagesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMessagesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchMessagesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMessagesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyMessage(dartResultCallback:sdkId:entityString:)")));
- (void)purgeMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("purgeMessage(dartResultCallback:sdkId:messageString:)")));
- (void)purgeMessageByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeMessageById(dartResultCallback:sdkId:idString:revString:)")));
- (void)setMessagesReadStatusDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString timeString:(NSString *)timeString readStatusString:(NSString *)readStatusString userIdString:(NSString *)userIdString __attribute__((swift_name("setMessagesReadStatus(dartResultCallback:sdkId:entityIdsString:timeString:readStatusString:userIdString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString messageString:(NSString *)messageString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:messageString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:messageString:delegatesString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:messageString:)")));
- (void)undeleteMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("undeleteMessage(dartResultCallback:sdkId:messageString:)")));
- (void)undeleteMessageByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteMessageById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageApi.encrypted")))
@interface CDSSLMessageApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMessageApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterMessagesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMessagesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMessagesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMessagesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getMessage(dartResultCallback:sdkId:entityIdString:)")));
- (void)getMessagesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getMessages(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyMessage(dartResultCallback:sdkId:entityString:)")));
- (void)setMessagesReadStatusDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString timeString:(NSString *)timeString readStatusString:(NSString *)readStatusString userIdString:(NSString *)userIdString __attribute__((swift_name("setMessagesReadStatus(dartResultCallback:sdkId:entityIdsString:timeString:readStatusString:userIdString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString messageString:(NSString *)messageString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:messageString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:messageString:delegatesString:)")));
- (void)undeleteMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("undeleteMessage(dartResultCallback:sdkId:messageString:)")));
- (void)undeleteMessageByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteMessageById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageApi.tryAndRecover")))
@interface CDSSLMessageApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMessageApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterMessagesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMessagesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMessagesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMessagesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getMessage(dartResultCallback:sdkId:entityIdString:)")));
- (void)getMessagesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getMessages(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyMessage(dartResultCallback:sdkId:entityString:)")));
- (void)setMessagesReadStatusDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString timeString:(NSString *)timeString readStatusString:(NSString *)readStatusString userIdString:(NSString *)userIdString __attribute__((swift_name("setMessagesReadStatus(dartResultCallback:sdkId:entityIdsString:timeString:readStatusString:userIdString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString messageString:(NSString *)messageString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:messageString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:messageString:delegatesString:)")));
- (void)undeleteMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("undeleteMessage(dartResultCallback:sdkId:messageString:)")));
- (void)undeleteMessageByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteMessageById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageBasicApi")))
@interface CDSSLMessageBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)messageBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMessageBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("deleteMessage(dartResultCallback:sdkId:messageString:)")));
- (void)deleteMessageByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteMessageById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteMessagesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messagesString:(NSString *)messagesString __attribute__((swift_name("deleteMessages(dartResultCallback:sdkId:messagesString:)")));
- (void)deleteMessagesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteMessagesByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterMessagesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMessagesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterMessagesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterMessagesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getMessage(dartResultCallback:sdkId:entityIdString:)")));
- (void)getMessagesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getMessages(dartResultCallback:sdkId:entityIdsString:)")));
- (void)matchMessagesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMessagesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchMessagesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchMessagesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyMessage(dartResultCallback:sdkId:entityString:)")));
- (void)purgeMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("purgeMessage(dartResultCallback:sdkId:messageString:)")));
- (void)purgeMessageByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeMessageById(dartResultCallback:sdkId:idString:revString:)")));
- (void)setMessagesReadStatusDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString timeString:(NSString *)timeString readStatusString:(NSString *)readStatusString userIdString:(NSString *)userIdString __attribute__((swift_name("setMessagesReadStatus(dartResultCallback:sdkId:entityIdsString:timeString:readStatusString:userIdString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeleteMessageDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId messageString:(NSString *)messageString __attribute__((swift_name("undeleteMessage(dartResultCallback:sdkId:messageString:)")));
- (void)undeleteMessageByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteMessageById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PatientApi")))
@interface CDSSLPatientApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)patientApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLPatientApi *shared __attribute__((swift_name("shared")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("createPatient(dartResultCallback:sdkId:patientString:)")));
- (void)createPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientDtosString:(NSString *)patientDtosString __attribute__((swift_name("createPatients(dartResultCallback:sdkId:patientDtosString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:patientString:)")));
- (void)deletePatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("deletePatient(dartResultCallback:sdkId:patientString:)")));
- (void)deletePatientByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deletePatientById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deletePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientsString:(NSString *)patientsString __attribute__((swift_name("deletePatients(dartResultCallback:sdkId:patientsString:)")));
- (void)deletePatientsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deletePatientsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)ensureEncryptionMetadataForSelfIsInitializedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId sharingWithString:(NSString *)sharingWithString __attribute__((swift_name("ensureEncryptionMetadataForSelfIsInitialized(dartResultCallback:sdkId:sharingWithString:)")));
- (void)filterPatientsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterPatientsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterPatientsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterPatientsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)forceInitializeExchangeDataToNewlyInvitedPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdString:(NSString *)patientIdString __attribute__((swift_name("forceInitializeExchangeDataToNewlyInvitedPatient(dartResultCallback:sdkId:patientIdString:)")));
- (void)getConfidentialSecretIdsOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("getConfidentialSecretIdsOf(dartResultCallback:sdkId:patientString:)")));
- (void)getDataOwnersWithAccessToDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("getDataOwnersWithAccessTo(dartResultCallback:sdkId:patientString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:patientString:)")));
- (void)getPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getPatient(dartResultCallback:sdkId:entityIdString:)")));
- (void)getPatientResolvingMergesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdString:(NSString *)patientIdString maxMergeDepthString:(NSString *)maxMergeDepthString __attribute__((swift_name("getPatientResolvingMerges(dartResultCallback:sdkId:patientIdString:maxMergeDepthString:)")));
- (void)getPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdsString:(NSString *)patientIdsString __attribute__((swift_name("getPatients(dartResultCallback:sdkId:patientIdsString:)")));
- (void)getSecretIdsOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("getSecretIdsOf(dartResultCallback:sdkId:patientString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:patientString:)")));
- (void)initializeConfidentialSecretIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("initializeConfidentialSecretId(dartResultCallback:sdkId:patientString:)")));
- (void)matchPatientsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchPatientsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchPatientsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchPatientsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)mergePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId fromString:(NSString *)fromString mergedIntoString:(NSString *)mergedIntoString __attribute__((swift_name("mergePatients(dartResultCallback:sdkId:fromString:mergedIntoString:)")));
- (void)modifyPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyPatient(dartResultCallback:sdkId:entityString:)")));
- (void)modifyPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientDtosString:(NSString *)patientDtosString __attribute__((swift_name("modifyPatients(dartResultCallback:sdkId:patientDtosString:)")));
- (void)purgePatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("purgePatient(dartResultCallback:sdkId:patientString:)")));
- (void)purgePatientByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgePatientById(dartResultCallback:sdkId:idString:revString:)")));
- (void)shareAllDataOfPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdString:(NSString *)patientIdString delegatesWithShareTypeString:(NSString *)delegatesWithShareTypeString __attribute__((swift_name("shareAllDataOfPatient(dartResultCallback:sdkId:patientIdString:delegatesWithShareTypeString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString patientString:(NSString *)patientString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:patientString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:patientString:delegatesString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:patientString:)")));
- (void)undeletePatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("undeletePatient(dartResultCallback:sdkId:patientString:)")));
- (void)undeletePatientByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeletePatientById(dartResultCallback:sdkId:idString:revString:)")));
- (void)undeletePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString __attribute__((swift_name("undeletePatients(dartResultCallback:sdkId:idsString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString userString:(NSString *)userString delegatesString:(NSString *)delegatesString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:userString:delegatesString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PatientApi.encrypted")))
@interface CDSSLPatientApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLPatientApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterPatientsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterPatientsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterPatientsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterPatientsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getPatient(dartResultCallback:sdkId:entityIdString:)")));
- (void)getPatientResolvingMergesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdString:(NSString *)patientIdString maxMergeDepthString:(NSString *)maxMergeDepthString __attribute__((swift_name("getPatientResolvingMerges(dartResultCallback:sdkId:patientIdString:maxMergeDepthString:)")));
- (void)getPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdsString:(NSString *)patientIdsString __attribute__((swift_name("getPatients(dartResultCallback:sdkId:patientIdsString:)")));
- (void)initializeConfidentialSecretIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("initializeConfidentialSecretId(dartResultCallback:sdkId:patientString:)")));
- (void)mergePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId fromString:(NSString *)fromString mergedIntoString:(NSString *)mergedIntoString __attribute__((swift_name("mergePatients(dartResultCallback:sdkId:fromString:mergedIntoString:)")));
- (void)modifyPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyPatient(dartResultCallback:sdkId:entityString:)")));
- (void)modifyPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientDtosString:(NSString *)patientDtosString __attribute__((swift_name("modifyPatients(dartResultCallback:sdkId:patientDtosString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString patientString:(NSString *)patientString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:patientString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:patientString:delegatesString:)")));
- (void)undeletePatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("undeletePatient(dartResultCallback:sdkId:patientString:)")));
- (void)undeletePatientByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeletePatientById(dartResultCallback:sdkId:idString:revString:)")));
- (void)undeletePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString __attribute__((swift_name("undeletePatients(dartResultCallback:sdkId:idsString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PatientApi.tryAndRecover")))
@interface CDSSLPatientApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLPatientApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterPatientsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterPatientsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterPatientsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterPatientsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getPatient(dartResultCallback:sdkId:entityIdString:)")));
- (void)getPatientResolvingMergesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdString:(NSString *)patientIdString maxMergeDepthString:(NSString *)maxMergeDepthString __attribute__((swift_name("getPatientResolvingMerges(dartResultCallback:sdkId:patientIdString:maxMergeDepthString:)")));
- (void)getPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdsString:(NSString *)patientIdsString __attribute__((swift_name("getPatients(dartResultCallback:sdkId:patientIdsString:)")));
- (void)initializeConfidentialSecretIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("initializeConfidentialSecretId(dartResultCallback:sdkId:patientString:)")));
- (void)mergePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId fromString:(NSString *)fromString mergedIntoString:(NSString *)mergedIntoString __attribute__((swift_name("mergePatients(dartResultCallback:sdkId:fromString:mergedIntoString:)")));
- (void)modifyPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyPatient(dartResultCallback:sdkId:entityString:)")));
- (void)modifyPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientDtosString:(NSString *)patientDtosString __attribute__((swift_name("modifyPatients(dartResultCallback:sdkId:patientDtosString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString patientString:(NSString *)patientString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:patientString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:patientString:delegatesString:)")));
- (void)undeletePatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("undeletePatient(dartResultCallback:sdkId:patientString:)")));
- (void)undeletePatientByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeletePatientById(dartResultCallback:sdkId:idString:revString:)")));
- (void)undeletePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString __attribute__((swift_name("undeletePatients(dartResultCallback:sdkId:idsString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PatientBasicApi")))
@interface CDSSLPatientBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)patientBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLPatientBasicApi *shared __attribute__((swift_name("shared")));
- (void)deletePatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("deletePatient(dartResultCallback:sdkId:patientString:)")));
- (void)deletePatientByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deletePatientById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deletePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientsString:(NSString *)patientsString __attribute__((swift_name("deletePatients(dartResultCallback:sdkId:patientsString:)")));
- (void)deletePatientsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deletePatientsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterPatientsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterPatientsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterPatientsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterPatientsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getDataOwnersWithAccessToDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("getDataOwnersWithAccessTo(dartResultCallback:sdkId:patientString:)")));
- (void)getPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getPatient(dartResultCallback:sdkId:entityIdString:)")));
- (void)getPatientResolvingMergesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdString:(NSString *)patientIdString maxMergeDepthString:(NSString *)maxMergeDepthString __attribute__((swift_name("getPatientResolvingMerges(dartResultCallback:sdkId:patientIdString:maxMergeDepthString:)")));
- (void)getPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientIdsString:(NSString *)patientIdsString __attribute__((swift_name("getPatients(dartResultCallback:sdkId:patientIdsString:)")));
- (void)matchPatientsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchPatientsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchPatientsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchPatientsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)mergePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId fromString:(NSString *)fromString mergedIntoString:(NSString *)mergedIntoString __attribute__((swift_name("mergePatients(dartResultCallback:sdkId:fromString:mergedIntoString:)")));
- (void)modifyPatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyPatient(dartResultCallback:sdkId:entityString:)")));
- (void)modifyPatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientDtosString:(NSString *)patientDtosString __attribute__((swift_name("modifyPatients(dartResultCallback:sdkId:patientDtosString:)")));
- (void)purgePatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("purgePatient(dartResultCallback:sdkId:patientString:)")));
- (void)purgePatientByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgePatientById(dartResultCallback:sdkId:idString:revString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeletePatientDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId patientString:(NSString *)patientString __attribute__((swift_name("undeletePatient(dartResultCallback:sdkId:patientString:)")));
- (void)undeletePatientByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeletePatientById(dartResultCallback:sdkId:idString:revString:)")));
- (void)undeletePatientsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString __attribute__((swift_name("undeletePatients(dartResultCallback:sdkId:idsString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PermissionApi")))
@interface CDSSLPermissionApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)permissionApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLPermissionApi *shared __attribute__((swift_name("shared")));
- (void)modifyUserPermissionsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString permissionsString:(NSString *)permissionsString __attribute__((swift_name("modifyUserPermissions(dartResultCallback:sdkId:userIdString:permissionsString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PlaceApi")))
@interface CDSSLPlaceApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)placeApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLPlaceApi *shared __attribute__((swift_name("shared")));
- (void)createPlaceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId placeString:(NSString *)placeString __attribute__((swift_name("createPlace(dartResultCallback:sdkId:placeString:)")));
- (void)deletePlacesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId placeIdsString:(NSString *)placeIdsString __attribute__((swift_name("deletePlaces(dartResultCallback:sdkId:placeIdsString:)")));
- (void)getPlaceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId placeIdString:(NSString *)placeIdString __attribute__((swift_name("getPlace(dartResultCallback:sdkId:placeIdString:)")));
- (void)modifyPlaceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId placeString:(NSString *)placeString __attribute__((swift_name("modifyPlace(dartResultCallback:sdkId:placeString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReceiptApi")))
@interface CDSSLReceiptApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)receiptApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLReceiptApi *shared __attribute__((swift_name("shared")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createReceipt(dartResultCallback:sdkId:entityString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:receiptString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:receiptString:)")));
- (void)deleteReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("deleteReceipt(dartResultCallback:sdkId:entityIdString:)")));
- (void)deleteReceiptsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteReceipts(dartResultCallback:sdkId:entityIdsString:)")));
- (void)encryptAndSetReceiptAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString blobTypeString:(NSString *)blobTypeString attachmentString:(NSString *)attachmentString __attribute__((swift_name("encryptAndSetReceiptAttachment(dartResultCallback:sdkId:receiptString:blobTypeString:attachmentString:)")));
- (void)getAndDecryptReceiptAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString attachmentIdString:(NSString *)attachmentIdString __attribute__((swift_name("getAndDecryptReceiptAttachment(dartResultCallback:sdkId:receiptString:attachmentIdString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:receiptString:)")));
- (void)getRawReceiptAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptIdString:(NSString *)receiptIdString attachmentIdString:(NSString *)attachmentIdString __attribute__((swift_name("getRawReceiptAttachment(dartResultCallback:sdkId:receiptIdString:attachmentIdString:)")));
- (void)getReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getReceipt(dartResultCallback:sdkId:entityIdString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:receiptString:)")));
- (void)listByReferenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId referenceString:(NSString *)referenceString __attribute__((swift_name("listByReference(dartResultCallback:sdkId:referenceString:)")));
- (void)logReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userString:(NSString *)userString docIdString:(NSString *)docIdString refsString:(NSString *)refsString blobTypeString:(NSString *)blobTypeString blobString:(NSString *)blobString __attribute__((swift_name("logReceipt(dartResultCallback:sdkId:userString:docIdString:refsString:blobTypeString:blobString:)")));
- (void)modifyReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyReceipt(dartResultCallback:sdkId:entityString:)")));
- (void)setRawReceiptAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptIdString:(NSString *)receiptIdString revString:(NSString *)revString blobTypeString:(NSString *)blobTypeString attachmentString:(NSString *)attachmentString __attribute__((swift_name("setRawReceiptAttachment(dartResultCallback:sdkId:receiptIdString:revString:blobTypeString:attachmentString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString receiptString:(NSString *)receiptString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:receiptString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:receiptString:delegatesString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:receiptString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReceiptApi.encrypted")))
@interface CDSSLReceiptApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLReceiptApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)getReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getReceipt(dartResultCallback:sdkId:entityIdString:)")));
- (void)listByReferenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId referenceString:(NSString *)referenceString __attribute__((swift_name("listByReference(dartResultCallback:sdkId:referenceString:)")));
- (void)modifyReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyReceipt(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString receiptString:(NSString *)receiptString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:receiptString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:receiptString:delegatesString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReceiptApi.tryAndRecover")))
@interface CDSSLReceiptApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLReceiptApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)getReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getReceipt(dartResultCallback:sdkId:entityIdString:)")));
- (void)listByReferenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId referenceString:(NSString *)referenceString __attribute__((swift_name("listByReference(dartResultCallback:sdkId:referenceString:)")));
- (void)modifyReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyReceipt(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString receiptString:(NSString *)receiptString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:receiptString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptString:(NSString *)receiptString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:receiptString:delegatesString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ReceiptBasicApi")))
@interface CDSSLReceiptBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)receiptBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLReceiptBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("deleteReceipt(dartResultCallback:sdkId:entityIdString:)")));
- (void)deleteReceiptsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteReceipts(dartResultCallback:sdkId:entityIdsString:)")));
- (void)getRawReceiptAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptIdString:(NSString *)receiptIdString attachmentIdString:(NSString *)attachmentIdString __attribute__((swift_name("getRawReceiptAttachment(dartResultCallback:sdkId:receiptIdString:attachmentIdString:)")));
- (void)getReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getReceipt(dartResultCallback:sdkId:entityIdString:)")));
- (void)listByReferenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId referenceString:(NSString *)referenceString __attribute__((swift_name("listByReference(dartResultCallback:sdkId:referenceString:)")));
- (void)modifyReceiptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyReceipt(dartResultCallback:sdkId:entityString:)")));
- (void)setRawReceiptAttachmentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId receiptIdString:(NSString *)receiptIdString revString:(NSString *)revString blobTypeString:(NSString *)blobTypeString attachmentString:(NSString *)attachmentString __attribute__((swift_name("setRawReceiptAttachment(dartResultCallback:sdkId:receiptIdString:revString:blobTypeString:attachmentString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("RoleApi")))
@interface CDSSLRoleApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)roleApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLRoleApi *shared __attribute__((swift_name("shared")));
- (void)getAllRolesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getAllRoles(dartResultCallback:sdkId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ShamirKeysManagerApi")))
@interface CDSSLShamirKeysManagerApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)shamirKeysManagerApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLShamirKeysManagerApi *shared __attribute__((swift_name("shared")));
- (void)getExistingSplitsInfoDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId dataOwnerString:(NSString *)dataOwnerString __attribute__((swift_name("getExistingSplitsInfo(dartResultCallback:sdkId:dataOwnerString:)")));
- (void)updateSelfSplitsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId keySplitsToUpdateString:(NSString *)keySplitsToUpdateString keySplitsToDeleteString:(NSString *)keySplitsToDeleteString __attribute__((swift_name("updateSelfSplits(dartResultCallback:sdkId:keySplitsToUpdateString:keySplitsToDeleteString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("SystemApi")))
@interface CDSSLSystemApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)systemApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLSystemApi *shared __attribute__((swift_name("shared")));
- (void)evictAllFromMapDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId mapNameString:(NSString *)mapNameString __attribute__((swift_name("evictAllFromMap(dartResultCallback:sdkId:mapNameString:)")));
- (void)getIndexingInfoDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getIndexingInfo(dartResultCallback:sdkId:)")));
- (void)getIndexingInfoByGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString __attribute__((swift_name("getIndexingInfoByGroup(dartResultCallback:sdkId:groupIdString:)")));
- (void)getProcessInfoDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getProcessInfo(dartResultCallback:sdkId:)")));
- (void)getReplicationInfoDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getReplicationInfo(dartResultCallback:sdkId:)")));
- (void)getReplicatorInfoDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("getReplicatorInfo(dartResultCallback:sdkId:idString:)")));
- (void)getVersionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getVersion(dartResultCallback:sdkId:)")));
- (void)isReadyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("isReady(dartResultCallback:sdkId:)")));
- (void)resolveContactsConflictsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId limitString:(NSString *)limitString __attribute__((swift_name("resolveContactsConflicts(dartResultCallback:sdkId:limitString:)")));
- (void)resolveDocumentsConflictsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idsString:(NSString *)idsString limitString:(NSString *)limitString __attribute__((swift_name("resolveDocumentsConflicts(dartResultCallback:sdkId:idsString:limitString:)")));
- (void)resolveFormsConflictsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId limitString:(NSString *)limitString __attribute__((swift_name("resolveFormsConflicts(dartResultCallback:sdkId:limitString:)")));
- (void)resolveHealthElementsConflictsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId limitString:(NSString *)limitString __attribute__((swift_name("resolveHealthElementsConflicts(dartResultCallback:sdkId:limitString:)")));
- (void)resolveInvoicesConflictsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId limitString:(NSString *)limitString __attribute__((swift_name("resolveInvoicesConflicts(dartResultCallback:sdkId:limitString:)")));
- (void)resolveMessagesConflictsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId limitString:(NSString *)limitString __attribute__((swift_name("resolveMessagesConflicts(dartResultCallback:sdkId:limitString:)")));
- (void)resolvePatientsConflictsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId limitString:(NSString *)limitString __attribute__((swift_name("resolvePatientsConflicts(dartResultCallback:sdkId:limitString:)")));
- (void)updateDesignDocDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityNameString:(NSString *)entityNameString warmupString:(NSString *)warmupString __attribute__((swift_name("updateDesignDoc(dartResultCallback:sdkId:entityNameString:warmupString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TarificationApi")))
@interface CDSSLTarificationApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tarificationApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTarificationApi *shared __attribute__((swift_name("shared")));
- (void)createTarificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId tarificationString:(NSString *)tarificationString __attribute__((swift_name("createTarification(dartResultCallback:sdkId:tarificationString:)")));
- (void)getTarificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId tarificationIdString:(NSString *)tarificationIdString __attribute__((swift_name("getTarification(dartResultCallback:sdkId:tarificationIdString:)")));
- (void)getTarificationWithPartsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId typeString:(NSString *)typeString tarificationString:(NSString *)tarificationString versionString:(NSString *)versionString __attribute__((swift_name("getTarificationWithParts(dartResultCallback:sdkId:typeString:tarificationString:versionString:)")));
- (void)getTarificationsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId tarificationIdsString:(NSString *)tarificationIdsString __attribute__((swift_name("getTarifications(dartResultCallback:sdkId:tarificationIdsString:)")));
- (void)modifyTarificationDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId tarificationString:(NSString *)tarificationString __attribute__((swift_name("modifyTarification(dartResultCallback:sdkId:tarificationString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeTableApi")))
@interface CDSSLTimeTableApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)timeTableApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTimeTableApi *shared __attribute__((swift_name("shared")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createTimeTable(dartResultCallback:sdkId:entityString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:timeTableString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:timeTableString:)")));
- (void)deleteTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("deleteTimeTable(dartResultCallback:sdkId:timeTableString:)")));
- (void)deleteTimeTableByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteTimeTableById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteTimeTablesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTablesString:(NSString *)timeTablesString __attribute__((swift_name("deleteTimeTables(dartResultCallback:sdkId:timeTablesString:)")));
- (void)deleteTimeTablesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteTimeTablesByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterTimeTablesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTimeTablesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterTimeTablesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTimeTablesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:timeTableString:)")));
- (void)getTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getTimeTable(dartResultCallback:sdkId:entityIdString:)")));
- (void)getTimeTablesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableIdsString:(NSString *)timeTableIdsString __attribute__((swift_name("getTimeTables(dartResultCallback:sdkId:timeTableIdsString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:timeTableString:)")));
- (void)matchTimeTablesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchTimeTablesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchTimeTablesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchTimeTablesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyTimeTable(dartResultCallback:sdkId:entityString:)")));
- (void)purgeTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("purgeTimeTable(dartResultCallback:sdkId:timeTableString:)")));
- (void)purgeTimeTableByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeTimeTableById(dartResultCallback:sdkId:idString:revString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString timeTableString:(NSString *)timeTableString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:timeTableString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:timeTableString:delegatesString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:timeTableString:)")));
- (void)undeleteTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("undeleteTimeTable(dartResultCallback:sdkId:timeTableString:)")));
- (void)undeleteTimeTableByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteTimeTableById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeTableApi.encrypted")))
@interface CDSSLTimeTableApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTimeTableApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)filterTimeTablesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTimeTablesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterTimeTablesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTimeTablesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getTimeTable(dartResultCallback:sdkId:entityIdString:)")));
- (void)getTimeTablesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableIdsString:(NSString *)timeTableIdsString __attribute__((swift_name("getTimeTables(dartResultCallback:sdkId:timeTableIdsString:)")));
- (void)modifyTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyTimeTable(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString timeTableString:(NSString *)timeTableString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:timeTableString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:timeTableString:delegatesString:)")));
- (void)undeleteTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("undeleteTimeTable(dartResultCallback:sdkId:timeTableString:)")));
- (void)undeleteTimeTableByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteTimeTableById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeTableApi.tryAndRecover")))
@interface CDSSLTimeTableApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTimeTableApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)filterTimeTablesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTimeTablesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterTimeTablesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTimeTablesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getTimeTable(dartResultCallback:sdkId:entityIdString:)")));
- (void)getTimeTablesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableIdsString:(NSString *)timeTableIdsString __attribute__((swift_name("getTimeTables(dartResultCallback:sdkId:timeTableIdsString:)")));
- (void)modifyTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyTimeTable(dartResultCallback:sdkId:entityString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString timeTableString:(NSString *)timeTableString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:timeTableString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:timeTableString:delegatesString:)")));
- (void)undeleteTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("undeleteTimeTable(dartResultCallback:sdkId:timeTableString:)")));
- (void)undeleteTimeTableByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteTimeTableById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeTableBasicApi")))
@interface CDSSLTimeTableBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)timeTableBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTimeTableBasicApi *shared __attribute__((swift_name("shared")));
- (void)deleteTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("deleteTimeTable(dartResultCallback:sdkId:timeTableString:)")));
- (void)deleteTimeTableByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteTimeTableById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteTimeTablesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTablesString:(NSString *)timeTablesString __attribute__((swift_name("deleteTimeTables(dartResultCallback:sdkId:timeTablesString:)")));
- (void)deleteTimeTablesByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteTimeTablesByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterTimeTablesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTimeTablesBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterTimeTablesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTimeTablesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getTimeTable(dartResultCallback:sdkId:entityIdString:)")));
- (void)getTimeTablesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableIdsString:(NSString *)timeTableIdsString __attribute__((swift_name("getTimeTables(dartResultCallback:sdkId:timeTableIdsString:)")));
- (void)matchTimeTablesByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchTimeTablesBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchTimeTablesBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchTimeTablesBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyTimeTable(dartResultCallback:sdkId:entityString:)")));
- (void)purgeTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("purgeTimeTable(dartResultCallback:sdkId:timeTableString:)")));
- (void)purgeTimeTableByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeTimeTableById(dartResultCallback:sdkId:idString:revString:)")));
- (void)undeleteTimeTableDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId timeTableString:(NSString *)timeTableString __attribute__((swift_name("undeleteTimeTable(dartResultCallback:sdkId:timeTableString:)")));
- (void)undeleteTimeTableByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteTimeTableById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TopicApi")))
@interface CDSSLTopicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)topicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTopicApi *shared __attribute__((swift_name("shared")));
- (void)addParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString dataOwnerIdString:(NSString *)dataOwnerIdString topicRoleString:(NSString *)topicRoleString __attribute__((swift_name("addParticipant(dartResultCallback:sdkId:entityIdString:dataOwnerIdString:topicRoleString:)")));
- (void)createDelegationDeAnonymizationMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString delegatesString:(NSString *)delegatesString __attribute__((swift_name("createDelegationDeAnonymizationMetadata(dartResultCallback:sdkId:entityString:delegatesString:)")));
- (void)createTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("createTopic(dartResultCallback:sdkId:entityString:)")));
- (void)decryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("decrypt(dartResultCallback:sdkId:topicString:)")));
- (void)decryptPatientIdOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("decryptPatientIdOf(dartResultCallback:sdkId:topicString:)")));
- (void)deleteTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("deleteTopic(dartResultCallback:sdkId:topicString:)")));
- (void)deleteTopicByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteTopicById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteTopicsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicsString:(NSString *)topicsString __attribute__((swift_name("deleteTopics(dartResultCallback:sdkId:topicsString:)")));
- (void)deleteTopicsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteTopicsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterTopicsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTopicsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterTopicsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTopicsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getEncryptionKeysOfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("getEncryptionKeysOf(dartResultCallback:sdkId:topicString:)")));
- (void)getTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getTopic(dartResultCallback:sdkId:entityIdString:)")));
- (void)getTopicsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getTopics(dartResultCallback:sdkId:entityIdsString:)")));
- (void)hasWriteAccessDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("hasWriteAccess(dartResultCallback:sdkId:topicString:)")));
- (void)matchTopicsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchTopicsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchTopicsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchTopicsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyTopic(dartResultCallback:sdkId:entityString:)")));
- (void)purgeTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("purgeTopic(dartResultCallback:sdkId:topicString:)")));
- (void)purgeTopicByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeTopicById(dartResultCallback:sdkId:idString:revString:)")));
- (void)removeParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("removeParticipant(dartResultCallback:sdkId:entityIdString:dataOwnerIdString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString topicString:(NSString *)topicString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:topicString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:topicString:delegatesString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)tryDecryptDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("tryDecrypt(dartResultCallback:sdkId:topicString:)")));
- (void)undeleteTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("undeleteTopic(dartResultCallback:sdkId:topicString:)")));
- (void)undeleteTopicByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteTopicById(dartResultCallback:sdkId:idString:revString:)")));
- (void)withEncryptionMetadataDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId baseString:(NSString *)baseString patientString:(NSString *)patientString userString:(NSString *)userString delegatesString:(NSString *)delegatesString secretIdString:(NSString *)secretIdString __attribute__((swift_name("withEncryptionMetadata(dartResultCallback:sdkId:baseString:patientString:userString:delegatesString:secretIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TopicApi.encrypted")))
@interface CDSSLTopicApiEncrypted : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)encrypted __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTopicApiEncrypted *shared __attribute__((swift_name("shared")));
- (void)addParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString dataOwnerIdString:(NSString *)dataOwnerIdString topicRoleString:(NSString *)topicRoleString __attribute__((swift_name("addParticipant(dartResultCallback:sdkId:entityIdString:dataOwnerIdString:topicRoleString:)")));
- (void)filterTopicsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTopicsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterTopicsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTopicsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getTopic(dartResultCallback:sdkId:entityIdString:)")));
- (void)getTopicsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getTopics(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyTopic(dartResultCallback:sdkId:entityString:)")));
- (void)removeParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("removeParticipant(dartResultCallback:sdkId:entityIdString:dataOwnerIdString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString topicString:(NSString *)topicString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:topicString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:topicString:delegatesString:)")));
- (void)undeleteTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("undeleteTopic(dartResultCallback:sdkId:topicString:)")));
- (void)undeleteTopicByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteTopicById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TopicApi.tryAndRecover")))
@interface CDSSLTopicApiTryAndRecover : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)tryAndRecover __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTopicApiTryAndRecover *shared __attribute__((swift_name("shared")));
- (void)addParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString dataOwnerIdString:(NSString *)dataOwnerIdString topicRoleString:(NSString *)topicRoleString __attribute__((swift_name("addParticipant(dartResultCallback:sdkId:entityIdString:dataOwnerIdString:topicRoleString:)")));
- (void)filterTopicsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTopicsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterTopicsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTopicsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getTopic(dartResultCallback:sdkId:entityIdString:)")));
- (void)getTopicsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getTopics(dartResultCallback:sdkId:entityIdsString:)")));
- (void)modifyTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyTopic(dartResultCallback:sdkId:entityString:)")));
- (void)removeParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("removeParticipant(dartResultCallback:sdkId:entityIdString:dataOwnerIdString:)")));
- (void)shareWithDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId delegateIdString:(NSString *)delegateIdString topicString:(NSString *)topicString optionsString:(NSString *)optionsString __attribute__((swift_name("shareWith(dartResultCallback:sdkId:delegateIdString:topicString:optionsString:)")));
- (void)shareWithManyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString delegatesString:(NSString *)delegatesString __attribute__((swift_name("shareWithMany(dartResultCallback:sdkId:topicString:delegatesString:)")));
- (void)undeleteTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("undeleteTopic(dartResultCallback:sdkId:topicString:)")));
- (void)undeleteTopicByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteTopicById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TopicBasicApi")))
@interface CDSSLTopicBasicApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)topicBasicApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTopicBasicApi *shared __attribute__((swift_name("shared")));
- (void)addParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString dataOwnerIdString:(NSString *)dataOwnerIdString topicRoleString:(NSString *)topicRoleString __attribute__((swift_name("addParticipant(dartResultCallback:sdkId:entityIdString:dataOwnerIdString:topicRoleString:)")));
- (void)deleteTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("deleteTopic(dartResultCallback:sdkId:topicString:)")));
- (void)deleteTopicByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteTopicById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteTopicsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicsString:(NSString *)topicsString __attribute__((swift_name("deleteTopics(dartResultCallback:sdkId:topicsString:)")));
- (void)deleteTopicsByIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("deleteTopicsByIds(dartResultCallback:sdkId:entityIdsString:)")));
- (void)filterTopicsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTopicsBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterTopicsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterTopicsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)getTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString __attribute__((swift_name("getTopic(dartResultCallback:sdkId:entityIdString:)")));
- (void)getTopicsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdsString:(NSString *)entityIdsString __attribute__((swift_name("getTopics(dartResultCallback:sdkId:entityIdsString:)")));
- (void)matchTopicsByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchTopicsBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchTopicsBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchTopicsBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)modifyTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityString:(NSString *)entityString __attribute__((swift_name("modifyTopic(dartResultCallback:sdkId:entityString:)")));
- (void)purgeTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("purgeTopic(dartResultCallback:sdkId:topicString:)")));
- (void)purgeTopicByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeTopicById(dartResultCallback:sdkId:idString:revString:)")));
- (void)removeParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("removeParticipant(dartResultCallback:sdkId:entityIdString:dataOwnerIdString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeleteTopicDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId topicString:(NSString *)topicString __attribute__((swift_name("undeleteTopic(dartResultCallback:sdkId:topicString:)")));
- (void)undeleteTopicByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteTopicById(dartResultCallback:sdkId:idString:revString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserApi")))
@interface CDSSLUserApi : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)userApi __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLUserApi *shared __attribute__((swift_name("shared")));
- (void)assignHealthcarePartyDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId healthcarePartyIdString:(NSString *)healthcarePartyIdString __attribute__((swift_name("assignHealthcareParty(dartResultCallback:sdkId:healthcarePartyIdString:)")));
- (void)createAdminUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userString:(NSString *)userString __attribute__((swift_name("createAdminUser(dartResultCallback:sdkId:userString:)")));
- (void)createAdminUserInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString userString:(NSString *)userString __attribute__((swift_name("createAdminUserInGroup(dartResultCallback:sdkId:groupIdString:userString:)")));
- (void)createUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userString:(NSString *)userString __attribute__((swift_name("createUser(dartResultCallback:sdkId:userString:)")));
- (void)createUserInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString userString:(NSString *)userString __attribute__((swift_name("createUserInGroup(dartResultCallback:sdkId:groupIdString:userString:)")));
- (void)deleteUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userString:(NSString *)userString __attribute__((swift_name("deleteUser(dartResultCallback:sdkId:userString:)")));
- (void)deleteUserByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteUserById(dartResultCallback:sdkId:entityIdString:revString:)")));
- (void)deleteUserInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString userString:(NSString *)userString __attribute__((swift_name("deleteUserInGroup(dartResultCallback:sdkId:groupIdString:userString:)")));
- (void)deleteUserInGroupByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString entityIdString:(NSString *)entityIdString revString:(NSString *)revString __attribute__((swift_name("deleteUserInGroupById(dartResultCallback:sdkId:groupIdString:entityIdString:revString:)")));
- (void)disable2faForUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString __attribute__((swift_name("disable2faForUser(dartResultCallback:sdkId:userIdString:)")));
- (void)disable2faForUserWithGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString groupIdString:(NSString *)groupIdString __attribute__((swift_name("disable2faForUserWithGroup(dartResultCallback:sdkId:userIdString:groupIdString:)")));
- (void)enable2faForUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString requestString:(NSString *)requestString __attribute__((swift_name("enable2faForUser(dartResultCallback:sdkId:userIdString:requestString:)")));
- (void)enable2faForUserWithGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString groupIdString:(NSString *)groupIdString requestString:(NSString *)requestString __attribute__((swift_name("enable2faForUserWithGroup(dartResultCallback:sdkId:userIdString:groupIdString:requestString:)")));
- (void)filterUsersByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterUsersBy(dartResultCallback:sdkId:filterString:)")));
- (void)filterUsersBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("filterUsersBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)filterUsersInGroupByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString filterString:(NSString *)filterString __attribute__((swift_name("filterUsersInGroupBy(dartResultCallback:sdkId:groupIdString:filterString:)")));
- (void)filterUsersInGroupBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString filterString:(NSString *)filterString __attribute__((swift_name("filterUsersInGroupBySorted(dartResultCallback:sdkId:groupIdString:filterString:)")));
- (void)findByHcpartyIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("findByHcpartyId(dartResultCallback:sdkId:idString:)")));
- (void)findByPatientIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString __attribute__((swift_name("findByPatientId(dartResultCallback:sdkId:idString:)")));
- (void)getCurrentUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getCurrentUser(dartResultCallback:sdkId:)")));
- (void)getMatchingUsersDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId __attribute__((swift_name("getMatchingUsers(dartResultCallback:sdkId:)")));
- (void)getTokenDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString keyString:(NSString *)keyString tokenValidityString:(NSString *)tokenValidityString tokenString:(NSString *)tokenString __attribute__((swift_name("getToken(dartResultCallback:sdkId:userIdString:keyString:tokenValidityString:tokenString:)")));
- (void)getTokenInAllGroupsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdentifierString:(NSString *)userIdentifierString keyString:(NSString *)keyString tokenString:(NSString *)tokenString tokenValidityString:(NSString *)tokenValidityString __attribute__((swift_name("getTokenInAllGroups(dartResultCallback:sdkId:userIdentifierString:keyString:tokenString:tokenValidityString:)")));
- (void)getTokenInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString userIdString:(NSString *)userIdString keyString:(NSString *)keyString tokenString:(NSString *)tokenString tokenValidityString:(NSString *)tokenValidityString __attribute__((swift_name("getTokenInGroup(dartResultCallback:sdkId:groupIdString:userIdString:keyString:tokenString:tokenValidityString:)")));
- (void)getUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString __attribute__((swift_name("getUser(dartResultCallback:sdkId:userIdString:)")));
- (void)getUserByEmailDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId emailString:(NSString *)emailString __attribute__((swift_name("getUserByEmail(dartResultCallback:sdkId:emailString:)")));
- (void)getUserByPhoneNumberDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId phoneNumberString:(NSString *)phoneNumberString __attribute__((swift_name("getUserByPhoneNumber(dartResultCallback:sdkId:phoneNumberString:)")));
- (void)getUsersDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdsString:(NSString *)userIdsString __attribute__((swift_name("getUsers(dartResultCallback:sdkId:userIdsString:)")));
- (void)getUsersInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString userIdsString:(NSString *)userIdsString __attribute__((swift_name("getUsersInGroup(dartResultCallback:sdkId:groupIdString:userIdsString:)")));
- (void)matchUsersByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchUsersBy(dartResultCallback:sdkId:filterString:)")));
- (void)matchUsersBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId filterString:(NSString *)filterString __attribute__((swift_name("matchUsersBySorted(dartResultCallback:sdkId:filterString:)")));
- (void)matchUsersInGroupByDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString filterString:(NSString *)filterString __attribute__((swift_name("matchUsersInGroupBy(dartResultCallback:sdkId:groupIdString:filterString:)")));
- (void)matchUsersInGroupBySortedDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString filterString:(NSString *)filterString __attribute__((swift_name("matchUsersInGroupBySorted(dartResultCallback:sdkId:groupIdString:filterString:)")));
- (void)modifyPropertiesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString propertiesString:(NSString *)propertiesString __attribute__((swift_name("modifyProperties(dartResultCallback:sdkId:userIdString:propertiesString:)")));
- (void)modifyUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userString:(NSString *)userString __attribute__((swift_name("modifyUser(dartResultCallback:sdkId:userString:)")));
- (void)modifyUserInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId groupIdString:(NSString *)groupIdString userString:(NSString *)userString __attribute__((swift_name("modifyUserInGroup(dartResultCallback:sdkId:groupIdString:userString:)")));
- (void)purgeUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userString:(NSString *)userString __attribute__((swift_name("purgeUser(dartResultCallback:sdkId:userString:)")));
- (void)purgeUserByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("purgeUserById(dartResultCallback:sdkId:idString:revString:)")));
- (void)resetUserRolesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString __attribute__((swift_name("resetUserRoles(dartResultCallback:sdkId:userIdString:)")));
- (void)resetUserRolesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString groupIdString:(NSString *)groupIdString __attribute__((swift_name("resetUserRolesInGroup(dartResultCallback:sdkId:userIdString:groupIdString:)")));
- (void)setUserRolesDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString rolesIdString:(NSString *)rolesIdString __attribute__((swift_name("setUserRoles(dartResultCallback:sdkId:userIdString:rolesIdString:)")));
- (void)setUserRolesInGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userIdString:(NSString *)userIdString groupIdString:(NSString *)groupIdString rolesIdString:(NSString *)rolesIdString __attribute__((swift_name("setUserRolesInGroup(dartResultCallback:sdkId:userIdString:groupIdString:rolesIdString:)")));
- (void)subscribeToEventsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId eventsString:(NSString *)eventsString filterString:(NSString *)filterString subscriptionConfigString:(NSString *)subscriptionConfigString __attribute__((swift_name("subscribeToEvents(dartResultCallback:sdkId:eventsString:filterString:subscriptionConfigString:)")));
- (void)undeleteUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId userString:(NSString *)userString __attribute__((swift_name("undeleteUser(dartResultCallback:sdkId:userString:)")));
- (void)undeleteUserByIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback sdkId:(NSString *)sdkId idString:(NSString *)idString revString:(NSString *)revString __attribute__((swift_name("undeleteUserById(dartResultCallback:sdkId:idString:revString:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("AuthenticationMethod")))
@protocol CDSSLAuthenticationMethod
@required
- (id<CDSSLCardinal_sdkAuthenticationMethod>)toMultiplatform __attribute__((swift_name("toMultiplatform()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthenticationMethodCompanion")))
@interface CDSSLAuthenticationMethodCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAuthenticationMethodCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthenticationMethodUsingCredentials")))
@interface CDSSLAuthenticationMethodUsingCredentials : CDSSLBase <CDSSLAuthenticationMethod>
- (instancetype)initWithCredentials:(id<CDSSLCredentials>)credentials __attribute__((swift_name("init(credentials:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLAuthenticationMethodUsingCredentialsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLAuthenticationMethodUsingCredentials *)doCopyCredentials:(id<CDSSLCredentials>)credentials __attribute__((swift_name("doCopy(credentials:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkAuthenticationMethodUsingCredentials *)toMultiplatform __attribute__((swift_name("toMultiplatform()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLCredentials> credentials __attribute__((swift_name("credentials")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AuthenticationMethodUsingCredentials.Companion")))
@interface CDSSLAuthenticationMethodUsingCredentialsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAuthenticationMethodUsingCredentialsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("CaptchaOptions")))
@protocol CDSSLCaptchaOptions
@required
- (id<CDSSLCardinal_sdkCaptchaOptions>)toMultiplatform __attribute__((swift_name("toMultiplatform()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsCompanion")))
@interface CDSSLCaptchaOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCaptchaOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsFriendlyCaptcha")))
@interface CDSSLCaptchaOptionsFriendlyCaptcha : CDSSLBase <CDSSLCaptchaOptions>
- (instancetype)initWithSolution:(NSString *)solution __attribute__((swift_name("init(solution:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCaptchaOptionsFriendlyCaptchaCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCaptchaOptionsFriendlyCaptcha *)doCopySolution:(NSString *)solution __attribute__((swift_name("doCopy(solution:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkCaptchaOptionsFriendlyCaptcha *)toMultiplatform __attribute__((swift_name("toMultiplatform()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *solution __attribute__((swift_name("solution")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsFriendlyCaptcha.Companion")))
@interface CDSSLCaptchaOptionsFriendlyCaptchaCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCaptchaOptionsFriendlyCaptchaCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("CaptchaOptionsKerberus")))
@protocol CDSSLCaptchaOptionsKerberus <CDSSLCaptchaOptions>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsKerberusCompanion")))
@interface CDSSLCaptchaOptionsKerberusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCaptchaOptionsKerberusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsKerberusComputed")))
@interface CDSSLCaptchaOptionsKerberusComputed : CDSSLBase <CDSSLCaptchaOptionsKerberus>
- (instancetype)initWithSolution:(CDSSLLibrarySolution *)solution __attribute__((swift_name("init(solution:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCaptchaOptionsKerberusComputedCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCaptchaOptionsKerberusComputed *)doCopySolution:(CDSSLLibrarySolution *)solution __attribute__((swift_name("doCopy(solution:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkCaptchaOptionsKerberusComputed *)toMultiplatform __attribute__((swift_name("toMultiplatform()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLibrarySolution *solution __attribute__((swift_name("solution")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsKerberusComputed.Companion")))
@interface CDSSLCaptchaOptionsKerberusComputedCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCaptchaOptionsKerberusComputedCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsKerberusDelegated")))
@interface CDSSLCaptchaOptionsKerberusDelegated : CDSSLBase <CDSSLCaptchaOptionsKerberus>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)delegated __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCaptchaOptionsKerberusDelegated *shared __attribute__((swift_name("shared")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
- (CDSSLCardinal_sdkCaptchaOptionsKerberusDelegated *)toMultiplatform __attribute__((swift_name("toMultiplatform()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsRecaptcha")))
@interface CDSSLCaptchaOptionsRecaptcha : CDSSLBase <CDSSLCaptchaOptions>
- (instancetype)initWithSolution:(NSString *)solution __attribute__((swift_name("init(solution:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCaptchaOptionsRecaptchaCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCaptchaOptionsRecaptcha *)doCopySolution:(NSString *)solution __attribute__((swift_name("doCopy(solution:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkCaptchaOptionsRecaptcha *)toMultiplatform __attribute__((swift_name("toMultiplatform()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *solution __attribute__((swift_name("solution")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CaptchaOptionsRecaptcha.Companion")))
@interface CDSSLCaptchaOptionsRecaptchaCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCaptchaOptionsRecaptchaCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Credentials")))
@protocol CDSSLCredentials
@required
- (id<CDSSLCardinal_sdkCredentials>)toKt __attribute__((swift_name("toKt()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CredentialsCompanion")))
@interface CDSSLCredentialsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCredentialsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CredentialsThirdPartyAuthentication")))
@interface CDSSLCredentialsThirdPartyAuthentication : CDSSLBase <CDSSLCredentials>
- (instancetype)initWithToken:(NSString *)token provider:(CDSSLCardinal_sdkThirdPartyProvider *)provider __attribute__((swift_name("init(token:provider:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCredentialsThirdPartyAuthenticationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCredentialsThirdPartyAuthentication *)doCopyToken:(NSString *)token provider:(CDSSLCardinal_sdkThirdPartyProvider *)provider __attribute__((swift_name("doCopy(token:provider:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkThirdPartyAuthentication *)toKt __attribute__((swift_name("toKt()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkThirdPartyProvider *provider __attribute__((swift_name("provider")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CredentialsThirdPartyAuthentication.Companion")))
@interface CDSSLCredentialsThirdPartyAuthenticationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCredentialsThirdPartyAuthenticationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CredentialsUsernameLongToken")))
@interface CDSSLCredentialsUsernameLongToken : CDSSLBase <CDSSLCredentials>
- (instancetype)initWithUsername:(NSString *)username token:(NSString *)token __attribute__((swift_name("init(username:token:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCredentialsUsernameLongTokenCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCredentialsUsernameLongToken *)doCopyUsername:(NSString *)username token:(NSString *)token __attribute__((swift_name("doCopy(username:token:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkUsernameLongToken *)toKt __attribute__((swift_name("toKt()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@property (readonly) NSString *username __attribute__((swift_name("username")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CredentialsUsernameLongToken.Companion")))
@interface CDSSLCredentialsUsernameLongTokenCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCredentialsUsernameLongTokenCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CredentialsUsernamePassword")))
@interface CDSSLCredentialsUsernamePassword : CDSSLBase <CDSSLCredentials>
- (instancetype)initWithUsername:(NSString *)username password:(NSString *)password __attribute__((swift_name("init(username:password:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCredentialsUsernamePasswordCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCredentialsUsernamePassword *)doCopyUsername:(NSString *)username password:(NSString *)password __attribute__((swift_name("doCopy(username:password:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkUsernamePassword *)toKt __attribute__((swift_name("toKt()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *password __attribute__((swift_name("password")));
@property (readonly) NSString *username __attribute__((swift_name("username")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CredentialsUsernamePassword.Companion")))
@interface CDSSLCredentialsUsernamePasswordCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCredentialsUsernamePasswordCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AccessLogFilters")))
@interface CDSSLAccessLogFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)accessLogFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAccessLogFilters *shared __attribute__((swift_name("shared")));
- (void)byDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byDate(dartResultCallback:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsDateForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsDateForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsDateForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsDateForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
- (void)byUserTypeDateDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback userIdString:(NSString *)userIdString accessTypeString:(NSString *)accessTypeString fromString:(NSString *)fromString descendingString:(NSString *)descendingString __attribute__((swift_name("byUserTypeDate(dartResultCallback:userIdString:accessTypeString:fromString:descendingString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("AgendaFilters")))
@interface CDSSLAgendaFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)agendaFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLAgendaFilters *shared __attribute__((swift_name("shared")));
- (void)allDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("all(dartResultCallback:)")));
- (void)byUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback userIdString:(NSString *)userIdString __attribute__((swift_name("byUser(dartResultCallback:userIdString:)")));
- (void)readableByUserDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback userIdString:(NSString *)userIdString __attribute__((swift_name("readableByUser(dartResultCallback:userIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CalendarItemFilters")))
@interface CDSSLCalendarItemFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)calendarItemFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCalendarItemFilters *shared __attribute__((swift_name("shared")));
- (void)byPatientSecretIdsStartTimeForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsStartTimeForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsStartTimeForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsStartTimeForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsStartTimeForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsStartTimeForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsStartTimeForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsStartTimeForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
- (void)byPeriodAndAgendaDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback agendaIdString:(NSString *)agendaIdString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPeriodAndAgenda(dartResultCallback:agendaIdString:fromString:toString:descendingString:)")));
- (void)byPeriodForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("byPeriodForDataOwner(dartResultCallback:dataOwnerIdString:fromString:toString:)")));
- (void)byPeriodForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback fromString:(NSString *)fromString toString:(NSString *)toString __attribute__((swift_name("byPeriodForSelf(dartResultCallback:fromString:toString:)")));
- (void)byRecurrenceIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback recurrenceIdString:(NSString *)recurrenceIdString __attribute__((swift_name("byRecurrenceId(dartResultCallback:recurrenceIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ClassificationFilters")))
@interface CDSSLClassificationFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)classificationFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLClassificationFilters *shared __attribute__((swift_name("shared")));
- (void)byPatientSecretIdsCreatedForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsCreatedForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsCreatedForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsCreatedForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsCreatedForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsCreatedForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsCreatedForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsCreatedForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("CodeFilters")))
@interface CDSSLCodeFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)codeFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCodeFilters *shared __attribute__((swift_name("shared")));
- (void)allDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("all(dartResultCallback:)")));
- (void)byIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback idsString:(NSString *)idsString __attribute__((swift_name("byIds(dartResultCallback:idsString:)")));
- (void)byLanguageTypeLabelRegionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback languageString:(NSString *)languageString typeString:(NSString *)typeString labelString:(NSString *)labelString regionString:(NSString *)regionString __attribute__((swift_name("byLanguageTypeLabelRegion(dartResultCallback:languageString:typeString:labelString:regionString:)")));
- (void)byLanguageTypesLabelRegionVersionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback languageString:(NSString *)languageString typesString:(NSString *)typesString labelString:(NSString *)labelString regionString:(NSString *)regionString versionString:(NSString *)versionString __attribute__((swift_name("byLanguageTypesLabelRegionVersion(dartResultCallback:languageString:typesString:labelString:regionString:versionString:)")));
- (void)byQualifiedLinkDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback linkTypeString:(NSString *)linkTypeString linkedIdString:(NSString *)linkedIdString __attribute__((swift_name("byQualifiedLink(dartResultCallback:linkTypeString:linkedIdString:)")));
- (void)byRegionTypeCodeVersionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback regionString:(NSString *)regionString typeString:(NSString *)typeString codeString:(NSString *)codeString versionString:(NSString *)versionString __attribute__((swift_name("byRegionTypeCodeVersion(dartResultCallback:regionString:typeString:codeString:versionString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ContactFilters")))
@interface CDSSLContactFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)contactFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLContactFilters *shared __attribute__((swift_name("shared")));
- (void)allContactsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("allContactsForDataOwner(dartResultCallback:dataOwnerIdString:)")));
- (void)allContactsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("allContactsForSelf(dartResultCallback:)")));
- (void)byCodeAndOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString startOfContactOpeningDateString:(NSString *)startOfContactOpeningDateString endOfContactOpeningDateString:(NSString *)endOfContactOpeningDateString __attribute__((swift_name("byCodeAndOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:codeTypeString:codeCodeString:startOfContactOpeningDateString:endOfContactOpeningDateString:)")));
- (void)byCodeAndOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString startOfContactOpeningDateString:(NSString *)startOfContactOpeningDateString endOfContactOpeningDateString:(NSString *)endOfContactOpeningDateString __attribute__((swift_name("byCodeAndOpeningDateForSelf(dartResultCallback:codeTypeString:codeCodeString:startOfContactOpeningDateString:endOfContactOpeningDateString:)")));
- (void)byExternalIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback externalIdString:(NSString *)externalIdString __attribute__((swift_name("byExternalId(dartResultCallback:externalIdString:)")));
- (void)byFormIdsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString formIdsString:(NSString *)formIdsString __attribute__((swift_name("byFormIdsForDataOwner(dartResultCallback:dataOwnerIdString:formIdsString:)")));
- (void)byFormIdsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback formIdsString:(NSString *)formIdsString __attribute__((swift_name("byFormIdsForSelf(dartResultCallback:formIdsString:)")));
- (void)byIdentifiersForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForDataOwner(dartResultCallback:dataOwnerIdString:identifiersString:)")));
- (void)byIdentifiersForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForSelf(dartResultCallback:identifiersString:)")));
- (void)byOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString startDateString:(NSString *)startDateString endDateString:(NSString *)endDateString descendingString:(NSString *)descendingString __attribute__((swift_name("byOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:startDateString:endDateString:descendingString:)")));
- (void)byOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback startDateString:(NSString *)startDateString endDateString:(NSString *)endDateString descendingString:(NSString *)descendingString __attribute__((swift_name("byOpeningDateForSelf(dartResultCallback:startDateString:endDateString:descendingString:)")));
- (void)byPatientSecretIdsOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsOpeningDateForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString __attribute__((swift_name("byPatientsForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:)")));
- (void)byPatientsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString __attribute__((swift_name("byPatientsForSelf(dartResultCallback:patientsString:)")));
- (void)byPatientsOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsOpeningDateForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsSecretIdsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString __attribute__((swift_name("byPatientsSecretIdsForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:)")));
- (void)byPatientsSecretIdsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString __attribute__((swift_name("byPatientsSecretIdsForSelf(dartResultCallback:secretIdsString:)")));
- (void)byServiceCodeForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString __attribute__((swift_name("byServiceCodeForDataOwner(dartResultCallback:dataOwnerIdString:codeTypeString:codeCodeString:)")));
- (void)byServiceCodeForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString __attribute__((swift_name("byServiceCodeForSelf(dartResultCallback:codeTypeString:codeCodeString:)")));
- (void)byServiceIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback serviceIdsString:(NSString *)serviceIdsString __attribute__((swift_name("byServiceIds(dartResultCallback:serviceIdsString:)")));
- (void)byServiceTagForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString __attribute__((swift_name("byServiceTagForDataOwner(dartResultCallback:dataOwnerIdString:tagTypeString:tagCodeString:)")));
- (void)byServiceTagForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString __attribute__((swift_name("byServiceTagForSelf(dartResultCallback:tagTypeString:tagCodeString:)")));
- (void)byTagAndOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString startOfContactOpeningDateString:(NSString *)startOfContactOpeningDateString endOfContactOpeningDateString:(NSString *)endOfContactOpeningDateString __attribute__((swift_name("byTagAndOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:tagTypeString:tagCodeString:startOfContactOpeningDateString:endOfContactOpeningDateString:)")));
- (void)byTagAndOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString startOfContactOpeningDateString:(NSString *)startOfContactOpeningDateString endOfContactOpeningDateString:(NSString *)endOfContactOpeningDateString __attribute__((swift_name("byTagAndOpeningDateForSelf(dartResultCallback:tagTypeString:tagCodeString:startOfContactOpeningDateString:endOfContactOpeningDateString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DeviceFilters")))
@interface CDSSLDeviceFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)deviceFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDeviceFilters *shared __attribute__((swift_name("shared")));
- (void)allDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("all(dartResultCallback:)")));
- (void)byIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback idsString:(NSString *)idsString __attribute__((swift_name("byIds(dartResultCallback:idsString:)")));
- (void)byResponsibleDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback responsibleIdString:(NSString *)responsibleIdString __attribute__((swift_name("byResponsible(dartResultCallback:responsibleIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DocumentFilters")))
@interface CDSSLDocumentFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)documentFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDocumentFilters *shared __attribute__((swift_name("shared")));
- (void)byPatientSecretIdsAndTypeForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString documentTypeString:(NSString *)documentTypeString secretIdsString:(NSString *)secretIdsString __attribute__((swift_name("byPatientSecretIdsAndTypeForDataOwner(dartResultCallback:dataOwnerIdString:documentTypeString:secretIdsString:)")));
- (void)byPatientSecretIdsAndTypeForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback documentTypeString:(NSString *)documentTypeString secretIdsString:(NSString *)secretIdsString __attribute__((swift_name("byPatientSecretIdsAndTypeForSelf(dartResultCallback:documentTypeString:secretIdsString:)")));
- (void)byPatientSecretIdsCreatedForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsCreatedForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsCreatedForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsCreatedForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsAndTypeForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString documentTypeString:(NSString *)documentTypeString patientsString:(NSString *)patientsString __attribute__((swift_name("byPatientsAndTypeForDataOwner(dartResultCallback:dataOwnerIdString:documentTypeString:patientsString:)")));
- (void)byPatientsAndTypeForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback documentTypeString:(NSString *)documentTypeString patientsString:(NSString *)patientsString __attribute__((swift_name("byPatientsAndTypeForSelf(dartResultCallback:documentTypeString:patientsString:)")));
- (void)byPatientsCreatedForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsCreatedForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsCreatedForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsCreatedForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("FormFilters")))
@interface CDSSLFormFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)formFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLFormFilters *shared __attribute__((swift_name("shared")));
- (void)byLogicalUuidDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback logicalUuidString:(NSString *)logicalUuidString descendingString:(NSString *)descendingString __attribute__((swift_name("byLogicalUuid(dartResultCallback:logicalUuidString:descendingString:)")));
- (void)byParentIdForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString parentIdString:(NSString *)parentIdString __attribute__((swift_name("byParentIdForDataOwner(dartResultCallback:dataOwnerIdString:parentIdString:)")));
- (void)byParentIdForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback parentIdString:(NSString *)parentIdString __attribute__((swift_name("byParentIdForSelf(dartResultCallback:parentIdString:)")));
- (void)byPatientSecretIdsOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsOpeningDateForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsOpeningDateForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
- (void)byUniqueIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback uniqueIdString:(NSString *)uniqueIdString descendingString:(NSString *)descendingString __attribute__((swift_name("byUniqueId(dartResultCallback:uniqueIdString:descendingString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("GroupFilters")))
@interface CDSSLGroupFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)groupFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLGroupFilters *shared __attribute__((swift_name("shared")));
- (void)allDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("all(dartResultCallback:)")));
- (void)bySuperGroupDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback superGroupIdString:(NSString *)superGroupIdString __attribute__((swift_name("bySuperGroup(dartResultCallback:superGroupIdString:)")));
- (void)withContentDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback superGroupIdString:(NSString *)superGroupIdString searchStringString:(NSString *)searchStringString __attribute__((swift_name("withContent(dartResultCallback:superGroupIdString:searchStringString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HealthElementFilters")))
@interface CDSSLHealthElementFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)healthElementFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLHealthElementFilters *shared __attribute__((swift_name("shared")));
- (void)allHealthElementsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("allHealthElementsForDataOwner(dartResultCallback:dataOwnerIdString:)")));
- (void)allHealthElementsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("allHealthElementsForSelf(dartResultCallback:)")));
- (void)byCodeForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString __attribute__((swift_name("byCodeForDataOwner(dartResultCallback:dataOwnerIdString:codeTypeString:codeCodeString:)")));
- (void)byCodeForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString __attribute__((swift_name("byCodeForSelf(dartResultCallback:codeTypeString:codeCodeString:)")));
- (void)byIdentifiersForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForDataOwner(dartResultCallback:dataOwnerIdString:identifiersString:)")));
- (void)byIdentifiersForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForSelf(dartResultCallback:identifiersString:)")));
- (void)byIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback idsString:(NSString *)idsString __attribute__((swift_name("byIds(dartResultCallback:idsString:)")));
- (void)byPatientSecretIdsOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsOpeningDateForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString __attribute__((swift_name("byPatientsForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:)")));
- (void)byPatientsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString __attribute__((swift_name("byPatientsForSelf(dartResultCallback:patientsString:)")));
- (void)byPatientsOpeningDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsOpeningDateForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsOpeningDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsOpeningDateForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsSecretIdsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString __attribute__((swift_name("byPatientsSecretIdsForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:)")));
- (void)byPatientsSecretIdsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString __attribute__((swift_name("byPatientsSecretIdsForSelf(dartResultCallback:secretIdsString:)")));
- (void)byStatusForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString statusString:(NSString *)statusString __attribute__((swift_name("byStatusForDataOwner(dartResultCallback:dataOwnerIdString:statusString:)")));
- (void)byStatusForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback statusString:(NSString *)statusString __attribute__((swift_name("byStatusForSelf(dartResultCallback:statusString:)")));
- (void)byTagForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString __attribute__((swift_name("byTagForDataOwner(dartResultCallback:dataOwnerIdString:tagTypeString:tagCodeString:)")));
- (void)byTagForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString __attribute__((swift_name("byTagForSelf(dartResultCallback:tagTypeString:tagCodeString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("HealthcarePartyFilters")))
@interface CDSSLHealthcarePartyFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)healthcarePartyFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLHealthcarePartyFilters *shared __attribute__((swift_name("shared")));
- (void)allDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("all(dartResultCallback:)")));
- (void)byCodeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString __attribute__((swift_name("byCode(dartResultCallback:codeTypeString:codeCodeString:)")));
- (void)byIdentifiersDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiers(dartResultCallback:identifiersString:)")));
- (void)byIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback idsString:(NSString *)idsString __attribute__((swift_name("byIds(dartResultCallback:idsString:)")));
- (void)byNameDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback searchStringString:(NSString *)searchStringString descendingString:(NSString *)descendingString __attribute__((swift_name("byName(dartResultCallback:searchStringString:descendingString:)")));
- (void)byNationalIdentifierDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback searchStringString:(NSString *)searchStringString descendingString:(NSString *)descendingString __attribute__((swift_name("byNationalIdentifier(dartResultCallback:searchStringString:descendingString:)")));
- (void)byParentIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback parentIdString:(NSString *)parentIdString __attribute__((swift_name("byParentId(dartResultCallback:parentIdString:)")));
- (void)byTagDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString __attribute__((swift_name("byTag(dartResultCallback:tagTypeString:tagCodeString:)")));
- (void)byTypeSpecialtyPostCodeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback specialtyString:(NSString *)specialtyString specCodeString:(NSString *)specCodeString startPostCodeString:(NSString *)startPostCodeString endPostCodeString:(NSString *)endPostCodeString __attribute__((swift_name("byTypeSpecialtyPostCode(dartResultCallback:specialtyString:specCodeString:startPostCodeString:endPostCodeString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MaintenanceTaskFilters")))
@interface CDSSLMaintenanceTaskFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)maintenanceTaskFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMaintenanceTaskFilters *shared __attribute__((swift_name("shared")));
- (void)afterDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString dateString:(NSString *)dateString __attribute__((swift_name("afterDateForDataOwner(dartResultCallback:dataOwnerIdString:dateString:)")));
- (void)afterDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dateString:(NSString *)dateString __attribute__((swift_name("afterDateForSelf(dartResultCallback:dateString:)")));
- (void)byIdentifiersForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForDataOwner(dartResultCallback:dataOwnerIdString:identifiersString:)")));
- (void)byIdentifiersForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForSelf(dartResultCallback:identifiersString:)")));
- (void)byIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback idsString:(NSString *)idsString __attribute__((swift_name("byIds(dartResultCallback:idsString:)")));
- (void)byTypeForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString typeString:(NSString *)typeString __attribute__((swift_name("byTypeForDataOwner(dartResultCallback:dataOwnerIdString:typeString:)")));
- (void)byTypeForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback typeString:(NSString *)typeString __attribute__((swift_name("byTypeForSelf(dartResultCallback:typeString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MedicalLocationFilters")))
@interface CDSSLMedicalLocationFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)medicalLocationFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMedicalLocationFilters *shared __attribute__((swift_name("shared")));
- (void)allDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("all(dartResultCallback:)")));
- (void)byPostCodeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback postCodeString:(NSString *)postCodeString __attribute__((swift_name("byPostCode(dartResultCallback:postCodeString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MessageFilters")))
@interface CDSSLMessageFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)messageFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMessageFilters *shared __attribute__((swift_name("shared")));
- (void)allMessagesForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("allMessagesForDataOwner(dartResultCallback:dataOwnerIdString:)")));
- (void)allMessagesForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("allMessagesForSelf(dartResultCallback:)")));
- (void)byInvoiceIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback invoiceIdsString:(NSString *)invoiceIdsString __attribute__((swift_name("byInvoiceIds(dartResultCallback:invoiceIdsString:)")));
- (void)byParentIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback parentIdsString:(NSString *)parentIdsString __attribute__((swift_name("byParentIds(dartResultCallback:parentIdsString:)")));
- (void)byPatientSecretIdsSentDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsSentDateForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsSentDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsSentDateForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsSentDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsSentDateForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsSentDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsSentDateForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
- (void)byTransportGuidForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString transportGuidString:(NSString *)transportGuidString __attribute__((swift_name("byTransportGuidForDataOwner(dartResultCallback:dataOwnerIdString:transportGuidString:)")));
- (void)byTransportGuidForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback transportGuidString:(NSString *)transportGuidString __attribute__((swift_name("byTransportGuidForSelf(dartResultCallback:transportGuidString:)")));
- (void)byTransportGuidSentDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString transportGuidString:(NSString *)transportGuidString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byTransportGuidSentDateForDataOwner(dartResultCallback:dataOwnerIdString:transportGuidString:fromString:toString:descendingString:)")));
- (void)byTransportGuidSentDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback transportGuidString:(NSString *)transportGuidString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byTransportGuidSentDateForSelf(dartResultCallback:transportGuidString:fromString:toString:descendingString:)")));
- (void)fromAddressForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString addressString:(NSString *)addressString __attribute__((swift_name("fromAddressForDataOwner(dartResultCallback:dataOwnerIdString:addressString:)")));
- (void)fromAddressForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback addressString:(NSString *)addressString __attribute__((swift_name("fromAddressForSelf(dartResultCallback:addressString:)")));
- (void)latestByTransportGuidForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString transportGuidString:(NSString *)transportGuidString __attribute__((swift_name("latestByTransportGuidForDataOwner(dartResultCallback:dataOwnerIdString:transportGuidString:)")));
- (void)latestByTransportGuidForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback transportGuidString:(NSString *)transportGuidString __attribute__((swift_name("latestByTransportGuidForSelf(dartResultCallback:transportGuidString:)")));
- (void)toAddressForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString addressString:(NSString *)addressString __attribute__((swift_name("toAddressForDataOwner(dartResultCallback:dataOwnerIdString:addressString:)")));
- (void)toAddressForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback addressString:(NSString *)addressString __attribute__((swift_name("toAddressForSelf(dartResultCallback:addressString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("MetaFilters")))
@interface CDSSLMetaFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)metaFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLMetaFilters *shared __attribute__((swift_name("shared")));
- (void)baseDifferenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("baseDifference(dartResultCallback:leftString:rightString:)")));
- (void)baseIntersectionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("baseIntersection(dartResultCallback:leftString:rightString:)")));
- (void)baseSortableDifferenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("baseSortableDifference(dartResultCallback:leftString:rightString:)")));
- (void)baseSortableIntersectionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("baseSortableIntersection(dartResultCallback:leftString:rightString:)")));
- (void)baseUnionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("baseUnion(dartResultCallback:leftString:rightString:)")));
- (void)differenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("difference(dartResultCallback:leftString:rightString:)")));
- (void)intersectionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("intersection(dartResultCallback:leftString:rightString:)")));
- (void)sortableDifferenceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("sortableDifference(dartResultCallback:leftString:rightString:)")));
- (void)sortableIntersectionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("sortableIntersection(dartResultCallback:leftString:rightString:)")));
- (void)unionDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback leftString:(NSString *)leftString rightString:(NSString *)rightString __attribute__((swift_name("union(dartResultCallback:leftString:rightString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PatientFilters")))
@interface CDSSLPatientFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)patientFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLPatientFilters *shared __attribute__((swift_name("shared")));
- (void)allPatientsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("allPatientsForDataOwner(dartResultCallback:dataOwnerIdString:)")));
- (void)allPatientsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("allPatientsForSelf(dartResultCallback:)")));
- (void)byActiveForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString activeString:(NSString *)activeString __attribute__((swift_name("byActiveForDataOwner(dartResultCallback:dataOwnerIdString:activeString:)")));
- (void)byActiveForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback activeString:(NSString *)activeString __attribute__((swift_name("byActiveForSelf(dartResultCallback:activeString:)")));
- (void)byAddressForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString searchStringString:(NSString *)searchStringString __attribute__((swift_name("byAddressForDataOwner(dartResultCallback:dataOwnerIdString:searchStringString:)")));
- (void)byAddressForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback searchStringString:(NSString *)searchStringString __attribute__((swift_name("byAddressForSelf(dartResultCallback:searchStringString:)")));
- (void)byAddressPostalCodeHouseNumberForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString searchStringString:(NSString *)searchStringString postalCodeString:(NSString *)postalCodeString houseNumberString:(NSString *)houseNumberString __attribute__((swift_name("byAddressPostalCodeHouseNumberForDataOwner(dartResultCallback:dataOwnerIdString:searchStringString:postalCodeString:houseNumberString:)")));
- (void)byAddressPostalCodeHouseNumberForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback searchStringString:(NSString *)searchStringString postalCodeString:(NSString *)postalCodeString houseNumberString:(NSString *)houseNumberString __attribute__((swift_name("byAddressPostalCodeHouseNumberForSelf(dartResultCallback:searchStringString:postalCodeString:houseNumberString:)")));
- (void)byDateOfBirthBetweenForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString fromDateString:(NSString *)fromDateString toDateString:(NSString *)toDateString __attribute__((swift_name("byDateOfBirthBetweenForDataOwner(dartResultCallback:dataOwnerIdString:fromDateString:toDateString:)")));
- (void)byDateOfBirthBetweenForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback fromDateString:(NSString *)fromDateString toDateString:(NSString *)toDateString __attribute__((swift_name("byDateOfBirthBetweenForSelf(dartResultCallback:fromDateString:toDateString:)")));
- (void)byExternalIdForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString externalIdPrefixString:(NSString *)externalIdPrefixString __attribute__((swift_name("byExternalIdForDataOwner(dartResultCallback:dataOwnerIdString:externalIdPrefixString:)")));
- (void)byExternalIdForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback externalIdPrefixString:(NSString *)externalIdPrefixString __attribute__((swift_name("byExternalIdForSelf(dartResultCallback:externalIdPrefixString:)")));
- (void)byFuzzyNameForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString searchStringString:(NSString *)searchStringString __attribute__((swift_name("byFuzzyNameForDataOwner(dartResultCallback:dataOwnerIdString:searchStringString:)")));
- (void)byGenderEducationProfessionForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString genderString:(NSString *)genderString educationString:(NSString *)educationString professionString:(NSString *)professionString __attribute__((swift_name("byGenderEducationProfessionForDataOwner(dartResultCallback:dataOwnerIdString:genderString:educationString:professionString:)")));
- (void)byGenderEducationProfessionForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback genderString:(NSString *)genderString educationString:(NSString *)educationString professionString:(NSString *)professionString __attribute__((swift_name("byGenderEducationProfessionForSelf(dartResultCallback:genderString:educationString:professionString:)")));
- (void)byIdentifiersForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForDataOwner(dartResultCallback:dataOwnerIdString:identifiersString:)")));
- (void)byIdentifiersForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForSelf(dartResultCallback:identifiersString:)")));
- (void)byIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback idsString:(NSString *)idsString __attribute__((swift_name("byIds(dartResultCallback:idsString:)")));
- (void)byModificationDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byModificationDateForDataOwner(dartResultCallback:dataOwnerIdString:fromString:toString:descendingString:)")));
- (void)byModificationDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byModificationDateForSelf(dartResultCallback:fromString:toString:descendingString:)")));
- (void)byNameForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback searchStringString:(NSString *)searchStringString __attribute__((swift_name("byNameForSelf(dartResultCallback:searchStringString:)")));
- (void)bySsinsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString ssinsString:(NSString *)ssinsString __attribute__((swift_name("bySsinsForDataOwner(dartResultCallback:dataOwnerIdString:ssinsString:)")));
- (void)bySsinsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback ssinsString:(NSString *)ssinsString __attribute__((swift_name("bySsinsForSelf(dartResultCallback:ssinsString:)")));
- (void)byTelecomForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString searchStringString:(NSString *)searchStringString __attribute__((swift_name("byTelecomForDataOwner(dartResultCallback:dataOwnerIdString:searchStringString:)")));
- (void)byTelecomForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback searchStringString:(NSString *)searchStringString __attribute__((swift_name("byTelecomForSelf(dartResultCallback:searchStringString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ServiceFilters")))
@interface CDSSLServiceFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)serviceFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLServiceFilters *shared __attribute__((swift_name("shared")));
- (void)allServicesForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("allServicesForDataOwner(dartResultCallback:dataOwnerIdString:)")));
- (void)allServicesForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("allServicesForSelf(dartResultCallback:)")));
- (void)byAssociationIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback associationIdString:(NSString *)associationIdString __attribute__((swift_name("byAssociationId(dartResultCallback:associationIdString:)")));
- (void)byCodeAndValueDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString startOfServiceValueDateString:(NSString *)startOfServiceValueDateString endOfServiceValueDateString:(NSString *)endOfServiceValueDateString __attribute__((swift_name("byCodeAndValueDateForDataOwner(dartResultCallback:dataOwnerIdString:codeTypeString:codeCodeString:startOfServiceValueDateString:endOfServiceValueDateString:)")));
- (void)byCodeAndValueDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback codeTypeString:(NSString *)codeTypeString codeCodeString:(NSString *)codeCodeString startOfServiceValueDateString:(NSString *)startOfServiceValueDateString endOfServiceValueDateString:(NSString *)endOfServiceValueDateString __attribute__((swift_name("byCodeAndValueDateForSelf(dartResultCallback:codeTypeString:codeCodeString:startOfServiceValueDateString:endOfServiceValueDateString:)")));
- (void)byHealthElementIdFromSubContactForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString healthElementIdsString:(NSString *)healthElementIdsString __attribute__((swift_name("byHealthElementIdFromSubContactForDataOwner(dartResultCallback:dataOwnerIdString:healthElementIdsString:)")));
- (void)byHealthElementIdFromSubContactForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback healthElementIdsString:(NSString *)healthElementIdsString __attribute__((swift_name("byHealthElementIdFromSubContactForSelf(dartResultCallback:healthElementIdsString:)")));
- (void)byIdentifiersForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForDataOwner(dartResultCallback:dataOwnerIdString:identifiersString:)")));
- (void)byIdentifiersForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback identifiersString:(NSString *)identifiersString __attribute__((swift_name("byIdentifiersForSelf(dartResultCallback:identifiersString:)")));
- (void)byIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback idsString:(NSString *)idsString __attribute__((swift_name("byIds(dartResultCallback:idsString:)")));
- (void)byPatientSecretIdsDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsDateForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientSecretIdsDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientSecretIdsDateForSelf(dartResultCallback:secretIdsString:fromString:toString:descendingString:)")));
- (void)byPatientsDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsDateForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPatientsDateForSelf(dartResultCallback:patientsString:fromString:toString:descendingString:)")));
- (void)byPatientsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString patientsString:(NSString *)patientsString __attribute__((swift_name("byPatientsForDataOwner(dartResultCallback:dataOwnerIdString:patientsString:)")));
- (void)byPatientsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientsString:(NSString *)patientsString __attribute__((swift_name("byPatientsForSelf(dartResultCallback:patientsString:)")));
- (void)byPatientsSecretIdsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString secretIdsString:(NSString *)secretIdsString __attribute__((swift_name("byPatientsSecretIdsForDataOwner(dartResultCallback:dataOwnerIdString:secretIdsString:)")));
- (void)byPatientsSecretIdsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback secretIdsString:(NSString *)secretIdsString __attribute__((swift_name("byPatientsSecretIdsForSelf(dartResultCallback:secretIdsString:)")));
- (void)byQualifiedLinkDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback linkValuesString:(NSString *)linkValuesString linkQualificationString:(NSString *)linkQualificationString __attribute__((swift_name("byQualifiedLink(dartResultCallback:linkValuesString:linkQualificationString:)")));
- (void)byTagAndValueDateForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString startOfServiceValueDateString:(NSString *)startOfServiceValueDateString endOfServiceValueDateString:(NSString *)endOfServiceValueDateString __attribute__((swift_name("byTagAndValueDateForDataOwner(dartResultCallback:dataOwnerIdString:tagTypeString:tagCodeString:startOfServiceValueDateString:endOfServiceValueDateString:)")));
- (void)byTagAndValueDateForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback tagTypeString:(NSString *)tagTypeString tagCodeString:(NSString *)tagCodeString startOfServiceValueDateString:(NSString *)startOfServiceValueDateString endOfServiceValueDateString:(NSString *)endOfServiceValueDateString __attribute__((swift_name("byTagAndValueDateForSelf(dartResultCallback:tagTypeString:tagCodeString:startOfServiceValueDateString:endOfServiceValueDateString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TimeTableFilters")))
@interface CDSSLTimeTableFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)timeTableFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTimeTableFilters *shared __attribute__((swift_name("shared")));
- (void)byAgendaIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback agendaIdString:(NSString *)agendaIdString __attribute__((swift_name("byAgendaId(dartResultCallback:agendaIdString:)")));
- (void)byPeriodAndAgendaIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback agendaIdString:(NSString *)agendaIdString fromString:(NSString *)fromString toString:(NSString *)toString descendingString:(NSString *)descendingString __attribute__((swift_name("byPeriodAndAgendaId(dartResultCallback:agendaIdString:fromString:toString:descendingString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("TopicFilters")))
@interface CDSSLTopicFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)topicFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLTopicFilters *shared __attribute__((swift_name("shared")));
- (void)allTopicsForDataOwnerDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback dataOwnerIdString:(NSString *)dataOwnerIdString __attribute__((swift_name("allTopicsForDataOwner(dartResultCallback:dataOwnerIdString:)")));
- (void)allTopicsForSelfDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("allTopicsForSelf(dartResultCallback:)")));
- (void)byParticipantDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback participantIdString:(NSString *)participantIdString __attribute__((swift_name("byParticipant(dartResultCallback:participantIdString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("UserFilters")))
@interface CDSSLUserFilters : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)userFilters __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLUserFilters *shared __attribute__((swift_name("shared")));
- (void)allDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback __attribute__((swift_name("all(dartResultCallback:)")));
- (void)byHealthcarePartyIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback healthcarePartyIdString:(NSString *)healthcarePartyIdString __attribute__((swift_name("byHealthcarePartyId(dartResultCallback:healthcarePartyIdString:)")));
- (void)byIdsDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback idsString:(NSString *)idsString __attribute__((swift_name("byIds(dartResultCallback:idsString:)")));
- (void)byNameEmailOrPhoneDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback searchStringString:(NSString *)searchStringString __attribute__((swift_name("byNameEmailOrPhone(dartResultCallback:searchStringString:)")));
- (void)byPatientIdDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback patientIdString:(NSString *)patientIdString __attribute__((swift_name("byPatientId(dartResultCallback:patientIdString:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DartSdkOptions")))
@interface CDSSLDartSdkOptions : CDSSLBase
- (instancetype)initWithEncryptedFields:(CDSSLCardinal_sdkEncryptedFieldsConfiguration *)encryptedFields saltPasswordWithApplicationId:(BOOL)saltPasswordWithApplicationId useHierarchicalDataOwners:(BOOL)useHierarchicalDataOwners createTransferKeys:(BOOL)createTransferKeys __attribute__((swift_name("init(encryptedFields:saltPasswordWithApplicationId:useHierarchicalDataOwners:createTransferKeys:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLDartSdkOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLDartSdkOptions *)doCopyEncryptedFields:(CDSSLCardinal_sdkEncryptedFieldsConfiguration *)encryptedFields saltPasswordWithApplicationId:(BOOL)saltPasswordWithApplicationId useHierarchicalDataOwners:(BOOL)useHierarchicalDataOwners createTransferKeys:(BOOL)createTransferKeys __attribute__((swift_name("doCopy(encryptedFields:saltPasswordWithApplicationId:useHierarchicalDataOwners:createTransferKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkSdkOptions *)toMultiplatform __attribute__((swift_name("toMultiplatform()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL createTransferKeys __attribute__((swift_name("createTransferKeys")));
@property (readonly) CDSSLCardinal_sdkEncryptedFieldsConfiguration *encryptedFields __attribute__((swift_name("encryptedFields")));
@property (readonly) BOOL saltPasswordWithApplicationId __attribute__((swift_name("saltPasswordWithApplicationId")));
@property (readonly) BOOL useHierarchicalDataOwners __attribute__((swift_name("useHierarchicalDataOwners")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DartSdkOptions.Companion")))
@interface CDSSLDartSdkOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDartSdkOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("DartStorageOptions")))
@protocol CDSSLDartStorageOptions
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DartStorageOptionsCompanion")))
@interface CDSSLDartStorageOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDartStorageOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DartStorageOptionsDefault")))
@interface CDSSLDartStorageOptionsDefault : CDSSLBase <CDSSLDartStorageOptions>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)default_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDartStorageOptionsDefault *shared __attribute__((swift_name("shared")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("EntitySubscription")))
@interface CDSSLEntitySubscription : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)entitySubscription __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLEntitySubscription *shared __attribute__((swift_name("shared")));
- (void)closeDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback subscriptionId:(NSString *)subscriptionId __attribute__((swift_name("close(dartResultCallback:subscriptionId:)")));
- (void)getCloseReasonDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback subscriptionId:(NSString *)subscriptionId __attribute__((swift_name("getCloseReason(dartResultCallback:subscriptionId:)")));
- (void)getEventDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback subscriptionId:(NSString *)subscriptionId __attribute__((swift_name("getEvent(dartResultCallback:subscriptionId:)")));
- (void)waitForEventDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback subscriptionId:(NSString *)subscriptionId timeoutString:(NSString *)timeoutString __attribute__((swift_name("waitForEvent(dartResultCallback:subscriptionId:timeoutString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ApiScope")))
@interface CDSSLApiScope : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)apiScope __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLApiScope *shared __attribute__((swift_name("shared")));
- (void)executeResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))resultCallback resultSerializer:(id<CDSSLKotlinx_serialization_coreKSerializer>)resultSerializer method:(id<CDSSLKotlinSuspendFunction0>)method __attribute__((swift_name("execute(resultCallback:resultSerializer:method:)")));
- (void)setup __attribute__((swift_name("setup()")));
- (void)teardown __attribute__((swift_name("teardown()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("DartResult")))
@interface CDSSLDartResult : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)dartResult __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLDartResult *shared __attribute__((swift_name("shared")));
- (void)inlineResolveResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))resultCallback resultSerializer:(id<CDSSLKotlinx_serialization_coreKSerializer>)resultSerializer method:(id _Nullable (^)(void))method __attribute__((swift_name("inlineResolve(resultCallback:resultSerializer:method:)")));
- (void)resolveResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))resultCallback resultSerializer:(id<CDSSLKotlinx_serialization_coreKSerializer>)resultSerializer method:(id _Nullable (^)(void))method __attribute__((swift_name("resolve(resultCallback:resultSerializer:method:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("NativeReferences")))
@interface CDSSLNativeReferences : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)nativeReferences __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLNativeReferences *shared __attribute__((swift_name("shared")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createObj:(id)obj completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("create(obj:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteReferenceId:(NSString *)referenceId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("delete(referenceId:completionHandler:)")));
- (id)getReferenceId:(NSString *)referenceId __attribute__((swift_name("get(referenceId:)")));
- (id)getAsAnyReferenceId:(NSString *)referenceId __attribute__((swift_name("getAsAny(referenceId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("PaginatedListIterator")))
@interface CDSSLPaginatedListIterator : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)paginatedListIterator __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLPaginatedListIterator *shared __attribute__((swift_name("shared")));
- (void)hasNextDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback paginatedListIteratorId:(NSString *)paginatedListIteratorId __attribute__((swift_name("hasNext(dartResultCallback:paginatedListIteratorId:)")));
- (void)nextDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback paginatedListIteratorId:(NSString *)paginatedListIteratorId limitString:(NSString *)limitString __attribute__((swift_name("next(dartResultCallback:paginatedListIteratorId:limitString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("ResourceUtils")))
@interface CDSSLResourceUtils : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)resourceUtils __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLResourceUtils *shared __attribute__((swift_name("shared")));
- (void)releasePlatformResourceDartResultCallback:(void (^)(NSString * _Nullable, NSString * _Nullable, NSString * _Nullable))dartResultCallback resourceId:(NSString *)resourceId __attribute__((swift_name("releasePlatformResource(dartResultCallback:resourceId:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("StorageHelper")))
@interface CDSSLStorageHelper : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)storageHelper __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLStorageHelper *shared __attribute__((swift_name("shared")));
- (id<CDSSLCardinal_sdkStorageFacade>)getStorageOptions:(NSString *)options __attribute__((swift_name("getStorage(options:)")));
@end

__attribute__((swift_name("Cardinal_sdkStorageFacade")))
@protocol CDSSLCardinal_sdkStorageFacade
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getItemKey:(NSString *)key completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getItem(key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)removeItemKey:(NSString *)key completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("removeItem(key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setItemKey:(NSString *)key value:(NSString *)value completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("setItem(key:value:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkAuthenticationMethod")))
@protocol CDSSLCardinal_sdkAuthenticationMethod
@required
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerializationStrategy")))
@protocol CDSSLKotlinx_serialization_coreSerializationStrategy
@required
- (void)serializeEncoder:(id<CDSSLKotlinx_serialization_coreEncoder>)encoder value:(id _Nullable)value __attribute__((swift_name("serialize(encoder:value:)")));
@property (readonly) id<CDSSLKotlinx_serialization_coreSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreDeserializationStrategy")))
@protocol CDSSLKotlinx_serialization_coreDeserializationStrategy
@required
- (id _Nullable)deserializeDecoder:(id<CDSSLKotlinx_serialization_coreDecoder>)decoder __attribute__((swift_name("deserialize(decoder:)")));
@property (readonly) id<CDSSLKotlinx_serialization_coreSerialDescriptor> descriptor __attribute__((swift_name("descriptor")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreKSerializer")))
@protocol CDSSLKotlinx_serialization_coreKSerializer <CDSSLKotlinx_serialization_coreSerializationStrategy, CDSSLKotlinx_serialization_coreDeserializationStrategy>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinArray")))
@interface CDSSLKotlinArray<T> : CDSSLBase
+ (instancetype)arrayWithSize:(int32_t)size init:(T _Nullable (^)(CDSSLInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (T _Nullable)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (id<CDSSLKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(T _Nullable)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAuthenticationMethodUsingCredentials")))
@interface CDSSLCardinal_sdkAuthenticationMethodUsingCredentials : CDSSLBase <CDSSLCardinal_sdkAuthenticationMethod>
- (instancetype)initWithCredentials:(id<CDSSLCardinal_sdkCredentials>)credentials __attribute__((swift_name("init(credentials:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkAuthenticationMethodUsingCredentials *)doCopyCredentials:(id<CDSSLCardinal_sdkCredentials>)credentials __attribute__((swift_name("doCopy(credentials:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLCardinal_sdkCredentials> credentials __attribute__((swift_name("credentials")));
@end

__attribute__((swift_name("Cardinal_sdkCaptchaOptions")))
@protocol CDSSLCardinal_sdkCaptchaOptions
@required
@property (readonly) NSString *msgGwIdentifier __attribute__((swift_name("msgGwIdentifier")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCaptchaOptionsFriendlyCaptcha")))
@interface CDSSLCardinal_sdkCaptchaOptionsFriendlyCaptcha : CDSSLBase <CDSSLCardinal_sdkCaptchaOptions>
- (instancetype)initWithSolution:(NSString *)solution __attribute__((swift_name("init(solution:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkCaptchaOptionsFriendlyCaptcha *)doCopySolution:(NSString *)solution __attribute__((swift_name("doCopy(solution:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *msgGwIdentifier __attribute__((swift_name("msgGwIdentifier")));
@property (readonly) NSString *solution __attribute__((swift_name("solution")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibrarySolution")))
@interface CDSSLLibrarySolution : CDSSLBase
- (instancetype)initWithId:(NSString *)id nonces:(NSArray<NSString *> *)nonces __attribute__((swift_name("init(id:nonces:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLLibrarySolutionCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<NSString *> *nonces __attribute__((swift_name("nonces")));
@end

__attribute__((swift_name("Cardinal_sdkCaptchaOptionsKerberus")))
@protocol CDSSLCardinal_sdkCaptchaOptionsKerberus <CDSSLCardinal_sdkCaptchaOptions>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCaptchaOptionsKerberusComputed")))
@interface CDSSLCardinal_sdkCaptchaOptionsKerberusComputed : CDSSLBase <CDSSLCardinal_sdkCaptchaOptionsKerberus>
- (instancetype)initWithSolution:(CDSSLLibrarySolution *)solution __attribute__((swift_name("init(solution:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkCaptchaOptionsKerberusComputed *)doCopySolution:(CDSSLLibrarySolution *)solution __attribute__((swift_name("doCopy(solution:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLibrarySolution *solution __attribute__((swift_name("solution")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCaptchaOptionsKerberusDelegated")))
@interface CDSSLCardinal_sdkCaptchaOptionsKerberusDelegated : CDSSLBase <CDSSLCardinal_sdkCaptchaOptionsKerberus>
- (instancetype)initWithOnProgress:(void (^ _Nullable)(CDSSLDouble *))onProgress __attribute__((swift_name("init(onProgress:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkCaptchaOptionsKerberusDelegated *)doCopyOnProgress:(void (^ _Nullable)(CDSSLDouble *))onProgress __attribute__((swift_name("doCopy(onProgress:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) void (^ _Nullable onProgress)(CDSSLDouble *) __attribute__((swift_name("onProgress")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCaptchaOptionsRecaptcha")))
@interface CDSSLCardinal_sdkCaptchaOptionsRecaptcha : CDSSLBase <CDSSLCardinal_sdkCaptchaOptions>
- (instancetype)initWithSolution:(NSString *)solution __attribute__((swift_name("init(solution:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkCaptchaOptionsRecaptcha *)doCopySolution:(NSString *)solution __attribute__((swift_name("doCopy(solution:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *msgGwIdentifier __attribute__((swift_name("msgGwIdentifier")));
@property (readonly) NSString *solution __attribute__((swift_name("solution")));
@end

__attribute__((swift_name("Cardinal_sdkCredentials")))
@protocol CDSSLCardinal_sdkCredentials
@required
@end

__attribute__((swift_name("KotlinComparable")))
@protocol CDSSLKotlinComparable
@required
- (int32_t)compareToOther:(id _Nullable)other __attribute__((swift_name("compareTo(other:)")));
@end

__attribute__((swift_name("KotlinEnum")))
@interface CDSSLKotlinEnum<E> : CDSSLBase <CDSSLKotlinComparable>
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKotlinEnumCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(E)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) int32_t ordinal __attribute__((swift_name("ordinal")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkThirdPartyProvider")))
@interface CDSSLCardinal_sdkThirdPartyProvider : CDSSLKotlinEnum<CDSSLCardinal_sdkThirdPartyProvider *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkThirdPartyProviderCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkThirdPartyProvider *google __attribute__((swift_name("google")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkThirdPartyProvider *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkThirdPartyProvider *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkThirdPartyAuthentication")))
@interface CDSSLCardinal_sdkThirdPartyAuthentication : CDSSLBase <CDSSLCardinal_sdkCredentials>
- (instancetype)initWithToken:(NSString *)token provider:(CDSSLCardinal_sdkThirdPartyProvider *)provider __attribute__((swift_name("init(token:provider:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkThirdPartyAuthentication *)doCopyToken:(NSString *)token provider:(CDSSLCardinal_sdkThirdPartyProvider *)provider __attribute__((swift_name("doCopy(token:provider:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkThirdPartyProvider *provider __attribute__((swift_name("provider")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUsernameLongToken")))
@interface CDSSLCardinal_sdkUsernameLongToken : CDSSLBase <CDSSLCardinal_sdkCredentials>
- (instancetype)initWithUsername:(NSString *)username token:(NSString *)token __attribute__((swift_name("init(username:token:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkUsernameLongToken *)doCopyUsername:(NSString *)username token:(NSString *)token __attribute__((swift_name("doCopy(username:token:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@property (readonly) NSString *username __attribute__((swift_name("username")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUsernamePassword")))
@interface CDSSLCardinal_sdkUsernamePassword : CDSSLBase <CDSSLCardinal_sdkCredentials>
- (instancetype)initWithUsername:(NSString *)username password:(NSString *)password __attribute__((swift_name("init(username:password:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkUsernamePassword *)doCopyUsername:(NSString *)username password:(NSString *)password __attribute__((swift_name("doCopy(username:password:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *password __attribute__((swift_name("password")));
@property (readonly) NSString *username __attribute__((swift_name("username")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedFieldsConfiguration")))
@interface CDSSLCardinal_sdkEncryptedFieldsConfiguration : CDSSLBase
- (instancetype)initWithAccessLog:(NSSet<NSString *> *)accessLog calendarItem:(NSSet<NSString *> *)calendarItem contact:(NSSet<NSString *> *)contact service:(NSSet<NSString *> *)service healthElement:(NSSet<NSString *> *)healthElement maintenanceTask:(NSSet<NSString *> *)maintenanceTask patient:(NSSet<NSString *> *)patient message:(NSSet<NSString *> *)message topic:(NSSet<NSString *> *)topic document:(NSSet<NSString *> *)document form:(NSSet<NSString *> *)form receipt:(NSSet<NSString *> *)receipt classification:(NSSet<NSString *> *)classification timeTable:(NSSet<NSString *> *)timeTable invoice:(NSSet<NSString *> *)invoice __attribute__((swift_name("init(accessLog:calendarItem:contact:service:healthElement:maintenanceTask:patient:message:topic:document:form:receipt:classification:timeTable:invoice:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedFieldsConfigurationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedFieldsConfiguration *)doCopyAccessLog:(NSSet<NSString *> *)accessLog calendarItem:(NSSet<NSString *> *)calendarItem contact:(NSSet<NSString *> *)contact service:(NSSet<NSString *> *)service healthElement:(NSSet<NSString *> *)healthElement maintenanceTask:(NSSet<NSString *> *)maintenanceTask patient:(NSSet<NSString *> *)patient message:(NSSet<NSString *> *)message topic:(NSSet<NSString *> *)topic document:(NSSet<NSString *> *)document form:(NSSet<NSString *> *)form receipt:(NSSet<NSString *> *)receipt classification:(NSSet<NSString *> *)classification timeTable:(NSSet<NSString *> *)timeTable invoice:(NSSet<NSString *> *)invoice __attribute__((swift_name("doCopy(accessLog:calendarItem:contact:service:healthElement:maintenanceTask:patient:message:topic:document:form:receipt:classification:timeTable:invoice:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSSet<NSString *> *accessLog __attribute__((swift_name("accessLog")));
@property (readonly) NSSet<NSString *> *calendarItem __attribute__((swift_name("calendarItem")));
@property (readonly) NSSet<NSString *> *classification __attribute__((swift_name("classification")));
@property (readonly) NSSet<NSString *> *contact __attribute__((swift_name("contact")));
@property (readonly) NSSet<NSString *> *document __attribute__((swift_name("document")));
@property (readonly) NSSet<NSString *> *form __attribute__((swift_name("form")));
@property (readonly) NSSet<NSString *> *healthElement __attribute__((swift_name("healthElement")));
@property (readonly) NSSet<NSString *> *invoice __attribute__((swift_name("invoice")));
@property (readonly) NSSet<NSString *> *maintenanceTask __attribute__((swift_name("maintenanceTask")));
@property (readonly) NSSet<NSString *> *message __attribute__((swift_name("message")));
@property (readonly) NSSet<NSString *> *patient __attribute__((swift_name("patient")));
@property (readonly) NSSet<NSString *> *receipt __attribute__((swift_name("receipt")));
@property (readonly) NSSet<NSString *> *service __attribute__((swift_name("service")));
@property (readonly) NSSet<NSString *> *timeTable __attribute__((swift_name("timeTable")));
@property (readonly) NSSet<NSString *> *topic __attribute__((swift_name("topic")));
@end

__attribute__((swift_name("Cardinal_sdkCommonSdkOptions")))
@protocol CDSSLCardinal_sdkCommonSdkOptions
@required
@property (readonly) id<CDSSLLibCryptoService> cryptoService __attribute__((swift_name("cryptoService")));
@property (readonly) CDSSLCardinal_sdkEncryptedFieldsConfiguration *encryptedFields __attribute__((swift_name("encryptedFields")));
@property (readonly) id<CDSSLKotlinSuspendFunction1> _Nullable groupSelector __attribute__((swift_name("groupSelector")));
@property (readonly) CDSSLKtor_client_coreHttpClient * _Nullable httpClient __attribute__((swift_name("httpClient")));
@property (readonly) CDSSLKotlinx_serialization_jsonJson * _Nullable httpClientJson __attribute__((swift_name("httpClientJson")));
@property (readonly) BOOL saltPasswordWithApplicationId __attribute__((swift_name("saltPasswordWithApplicationId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSdkOptions")))
@interface CDSSLCardinal_sdkSdkOptions : CDSSLBase <CDSSLCardinal_sdkCommonSdkOptions>
- (instancetype)initWithEncryptedFields:(CDSSLCardinal_sdkEncryptedFieldsConfiguration *)encryptedFields useHierarchicalDataOwners:(BOOL)useHierarchicalDataOwners httpClient:(CDSSLKtor_client_coreHttpClient * _Nullable)httpClient httpClientJson:(CDSSLKotlinx_serialization_jsonJson * _Nullable)httpClientJson createTransferKeys:(BOOL)createTransferKeys cryptoService:(id<CDSSLLibCryptoService>)cryptoService groupSelector:(id<CDSSLKotlinSuspendFunction1> _Nullable)groupSelector autoCreateEncryptionKeyForExistingLegacyData:(BOOL)autoCreateEncryptionKeyForExistingLegacyData keyStorage:(id<CDSSLCardinal_sdkKeyStorageFacade> _Nullable)keyStorage saltPasswordWithApplicationId:(BOOL)saltPasswordWithApplicationId cryptoStrategies:(id<CDSSLCardinal_sdkCryptoStrategies> _Nullable)cryptoStrategies jsonPatcher:(id<CDSSLCardinal_sdkJsonPatcher> _Nullable)jsonPatcher __attribute__((swift_name("init(encryptedFields:useHierarchicalDataOwners:httpClient:httpClientJson:createTransferKeys:cryptoService:groupSelector:autoCreateEncryptionKeyForExistingLegacyData:keyStorage:saltPasswordWithApplicationId:cryptoStrategies:jsonPatcher:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkSdkOptions *)doCopyEncryptedFields:(CDSSLCardinal_sdkEncryptedFieldsConfiguration *)encryptedFields useHierarchicalDataOwners:(BOOL)useHierarchicalDataOwners httpClient:(CDSSLKtor_client_coreHttpClient * _Nullable)httpClient httpClientJson:(CDSSLKotlinx_serialization_jsonJson * _Nullable)httpClientJson createTransferKeys:(BOOL)createTransferKeys cryptoService:(id<CDSSLLibCryptoService>)cryptoService groupSelector:(id<CDSSLKotlinSuspendFunction1> _Nullable)groupSelector autoCreateEncryptionKeyForExistingLegacyData:(BOOL)autoCreateEncryptionKeyForExistingLegacyData keyStorage:(id<CDSSLCardinal_sdkKeyStorageFacade> _Nullable)keyStorage saltPasswordWithApplicationId:(BOOL)saltPasswordWithApplicationId cryptoStrategies:(id<CDSSLCardinal_sdkCryptoStrategies> _Nullable)cryptoStrategies jsonPatcher:(id<CDSSLCardinal_sdkJsonPatcher> _Nullable)jsonPatcher __attribute__((swift_name("doCopy(encryptedFields:useHierarchicalDataOwners:httpClient:httpClientJson:createTransferKeys:cryptoService:groupSelector:autoCreateEncryptionKeyForExistingLegacyData:keyStorage:saltPasswordWithApplicationId:cryptoStrategies:jsonPatcher:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL autoCreateEncryptionKeyForExistingLegacyData __attribute__((swift_name("autoCreateEncryptionKeyForExistingLegacyData")));
@property (readonly) BOOL createTransferKeys __attribute__((swift_name("createTransferKeys")));
@property (readonly) id<CDSSLLibCryptoService> cryptoService __attribute__((swift_name("cryptoService")));
@property (readonly) id<CDSSLCardinal_sdkCryptoStrategies> _Nullable cryptoStrategies __attribute__((swift_name("cryptoStrategies")));
@property (readonly) CDSSLCardinal_sdkEncryptedFieldsConfiguration *encryptedFields __attribute__((swift_name("encryptedFields")));
@property (readonly) id<CDSSLKotlinSuspendFunction1> _Nullable groupSelector __attribute__((swift_name("groupSelector")));
@property (readonly) CDSSLKtor_client_coreHttpClient * _Nullable httpClient __attribute__((swift_name("httpClient")));
@property (readonly) CDSSLKotlinx_serialization_jsonJson * _Nullable httpClientJson __attribute__((swift_name("httpClientJson")));
@property (readonly) id<CDSSLCardinal_sdkJsonPatcher> _Nullable jsonPatcher __attribute__((swift_name("jsonPatcher")));
@property (readonly) id<CDSSLCardinal_sdkKeyStorageFacade> _Nullable keyStorage __attribute__((swift_name("keyStorage")));
@property (readonly) BOOL saltPasswordWithApplicationId __attribute__((swift_name("saltPasswordWithApplicationId")));
@property (readonly) BOOL useHierarchicalDataOwners __attribute__((swift_name("useHierarchicalDataOwners")));
@end

__attribute__((swift_name("KotlinFunction")))
@protocol CDSSLKotlinFunction
@required
@end

__attribute__((swift_name("KotlinSuspendFunction0")))
@protocol CDSSLKotlinSuspendFunction0 <CDSSLKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(completionHandler:)")));
@end

__attribute__((swift_name("KotlinThrowable")))
@interface CDSSLKotlinThrowable : CDSSLBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));

/**
 * @note annotations
 *   kotlin.experimental.ExperimentalNativeApi
*/
- (CDSSLKotlinArray<NSString *> *)getStackTrace __attribute__((swift_name("getStackTrace()")));
- (void)printStackTrace __attribute__((swift_name("printStackTrace()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLKotlinThrowable * _Nullable cause __attribute__((swift_name("cause")));
@property (readonly) NSString * _Nullable message __attribute__((swift_name("message")));
- (NSError *)asError __attribute__((swift_name("asError()")));
@end

__attribute__((swift_name("KotlinException")))
@interface CDSSLKotlinException : CDSSLKotlinThrowable
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("KotlinRuntimeException")))
@interface CDSSLKotlinRuntimeException : CDSSLKotlinException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("KotlinIllegalStateException")))
@interface CDSSLKotlinIllegalStateException : CDSSLKotlinRuntimeException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.4")
*/
__attribute__((swift_name("KotlinCancellationException")))
@interface CDSSLKotlinCancellationException : CDSSLKotlinIllegalStateException
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithMessage:(NSString * _Nullable)message __attribute__((swift_name("init(message:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(cause:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMessage:(NSString * _Nullable)message cause:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("init(message:cause:)"))) __attribute__((objc_designated_initializer));
@end

__attribute__((swift_name("Kotlinx_serialization_coreEncoder")))
@protocol CDSSLKotlinx_serialization_coreEncoder
@required
- (id<CDSSLKotlinx_serialization_coreCompositeEncoder>)beginCollectionDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor collectionSize:(int32_t)collectionSize __attribute__((swift_name("beginCollection(descriptor:collectionSize:)")));
- (id<CDSSLKotlinx_serialization_coreCompositeEncoder>)beginStructureDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (void)encodeBooleanValue:(BOOL)value __attribute__((swift_name("encodeBoolean(value:)")));
- (void)encodeByteValue:(int8_t)value __attribute__((swift_name("encodeByte(value:)")));
- (void)encodeCharValue:(unichar)value __attribute__((swift_name("encodeChar(value:)")));
- (void)encodeDoubleValue:(double)value __attribute__((swift_name("encodeDouble(value:)")));
- (void)encodeEnumEnumDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)enumDescriptor index:(int32_t)index __attribute__((swift_name("encodeEnum(enumDescriptor:index:)")));
- (void)encodeFloatValue:(float)value __attribute__((swift_name("encodeFloat(value:)")));
- (id<CDSSLKotlinx_serialization_coreEncoder>)encodeInlineDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("encodeInline(descriptor:)")));
- (void)encodeIntValue:(int32_t)value __attribute__((swift_name("encodeInt(value:)")));
- (void)encodeLongValue:(int64_t)value __attribute__((swift_name("encodeLong(value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNotNullMark __attribute__((swift_name("encodeNotNullMark()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNull __attribute__((swift_name("encodeNull()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNullableSerializableValueSerializer:(id<CDSSLKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableValue(serializer:value:)")));
- (void)encodeSerializableValueSerializer:(id<CDSSLKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableValue(serializer:value:)")));
- (void)encodeShortValue:(int16_t)value __attribute__((swift_name("encodeShort(value:)")));
- (void)encodeStringValue:(NSString *)value __attribute__((swift_name("encodeString(value:)")));
@property (readonly) CDSSLKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerialDescriptor")))
@protocol CDSSLKotlinx_serialization_coreSerialDescriptor
@required

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (NSArray<id<CDSSLKotlinAnnotation>> *)getElementAnnotationsIndex:(int32_t)index __attribute__((swift_name("getElementAnnotations(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<CDSSLKotlinx_serialization_coreSerialDescriptor>)getElementDescriptorIndex:(int32_t)index __attribute__((swift_name("getElementDescriptor(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (int32_t)getElementIndexName:(NSString *)name __attribute__((swift_name("getElementIndex(name:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (NSString *)getElementNameIndex:(int32_t)index __attribute__((swift_name("getElementName(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)isElementOptionalIndex:(int32_t)index __attribute__((swift_name("isElementOptional(index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) NSArray<id<CDSSLKotlinAnnotation>> *annotations __attribute__((swift_name("annotations")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) int32_t elementsCount __attribute__((swift_name("elementsCount")));
@property (readonly) BOOL isInline __attribute__((swift_name("isInline")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) BOOL isNullable __attribute__((swift_name("isNullable")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) CDSSLKotlinx_serialization_coreSerialKind *kind __attribute__((swift_name("kind")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) NSString *serialName __attribute__((swift_name("serialName")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreDecoder")))
@protocol CDSSLKotlinx_serialization_coreDecoder
@required
- (id<CDSSLKotlinx_serialization_coreCompositeDecoder>)beginStructureDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("beginStructure(descriptor:)")));
- (BOOL)decodeBoolean __attribute__((swift_name("decodeBoolean()")));
- (int8_t)decodeByte __attribute__((swift_name("decodeByte()")));
- (unichar)decodeChar __attribute__((swift_name("decodeChar()")));
- (double)decodeDouble __attribute__((swift_name("decodeDouble()")));
- (int32_t)decodeEnumEnumDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)enumDescriptor __attribute__((swift_name("decodeEnum(enumDescriptor:)")));
- (float)decodeFloat __attribute__((swift_name("decodeFloat()")));
- (id<CDSSLKotlinx_serialization_coreDecoder>)decodeInlineDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeInline(descriptor:)")));
- (int32_t)decodeInt __attribute__((swift_name("decodeInt()")));
- (int64_t)decodeLong __attribute__((swift_name("decodeLong()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)decodeNotNullMark __attribute__((swift_name("decodeNotNullMark()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (CDSSLKotlinNothing * _Nullable)decodeNull __attribute__((swift_name("decodeNull()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id _Nullable)decodeNullableSerializableValueDeserializer:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy>)deserializer __attribute__((swift_name("decodeNullableSerializableValue(deserializer:)")));
- (id _Nullable)decodeSerializableValueDeserializer:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy>)deserializer __attribute__((swift_name("decodeSerializableValue(deserializer:)")));
- (int16_t)decodeShort __attribute__((swift_name("decodeShort()")));
- (NSString *)decodeString __attribute__((swift_name("decodeString()")));
@property (readonly) CDSSLKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("KotlinIterator")))
@protocol CDSSLKotlinIterator
@required
- (BOOL)hasNext __attribute__((swift_name("hasNext()")));
- (id _Nullable)next __attribute__((swift_name("next()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibrarySolution.Companion")))
@interface CDSSLLibrarySolutionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLLibrarySolutionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinEnumCompanion")))
@interface CDSSLKotlinEnumCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinEnumCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkThirdPartyProvider.Companion")))
@interface CDSSLCardinal_sdkThirdPartyProviderCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkThirdPartyProviderCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedFieldsConfiguration.Companion")))
@interface CDSSLCardinal_sdkEncryptedFieldsConfigurationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedFieldsConfigurationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("LibCryptoService")))
@protocol CDSSLLibCryptoService
@required
@property (readonly) id<CDSSLLibAesService> aes __attribute__((swift_name("aes")));
@property (readonly) id<CDSSLLibDigestService> digest __attribute__((swift_name("digest")));
@property (readonly) id<CDSSLLibHmacService> hmac __attribute__((swift_name("hmac")));
@property (readonly) id<CDSSLLibRsaService> rsa __attribute__((swift_name("rsa")));
@property (readonly) id<CDSSLLibStrongRandom> strongRandom __attribute__((swift_name("strongRandom")));
@end

__attribute__((swift_name("KotlinSuspendFunction1")))
@protocol CDSSLKotlinSuspendFunction1 <CDSSLKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:completionHandler:)")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineScope")))
@protocol CDSSLKotlinx_coroutines_coreCoroutineScope
@required
@property (readonly) id<CDSSLKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@end

__attribute__((swift_name("Ktor_ioCloseable")))
@protocol CDSSLKtor_ioCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClient")))
@interface CDSSLKtor_client_coreHttpClient : CDSSLBase <CDSSLKotlinx_coroutines_coreCoroutineScope, CDSSLKtor_ioCloseable>
- (instancetype)initWithEngine:(id<CDSSLKtor_client_coreHttpClientEngine>)engine userConfig:(CDSSLKtor_client_coreHttpClientConfig<CDSSLKtor_client_coreHttpClientEngineConfig *> *)userConfig __attribute__((swift_name("init(engine:userConfig:)"))) __attribute__((objc_designated_initializer));
- (void)close __attribute__((swift_name("close()")));
- (CDSSLKtor_client_coreHttpClient *)configBlock:(void (^)(CDSSLKtor_client_coreHttpClientConfig<id> *))block __attribute__((swift_name("config(block:)")));
- (BOOL)isSupportedCapability:(id<CDSSLKtor_client_coreHttpClientEngineCapability>)capability __attribute__((swift_name("isSupported(capability:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) id<CDSSLKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property (readonly) id<CDSSLKtor_client_coreHttpClientEngine> engine __attribute__((swift_name("engine")));
@property (readonly) CDSSLKtor_client_coreHttpClientEngineConfig *engineConfig __attribute__((swift_name("engineConfig")));
@property (readonly) CDSSLKtor_eventsEvents *monitor __attribute__((swift_name("monitor")));
@property (readonly) CDSSLKtor_client_coreHttpReceivePipeline *receivePipeline __attribute__((swift_name("receivePipeline")));
@property (readonly) CDSSLKtor_client_coreHttpRequestPipeline *requestPipeline __attribute__((swift_name("requestPipeline")));
@property (readonly) CDSSLKtor_client_coreHttpResponsePipeline *responsePipeline __attribute__((swift_name("responsePipeline")));
@property (readonly) CDSSLKtor_client_coreHttpSendPipeline *sendPipeline __attribute__((swift_name("sendPipeline")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerialFormat")))
@protocol CDSSLKotlinx_serialization_coreSerialFormat
@required
@property (readonly) CDSSLKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreStringFormat")))
@protocol CDSSLKotlinx_serialization_coreStringFormat <CDSSLKotlinx_serialization_coreSerialFormat>
@required
- (id _Nullable)decodeFromStringDeserializer:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy>)deserializer string:(NSString *)string __attribute__((swift_name("decodeFromString(deserializer:string:)")));
- (NSString *)encodeToStringSerializer:(id<CDSSLKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToString(serializer:value:)")));
@end

__attribute__((swift_name("Kotlinx_serialization_jsonJson")))
@interface CDSSLKotlinx_serialization_jsonJson : CDSSLBase <CDSSLKotlinx_serialization_coreStringFormat>
@property (class, readonly, getter=companion) CDSSLKotlinx_serialization_jsonJsonDefault *companion __attribute__((swift_name("companion")));
- (id _Nullable)decodeFromJsonElementDeserializer:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy>)deserializer element:(CDSSLKotlinx_serialization_jsonJsonElement *)element __attribute__((swift_name("decodeFromJsonElement(deserializer:element:)")));
- (id _Nullable)decodeFromStringString:(NSString *)string __attribute__((swift_name("decodeFromString(string:)")));
- (id _Nullable)decodeFromStringDeserializer:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy>)deserializer string:(NSString *)string __attribute__((swift_name("decodeFromString(deserializer:string:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)encodeToJsonElementSerializer:(id<CDSSLKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToJsonElement(serializer:value:)")));
- (NSString *)encodeToStringSerializer:(id<CDSSLKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeToString(serializer:value:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)parseToJsonElementString:(NSString *)string __attribute__((swift_name("parseToJsonElement(string:)")));
@property (readonly) CDSSLKotlinx_serialization_jsonJsonConfiguration *configuration __attribute__((swift_name("configuration")));
@property (readonly) CDSSLKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Cardinal_sdkKeyStorageFacade")))
@protocol CDSSLCardinal_sdkKeyStorageFacade
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteKeyStorageEntryKey:(NSString *)storageEntryKey completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("deleteKey(storageEntryKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPrivateKeyPkcs8StorageEntryKey:(NSString *)storageEntryKey completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getPrivateKeyPkcs8(storageEntryKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPublicKeySpkiStorageEntryKey:(NSString *)storageEntryKey completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getPublicKeySpki(storageEntryKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)storePrivateKeyStorageEntryKey:(NSString *)storageEntryKey privateKey:(CDSSLKotlinByteArray *)privateKey completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("storePrivateKey(storageEntryKey:privateKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)storePublicKeyStorageEntryKey:(NSString *)storageEntryKey publicKeySpki:(CDSSLKotlinByteArray *)publicKeySpki completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("storePublicKey(storageEntryKey:publicKeySpki:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkCryptoStrategies")))
@protocol CDSSLCardinal_sdkCryptoStrategies
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)dataOwnerRequiresAnonymousDelegationDataOwner:(CDSSLCardinal_sdkCryptoActorStubWithType *)dataOwner completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("dataOwnerRequiresAnonymousDelegation(dataOwner:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)generateNewKeyForDataOwnerSelf:(id<CDSSLCardinal_sdkDataOwnerWithType>)self cryptoPrimitives:(id<CDSSLLibCryptoService>)cryptoPrimitives completionHandler:(void (^)(id<CDSSLCardinal_sdkCryptoStrategiesKeyGenerationRequestResult> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateNewKeyForDataOwner(self:cryptoPrimitives:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)notifyNewKeyCreatedApis:(id<CDSSLCardinal_sdkCardinalApis>)apis key:(CDSSLLibRsaKeypair<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithmOaepWithSha256 *> *)key cryptoPrimitives:(id<CDSSLLibCryptoService>)cryptoPrimitives completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("notifyNewKeyCreated(apis:key:cryptoPrimitives:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)recoverAndVerifySelfHierarchyKeysKeysData:(NSArray<CDSSLCardinal_sdkCryptoStrategiesKeyDataRecoveryRequest *> *)keysData cryptoPrimitives:(id<CDSSLLibCryptoService>)cryptoPrimitives keyPairRecoverer:(id<CDSSLCardinal_sdkKeyPairRecoverer>)keyPairRecoverer completionHandler:(void (^)(NSDictionary<NSString *, CDSSLCardinal_sdkCryptoStrategiesRecoveredKeyData *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("recoverAndVerifySelfHierarchyKeys(keysData:cryptoPrimitives:keyPairRecoverer:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifyDelegatePublicKeysDelegate:(CDSSLCardinal_sdkCryptoActorStubWithType *)delegate publicKeys:(NSArray<id> *)publicKeys cryptoPrimitives:(id<CDSSLLibCryptoService>)cryptoPrimitives completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifyDelegatePublicKeys(delegate:publicKeys:cryptoPrimitives:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkJsonPatcher")))
@protocol CDSSLCardinal_sdkJsonPatcher
@required
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchAccessLogDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchAccessLog(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchCalendarItemDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchCalendarItem(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchClassificationDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchClassification(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchContactDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchContact(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchDocumentDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchDocument(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchFormDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchForm(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchHealthElementDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchHealthElement(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchIndividualServiceDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchIndividualService(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchInvoiceDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchInvoice(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchMaintenanceTaskDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchMaintenanceTask(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchMessageDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchMessage(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchPatientDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchPatient(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchReceiptDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchReceipt(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchTimeTableDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchTimeTable(decryptedJson:)")));
- (CDSSLKotlinx_serialization_jsonJsonElement *)patchTopicDecryptedJson:(CDSSLKotlinx_serialization_jsonJsonElement *)decryptedJson __attribute__((swift_name("patchTopic(decryptedJson:)")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreCompositeEncoder")))
@protocol CDSSLKotlinx_serialization_coreCompositeEncoder
@required
- (void)encodeBooleanElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(BOOL)value __attribute__((swift_name("encodeBooleanElement(descriptor:index:value:)")));
- (void)encodeByteElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int8_t)value __attribute__((swift_name("encodeByteElement(descriptor:index:value:)")));
- (void)encodeCharElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(unichar)value __attribute__((swift_name("encodeCharElement(descriptor:index:value:)")));
- (void)encodeDoubleElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(double)value __attribute__((swift_name("encodeDoubleElement(descriptor:index:value:)")));
- (void)encodeFloatElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(float)value __attribute__((swift_name("encodeFloatElement(descriptor:index:value:)")));
- (id<CDSSLKotlinx_serialization_coreEncoder>)encodeInlineElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("encodeInlineElement(descriptor:index:)")));
- (void)encodeIntElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int32_t)value __attribute__((swift_name("encodeIntElement(descriptor:index:value:)")));
- (void)encodeLongElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int64_t)value __attribute__((swift_name("encodeLongElement(descriptor:index:value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)encodeNullableSerializableElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<CDSSLKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeNullableSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeSerializableElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index serializer:(id<CDSSLKotlinx_serialization_coreSerializationStrategy>)serializer value:(id _Nullable)value __attribute__((swift_name("encodeSerializableElement(descriptor:index:serializer:value:)")));
- (void)encodeShortElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(int16_t)value __attribute__((swift_name("encodeShortElement(descriptor:index:value:)")));
- (void)encodeStringElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index value:(NSString *)value __attribute__((swift_name("encodeStringElement(descriptor:index:value:)")));
- (void)endStructureDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)shouldEncodeElementDefaultDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("shouldEncodeElementDefault(descriptor:index:)")));
@property (readonly) CDSSLKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreSerializersModule")))
@interface CDSSLKotlinx_serialization_coreSerializersModule : CDSSLBase

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (void)dumpToCollector:(id<CDSSLKotlinx_serialization_coreSerializersModuleCollector>)collector __attribute__((swift_name("dumpTo(collector:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<CDSSLKotlinx_serialization_coreKSerializer> _Nullable)getContextualKClass:(id<CDSSLKotlinKClass>)kClass typeArgumentsSerializers:(NSArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeArgumentsSerializers __attribute__((swift_name("getContextual(kClass:typeArgumentsSerializers:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<CDSSLKotlinx_serialization_coreSerializationStrategy> _Nullable)getPolymorphicBaseClass:(id<CDSSLKotlinKClass>)baseClass value:(id)value __attribute__((swift_name("getPolymorphic(baseClass:value:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id<CDSSLKotlinx_serialization_coreDeserializationStrategy> _Nullable)getPolymorphicBaseClass:(id<CDSSLKotlinKClass>)baseClass serializedClassName:(NSString * _Nullable)serializedClassName __attribute__((swift_name("getPolymorphic(baseClass:serializedClassName:)")));
@end

__attribute__((swift_name("KotlinAnnotation")))
@protocol CDSSLKotlinAnnotation
@required
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("Kotlinx_serialization_coreSerialKind")))
@interface CDSSLKotlinx_serialization_coreSerialKind : CDSSLBase
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((swift_name("Kotlinx_serialization_coreCompositeDecoder")))
@protocol CDSSLKotlinx_serialization_coreCompositeDecoder
@required
- (BOOL)decodeBooleanElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeBooleanElement(descriptor:index:)")));
- (int8_t)decodeByteElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeByteElement(descriptor:index:)")));
- (unichar)decodeCharElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeCharElement(descriptor:index:)")));
- (int32_t)decodeCollectionSizeDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeCollectionSize(descriptor:)")));
- (double)decodeDoubleElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeDoubleElement(descriptor:index:)")));
- (int32_t)decodeElementIndexDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("decodeElementIndex(descriptor:)")));
- (float)decodeFloatElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeFloatElement(descriptor:index:)")));
- (id<CDSSLKotlinx_serialization_coreDecoder>)decodeInlineElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeInlineElement(descriptor:index:)")));
- (int32_t)decodeIntElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeIntElement(descriptor:index:)")));
- (int64_t)decodeLongElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeLongElement(descriptor:index:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (id _Nullable)decodeNullableSerializableElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeNullableSerializableElement(descriptor:index:deserializer:previousValue:)")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
- (BOOL)decodeSequentially __attribute__((swift_name("decodeSequentially()")));
- (id _Nullable)decodeSerializableElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index deserializer:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy>)deserializer previousValue:(id _Nullable)previousValue __attribute__((swift_name("decodeSerializableElement(descriptor:index:deserializer:previousValue:)")));
- (int16_t)decodeShortElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeShortElement(descriptor:index:)")));
- (NSString *)decodeStringElementDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor index:(int32_t)index __attribute__((swift_name("decodeStringElement(descriptor:index:)")));
- (void)endStructureDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor __attribute__((swift_name("endStructure(descriptor:)")));
@property (readonly) CDSSLKotlinx_serialization_coreSerializersModule *serializersModule __attribute__((swift_name("serializersModule")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinNothing")))
@interface CDSSLKotlinNothing : CDSSLBase
@end

__attribute__((swift_name("LibAesService")))
@protocol CDSSLLibAesService
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptIvAndEncryptedData:(CDSSLKotlinByteArray *)ivAndEncryptedData key:(CDSSLLibAesKey<id> *)key completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(ivAndEncryptedData:key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)encryptData:(CDSSLKotlinByteArray *)data key:(CDSSLLibAesKey<id> *)key iv:(CDSSLKotlinByteArray * _Nullable)iv completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("encrypt(data:key:iv:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)exportKeyKey:(CDSSLLibAesKey<id> *)key completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("exportKey(key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)generateKeyAlgorithm:(id<CDSSLLibAesAlgorithm>)algorithm size:(CDSSLLibAesServiceKeySize *)size completionHandler:(void (^)(CDSSLLibAesKey<id<CDSSLLibAesAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateKey(algorithm:size:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadKeyAlgorithm:(id<CDSSLLibAesAlgorithm>)algorithm bytes:(CDSSLKotlinByteArray *)bytes completionHandler:(void (^)(CDSSLLibAesKey<id<CDSSLLibAesAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadKey(algorithm:bytes:completionHandler:)")));
@end

__attribute__((swift_name("LibDigestService")))
@protocol CDSSLLibDigestService
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)sha256Data:(CDSSLKotlinByteArray *)data completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sha256(data:completionHandler:)")));
@end

__attribute__((swift_name("LibHmacService")))
@protocol CDSSLLibHmacService
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)exportKeyKey:(CDSSLLibHmacKey<id> *)key completionHandler_:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("exportKey(key:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)generateKeyAlgorithm:(id<CDSSLLibHmacAlgorithm>)algorithm keySize:(CDSSLInt * _Nullable)keySize completionHandler:(void (^)(CDSSLLibHmacKey<id<CDSSLLibHmacAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateKey(algorithm:keySize:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadKeyAlgorithm:(id<CDSSLLibHmacAlgorithm>)algorithm bytes:(CDSSLKotlinByteArray *)bytes completionHandler_:(void (^)(CDSSLLibHmacKey<id<CDSSLLibHmacAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadKey(algorithm:bytes:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)signData:(CDSSLKotlinByteArray *)data key:(CDSSLLibHmacKey<id> *)key completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sign(data:key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifySignature:(CDSSLKotlinByteArray *)signature data:(CDSSLKotlinByteArray *)data key:(CDSSLLibHmacKey<id> *)key completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verify(signature:data:key:completionHandler:)")));
@end

__attribute__((swift_name("LibRsaService")))
@protocol CDSSLLibRsaService
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptData:(CDSSLKotlinByteArray *)data privateKey:(CDSSLLibPrivateRsaKey<id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>> *)privateKey completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(data:privateKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)encryptData:(CDSSLKotlinByteArray *)data publicKey:(CDSSLLibPublicRsaKey<id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>> *)publicKey completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("encrypt(data:publicKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)exportPrivateKeyJwkKey:(CDSSLLibPrivateRsaKey<id> *)key completionHandler:(void (^)(CDSSLLibPrivateRsaKeyJwk * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("exportPrivateKeyJwk(key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)exportPrivateKeyPkcs8Key:(CDSSLLibPrivateRsaKey<id> *)key completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("exportPrivateKeyPkcs8(key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)exportPublicKeyJwkKey:(CDSSLLibPublicRsaKey<id> *)key completionHandler:(void (^)(CDSSLLibPublicRsaKeyJwk * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("exportPublicKeyJwk(key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)exportPublicKeySpkiKey:(CDSSLLibPublicRsaKey<id> *)key completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("exportPublicKeySpki(key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)generateKeyPairAlgorithm:(id<CDSSLLibRsaAlgorithm>)algorithm keySize:(CDSSLLibRsaServiceKeySize *)keySize completionHandler:(void (^)(CDSSLLibRsaKeypair<id<CDSSLLibRsaAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("generateKeyPair(algorithm:keySize:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadKeyPairPkcs8Algorithm:(id<CDSSLLibRsaAlgorithm>)algorithm privateKeyPkcs8:(CDSSLKotlinByteArray *)privateKeyPkcs8 completionHandler:(void (^)(CDSSLLibRsaKeypair<id<CDSSLLibRsaAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadKeyPairPkcs8(algorithm:privateKeyPkcs8:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadPrivateKeyJwkAlgorithm:(id<CDSSLLibRsaAlgorithm>)algorithm privateKeyJwk:(CDSSLLibPrivateRsaKeyJwk *)privateKeyJwk completionHandler:(void (^)(CDSSLLibPrivateRsaKey<id<CDSSLLibRsaAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadPrivateKeyJwk(algorithm:privateKeyJwk:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadPrivateKeyPkcs8Algorithm:(id<CDSSLLibRsaAlgorithm>)algorithm privateKeyPkcs8:(CDSSLKotlinByteArray *)privateKeyPkcs8 completionHandler:(void (^)(CDSSLLibPrivateRsaKey<id<CDSSLLibRsaAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadPrivateKeyPkcs8(algorithm:privateKeyPkcs8:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadPublicKeyJwkAlgorithm:(id<CDSSLLibRsaAlgorithm>)algorithm publicKeyJwk:(CDSSLLibPublicRsaKeyJwk *)publicKeyJwk completionHandler:(void (^)(CDSSLLibPublicRsaKey<id<CDSSLLibRsaAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadPublicKeyJwk(algorithm:publicKeyJwk:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)loadPublicKeySpkiAlgorithm:(id<CDSSLLibRsaAlgorithm>)algorithm publicKeySpki:(CDSSLKotlinByteArray *)publicKeySpki completionHandler:(void (^)(CDSSLLibPublicRsaKey<id<CDSSLLibRsaAlgorithm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("loadPublicKeySpki(algorithm:publicKeySpki:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)signData:(CDSSLKotlinByteArray *)data privateKey:(CDSSLLibPrivateRsaKey<id<CDSSLLibRsaAlgorithmRsaSignatureAlgorithm>> *)privateKey completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("sign(data:privateKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)verifySignatureSignature:(CDSSLKotlinByteArray *)signature data:(CDSSLKotlinByteArray *)data publicKey:(CDSSLLibPublicRsaKey<id<CDSSLLibRsaAlgorithmRsaSignatureAlgorithm>> *)publicKey completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("verifySignature(signature:data:publicKey:completionHandler:)")));
@end

__attribute__((swift_name("LibStrongRandom")))
@protocol CDSSLLibStrongRandom
@required
- (void)fillArray:(CDSSLKotlinByteArray *)array __attribute__((swift_name("fill(array:)")));
- (CDSSLKotlinByteArray *)randomBytesLength:(int32_t)length __attribute__((swift_name("randomBytes(length:)")));
- (NSString *)randomUUID __attribute__((swift_name("randomUUID()")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinCoroutineContext")))
@protocol CDSSLKotlinCoroutineContext
@required
- (id _Nullable)foldInitial:(id _Nullable)initial operation:(id _Nullable (^)(id _Nullable, id<CDSSLKotlinCoroutineContextElement>))operation __attribute__((swift_name("fold(initial:operation:)")));
- (id<CDSSLKotlinCoroutineContextElement> _Nullable)getKey:(id<CDSSLKotlinCoroutineContextKey>)key __attribute__((swift_name("get(key:)")));
- (id<CDSSLKotlinCoroutineContext>)minusKeyKey:(id<CDSSLKotlinCoroutineContextKey>)key __attribute__((swift_name("minusKey(key:)")));
- (id<CDSSLKotlinCoroutineContext>)plusContext:(id<CDSSLKotlinCoroutineContext>)context __attribute__((swift_name("plus(context:)")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngine")))
@protocol CDSSLKtor_client_coreHttpClientEngine <CDSSLKotlinx_coroutines_coreCoroutineScope, CDSSLKtor_ioCloseable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeData:(CDSSLKtor_client_coreHttpRequestData *)data completionHandler:(void (^)(CDSSLKtor_client_coreHttpResponseData * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(data:completionHandler:)")));
- (void)installClient:(CDSSLKtor_client_coreHttpClient *)client __attribute__((swift_name("install(client:)")));
@property (readonly) CDSSLKtor_client_coreHttpClientEngineConfig *config __attribute__((swift_name("config")));
@property (readonly) CDSSLKotlinx_coroutines_coreCoroutineDispatcher *dispatcher __attribute__((swift_name("dispatcher")));
@property (readonly) NSSet<id<CDSSLKtor_client_coreHttpClientEngineCapability>> *supportedCapabilities __attribute__((swift_name("supportedCapabilities")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngineConfig")))
@interface CDSSLKtor_client_coreHttpClientEngineConfig : CDSSLBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property CDSSLKotlinx_coroutines_coreCoroutineDispatcher * _Nullable dispatcher __attribute__((swift_name("dispatcher")));
@property BOOL pipelining __attribute__((swift_name("pipelining")));
@property CDSSLKtor_client_coreProxyConfig * _Nullable proxy __attribute__((swift_name("proxy")));
@property int32_t threadsCount __attribute__((swift_name("threadsCount"))) __attribute__((unavailable("The [threadsCount] property is deprecated. Consider setting [dispatcher] instead.")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClientConfig")))
@interface CDSSLKtor_client_coreHttpClientConfig<T> : CDSSLBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (CDSSLKtor_client_coreHttpClientConfig<T> *)clone __attribute__((swift_name("clone()")));
- (void)engineBlock:(void (^)(T))block __attribute__((swift_name("engine(block:)")));
- (void)installClient:(CDSSLKtor_client_coreHttpClient *)client __attribute__((swift_name("install(client:)")));
- (void)installPlugin:(id<CDSSLKtor_client_coreHttpClientPlugin>)plugin configure:(void (^)(id))configure __attribute__((swift_name("install(plugin:configure:)")));
- (void)installKey:(NSString *)key block:(void (^)(CDSSLKtor_client_coreHttpClient *))block __attribute__((swift_name("install(key:block:)")));
- (void)plusAssignOther:(CDSSLKtor_client_coreHttpClientConfig<T> *)other __attribute__((swift_name("plusAssign(other:)")));
@property BOOL developmentMode __attribute__((swift_name("developmentMode"))) __attribute__((deprecated("Development mode is no longer required. The property will be removed in the future.")));
@property BOOL expectSuccess __attribute__((swift_name("expectSuccess")));
@property BOOL followRedirects __attribute__((swift_name("followRedirects")));
@property BOOL useDefaultTransformers __attribute__((swift_name("useDefaultTransformers")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientEngineCapability")))
@protocol CDSSLKtor_client_coreHttpClientEngineCapability
@required
@end

__attribute__((swift_name("Ktor_utilsAttributes")))
@protocol CDSSLKtor_utilsAttributes
@required
- (id)computeIfAbsentKey:(CDSSLKtor_utilsAttributeKey<id> *)key block:(id (^)(void))block __attribute__((swift_name("computeIfAbsent(key:block:)")));
- (BOOL)containsKey:(CDSSLKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("contains(key:)")));
- (id)getKey_:(CDSSLKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("get(key_:)")));
- (id _Nullable)getOrNullKey:(CDSSLKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("getOrNull(key:)")));
- (void)putKey:(CDSSLKtor_utilsAttributeKey<id> *)key value:(id)value __attribute__((swift_name("put(key:value:)")));
- (void)removeKey:(CDSSLKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("remove(key:)")));
- (id)takeKey:(CDSSLKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("take(key:)")));
- (id _Nullable)takeOrNullKey:(CDSSLKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("takeOrNull(key:)")));
@property (readonly) NSArray<CDSSLKtor_utilsAttributeKey<id> *> *allKeys __attribute__((swift_name("allKeys")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_eventsEvents")))
@interface CDSSLKtor_eventsEvents : CDSSLBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)raiseDefinition:(CDSSLKtor_eventsEventDefinition<id> *)definition value:(id _Nullable)value __attribute__((swift_name("raise(definition:value:)")));
- (id<CDSSLKotlinx_coroutines_coreDisposableHandle>)subscribeDefinition:(CDSSLKtor_eventsEventDefinition<id> *)definition handler:(void (^)(id _Nullable))handler __attribute__((swift_name("subscribe(definition:handler:)")));
- (void)unsubscribeDefinition:(CDSSLKtor_eventsEventDefinition<id> *)definition handler:(void (^)(id _Nullable))handler __attribute__((swift_name("unsubscribe(definition:handler:)")));
@end

__attribute__((swift_name("Ktor_utilsPipeline")))
@interface CDSSLKtor_utilsPipeline<TSubject, TContext> : CDSSLBase
- (instancetype)initWithPhases:(CDSSLKotlinArray<CDSSLKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhase:(CDSSLKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<CDSSLKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer));
- (void)addPhasePhase:(CDSSLKtor_utilsPipelinePhase *)phase __attribute__((swift_name("addPhase(phase:)")));
- (void)afterIntercepted __attribute__((swift_name("afterIntercepted()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)executeContext:(TContext)context subject:(TSubject)subject completionHandler:(void (^)(TSubject _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("execute(context:subject:completionHandler:)")));
- (void)insertPhaseAfterReference:(CDSSLKtor_utilsPipelinePhase *)reference phase:(CDSSLKtor_utilsPipelinePhase *)phase __attribute__((swift_name("insertPhaseAfter(reference:phase:)")));
- (void)insertPhaseBeforeReference:(CDSSLKtor_utilsPipelinePhase *)reference phase:(CDSSLKtor_utilsPipelinePhase *)phase __attribute__((swift_name("insertPhaseBefore(reference:phase:)")));
- (void)interceptPhase:(CDSSLKtor_utilsPipelinePhase *)phase block:(id<CDSSLKotlinSuspendFunction2>)block __attribute__((swift_name("intercept(phase:block:)")));
- (NSArray<id<CDSSLKotlinSuspendFunction2>> *)interceptorsForPhasePhase:(CDSSLKtor_utilsPipelinePhase *)phase __attribute__((swift_name("interceptorsForPhase(phase:)")));
- (void)mergeFrom:(CDSSLKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("merge(from:)")));
- (void)mergePhasesFrom:(CDSSLKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("mergePhases(from:)")));
- (void)resetFromFrom:(CDSSLKtor_utilsPipeline<TSubject, TContext> *)from __attribute__((swift_name("resetFrom(from:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) NSArray<CDSSLKtor_utilsPipelinePhase *> *items __attribute__((swift_name("items")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpReceivePipeline")))
@interface CDSSLKtor_client_coreHttpReceivePipeline : CDSSLKtor_utilsPipeline<CDSSLKtor_client_coreHttpResponse *, CDSSLKotlinUnit *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhases:(CDSSLKotlinArray<CDSSLKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhase:(CDSSLKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<CDSSLKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLKtor_client_coreHttpReceivePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestPipeline")))
@interface CDSSLKtor_client_coreHttpRequestPipeline : CDSSLKtor_utilsPipeline<id, CDSSLKtor_client_coreHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhases:(CDSSLKotlinArray<CDSSLKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhase:(CDSSLKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<CDSSLKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLKtor_client_coreHttpRequestPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponsePipeline")))
@interface CDSSLKtor_client_coreHttpResponsePipeline : CDSSLKtor_utilsPipeline<CDSSLKtor_client_coreHttpResponseContainer *, CDSSLKtor_client_coreHttpClientCall *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhases:(CDSSLKotlinArray<CDSSLKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhase:(CDSSLKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<CDSSLKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLKtor_client_coreHttpResponsePipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpSendPipeline")))
@interface CDSSLKtor_client_coreHttpSendPipeline : CDSSLKtor_utilsPipeline<id, CDSSLKtor_client_coreHttpRequestBuilder *>
- (instancetype)initWithDevelopmentMode:(BOOL)developmentMode __attribute__((swift_name("init(developmentMode:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithPhases:(CDSSLKotlinArray<CDSSLKtor_utilsPipelinePhase *> *)phases __attribute__((swift_name("init(phases:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (instancetype)initWithPhase:(CDSSLKtor_utilsPipelinePhase *)phase interceptors:(NSArray<id<CDSSLKotlinSuspendFunction2>> *)interceptors __attribute__((swift_name("init(phase:interceptors:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLKtor_client_coreHttpSendPipelinePhases *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL developmentMode __attribute__((swift_name("developmentMode")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_serialization_jsonJson.Default")))
@interface CDSSLKotlinx_serialization_jsonJsonDefault : CDSSLKotlinx_serialization_jsonJson
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)default_ __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_serialization_jsonJsonDefault *shared __attribute__((swift_name("shared")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/serialization/json/JsonElementSerializer))
*/
__attribute__((swift_name("Kotlinx_serialization_jsonJsonElement")))
@interface CDSSLKotlinx_serialization_jsonJsonElement : CDSSLBase
@property (class, readonly, getter=companion) CDSSLKotlinx_serialization_jsonJsonElementCompanion *companion __attribute__((swift_name("companion")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_serialization_jsonJsonConfiguration")))
@interface CDSSLKotlinx_serialization_jsonJsonConfiguration : CDSSLBase
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) BOOL allowComments __attribute__((swift_name("allowComments")));
@property (readonly) BOOL allowSpecialFloatingPointValues __attribute__((swift_name("allowSpecialFloatingPointValues")));
@property (readonly) BOOL allowStructuredMapKeys __attribute__((swift_name("allowStructuredMapKeys")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) BOOL allowTrailingComma __attribute__((swift_name("allowTrailingComma")));
@property (readonly) NSString *classDiscriminator __attribute__((swift_name("classDiscriminator")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property CDSSLKotlinx_serialization_jsonClassDiscriminatorMode *classDiscriminatorMode __attribute__((swift_name("classDiscriminatorMode")));
@property (readonly) BOOL coerceInputValues __attribute__((swift_name("coerceInputValues")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) BOOL decodeEnumsCaseInsensitive __attribute__((swift_name("decodeEnumsCaseInsensitive")));
@property (readonly) BOOL encodeDefaults __attribute__((swift_name("encodeDefaults")));
@property (readonly) BOOL explicitNulls __attribute__((swift_name("explicitNulls")));
@property (readonly) BOOL ignoreUnknownKeys __attribute__((swift_name("ignoreUnknownKeys")));
@property (readonly) BOOL isLenient __attribute__((swift_name("isLenient")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) id<CDSSLKotlinx_serialization_jsonJsonNamingStrategy> _Nullable namingStrategy __attribute__((swift_name("namingStrategy")));
@property (readonly) BOOL prettyPrint __attribute__((swift_name("prettyPrint")));

/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
@property (readonly) NSString *prettyPrintIndent __attribute__((swift_name("prettyPrintIndent")));
@property (readonly) BOOL useAlternativeNames __attribute__((swift_name("useAlternativeNames")));
@property (readonly) BOOL useArrayPolymorphism __attribute__((swift_name("useArrayPolymorphism")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinByteArray")))
@interface CDSSLKotlinByteArray : CDSSLBase
+ (instancetype)arrayWithSize:(int32_t)size __attribute__((swift_name("init(size:)")));
+ (instancetype)arrayWithSize:(int32_t)size init:(CDSSLByte *(^)(CDSSLInt *))init __attribute__((swift_name("init(size:init:)")));
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (int8_t)getIndex:(int32_t)index __attribute__((swift_name("get(index:)")));
- (CDSSLKotlinByteIterator *)iterator __attribute__((swift_name("iterator()")));
- (void)setIndex:(int32_t)index value:(int8_t)value __attribute__((swift_name("set(index:value:)")));
@property (readonly) int32_t size __attribute__((swift_name("size")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoActorStubWithType")))
@interface CDSSLCardinal_sdkCryptoActorStubWithType : CDSSLBase
- (instancetype)initWithType:(CDSSLCardinal_sdkDataOwnerType *)type stub:(CDSSLCardinal_sdkCryptoActorStub *)stub __attribute__((swift_name("init(type:stub:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCryptoActorStubWithTypeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkCryptoActorStubWithType *)doCopyType:(CDSSLCardinal_sdkDataOwnerType *)type stub:(CDSSLCardinal_sdkCryptoActorStub *)stub __attribute__((swift_name("doCopy(type:stub:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkCryptoActorStub *stub __attribute__((swift_name("stub")));
@property (readonly) CDSSLCardinal_sdkDataOwnerType *type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkDataOwnerWithType")))
@protocol CDSSLCardinal_sdkDataOwnerWithType
@required
@property (readonly) id<CDSSLCardinal_sdkCryptoActor> dataOwner __attribute__((swift_name("dataOwner")));
@end

__attribute__((swift_name("Cardinal_sdkCryptoStrategiesKeyGenerationRequestResult")))
@protocol CDSSLCardinal_sdkCryptoStrategiesKeyGenerationRequestResult
@required
@end

__attribute__((swift_name("Cardinal_sdkCardinalNonCryptoApis")))
@protocol CDSSLCardinal_sdkCardinalNonCryptoApis
@required
@property (readonly) id<CDSSLCardinal_sdkAgendaApi> agenda __attribute__((swift_name("agenda")));
@property (readonly) id<CDSSLCardinal_sdkApplicationSettingsApi> applicationSettings __attribute__((swift_name("applicationSettings")));
@property (readonly) id<CDSSLCardinal_sdkCodeApi> code __attribute__((swift_name("code")));
@property (readonly) id<CDSSLCardinal_sdkDeviceApi> device __attribute__((swift_name("device")));
@property (readonly) id<CDSSLCardinal_sdkDocumentTemplateApi> documentTemplate __attribute__((swift_name("documentTemplate")));
@property (readonly) id<CDSSLCardinal_sdkEntityReferenceApi> entityReference __attribute__((swift_name("entityReference")));
@property (readonly) id<CDSSLCardinal_sdkEntityTemplateApi> entityTemplate __attribute__((swift_name("entityTemplate")));
@property (readonly) id<CDSSLCardinal_sdkFrontEndMigrationApi> frontEndMigration __attribute__((swift_name("frontEndMigration")));
@property (readonly) id<CDSSLCardinal_sdkGroupApi> group __attribute__((swift_name("group")));
@property (readonly) id<CDSSLCardinal_sdkHealthcarePartyApi> healthcareParty __attribute__((swift_name("healthcareParty")));
@property (readonly) id<CDSSLCardinal_sdkInsuranceApi> insurance __attribute__((swift_name("insurance")));
@property (readonly) id<CDSSLCardinal_sdkKeywordApi> keyword __attribute__((swift_name("keyword")));
@property (readonly) id<CDSSLCardinal_sdkMedicalLocationApi> medicalLocation __attribute__((swift_name("medicalLocation")));
@property (readonly) id<CDSSLCardinal_sdkPermissionApi> permission __attribute__((swift_name("permission")));
@property (readonly) id<CDSSLCardinal_sdkPlaceApi> place __attribute__((swift_name("place")));
@property (readonly) id<CDSSLCardinal_sdkRoleApi> role __attribute__((swift_name("role")));
@property (readonly) id<CDSSLCardinal_sdkSystemApi> system __attribute__((swift_name("system")));
@property (readonly) id<CDSSLCardinal_sdkTarificationApi> tarification __attribute__((swift_name("tarification")));
@property (readonly) id<CDSSLCardinal_sdkUserApi> user __attribute__((swift_name("user")));
@end

__attribute__((swift_name("Cardinal_sdkCardinalApis")))
@protocol CDSSLCardinal_sdkCardinalApis <CDSSLCardinal_sdkCardinalNonCryptoApis>
@required
@property (readonly) id<CDSSLCardinal_sdkAccessLogApi> accessLog __attribute__((swift_name("accessLog")));
@property (readonly) id<CDSSLCardinal_sdkCalendarItemApi> calendarItem __attribute__((swift_name("calendarItem")));
@property (readonly) id<CDSSLCardinal_sdkCardinalMaintenanceTaskApi> cardinalMaintenanceTask __attribute__((swift_name("cardinalMaintenanceTask")));
@property (readonly) id<CDSSLCardinal_sdkClassificationApi> classification __attribute__((swift_name("classification")));
@property (readonly) id<CDSSLCardinal_sdkContactApi> contact __attribute__((swift_name("contact")));
@property (readonly) id<CDSSLCardinal_sdkCryptoApi> crypto __attribute__((swift_name("crypto")));
@property (readonly) id<CDSSLCardinal_sdkDataOwnerApi> dataOwner __attribute__((swift_name("dataOwner")));
@property (readonly) id<CDSSLCardinal_sdkDocumentApi> document __attribute__((swift_name("document")));
@property (readonly) id<CDSSLCardinal_sdkFormApi> form __attribute__((swift_name("form")));
@property (readonly) id<CDSSLCardinal_sdkHealthElementApi> healthElement __attribute__((swift_name("healthElement")));
@property (readonly) id<CDSSLCardinal_sdkInvoiceApi> invoice __attribute__((swift_name("invoice"))) __attribute__((deprecated("The invoice API and model are highly specialised for the belgian market. They will be provided as a separate package in future")));
@property (readonly) id<CDSSLCardinal_sdkMaintenanceTaskApi> maintenanceTask __attribute__((swift_name("maintenanceTask")));
@property (readonly) id<CDSSLCardinal_sdkMessageApi> message __attribute__((swift_name("message")));
@property (readonly) id<CDSSLCardinal_sdkPatientApi> patient __attribute__((swift_name("patient")));
@property (readonly) id<CDSSLCardinal_sdkReceiptApi> receipt __attribute__((swift_name("receipt"))) __attribute__((deprecated("The receipt API and model are highly specialised for the belgian market. They will be provided as a separate package in future")));
@property (readonly) id<CDSSLCardinal_sdkRecoveryApi> recovery __attribute__((swift_name("recovery")));
@property (readonly) id<CDSSLCardinal_sdkTimeTableApi> timeTable __attribute__((swift_name("timeTable")));
@property (readonly) id<CDSSLCardinal_sdkTopicApi> topic __attribute__((swift_name("topic")));
@end

__attribute__((swift_name("LibRsaAlgorithm")))
@protocol CDSSLLibRsaAlgorithm
@required
@property (readonly) NSString *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSString *jwkIdentifier __attribute__((swift_name("jwkIdentifier")));
@end

__attribute__((swift_name("LibRsaAlgorithmRsaEncryptionAlgorithm")))
@protocol CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm <CDSSLLibRsaAlgorithm>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibRsaAlgorithmRsaEncryptionAlgorithmOaepWithSha256")))
@interface CDSSLLibRsaAlgorithmRsaEncryptionAlgorithmOaepWithSha256 : CDSSLBase <CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)oaepWithSha256 __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLLibRsaAlgorithmRsaEncryptionAlgorithmOaepWithSha256 *shared __attribute__((swift_name("shared")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSString *jwkIdentifier __attribute__((swift_name("jwkIdentifier")));
@end

__attribute__((swift_name("LibRsaKey")))
@protocol CDSSLLibRsaKey
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibRsaKeypair")))
@interface CDSSLLibRsaKeypair<__covariant A> : CDSSLBase <CDSSLLibRsaKey>
- (instancetype)initWithPrivate:(CDSSLLibPrivateRsaKey<A> *)private_ public:(CDSSLLibPublicRsaKey<A> *)public_ __attribute__((swift_name("init(private:public:)"))) __attribute__((objc_designated_initializer));
- (CDSSLLibRsaKeypair<A> *)doCopyPrivate:(CDSSLLibPrivateRsaKey<A> *)private_ public:(CDSSLLibPublicRsaKey<A> *)public_ __attribute__((swift_name("doCopy(private:public:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) A algorithm __attribute__((swift_name("algorithm")));
@property (readonly, getter=private) CDSSLLibPrivateRsaKey<A> *private_ __attribute__((swift_name("private_")));
@property (readonly, getter=public) CDSSLLibPublicRsaKey<A> *public_ __attribute__((swift_name("public_")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoStrategiesKeyDataRecoveryRequest")))
@interface CDSSLCardinal_sdkCryptoStrategiesKeyDataRecoveryRequest : CDSSLBase
- (instancetype)initWithDataOwnerDetails:(id<CDSSLCardinal_sdkDataOwnerWithType>)dataOwnerDetails unknownKeys:(NSArray<id> *)unknownKeys unavailableKeys:(NSArray<CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfo *> *)unavailableKeys __attribute__((swift_name("init(dataOwnerDetails:unknownKeys:unavailableKeys:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCryptoStrategiesKeyDataRecoveryRequestCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkCryptoStrategiesKeyDataRecoveryRequest *)doCopyDataOwnerDetails:(id<CDSSLCardinal_sdkDataOwnerWithType>)dataOwnerDetails unknownKeys:(NSArray<id> *)unknownKeys unavailableKeys:(NSArray<CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfo *> *)unavailableKeys __attribute__((swift_name("doCopy(dataOwnerDetails:unknownKeys:unavailableKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLCardinal_sdkDataOwnerWithType> dataOwnerDetails __attribute__((swift_name("dataOwnerDetails")));
@property (readonly) NSArray<CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfo *> *unavailableKeys __attribute__((swift_name("unavailableKeys")));
@property (readonly) NSArray<id> *unknownKeys __attribute__((swift_name("unknownKeys")));
@end

__attribute__((swift_name("Cardinal_sdkKeyPairRecoverer")))
@protocol CDSSLCardinal_sdkKeyPairRecoverer
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)recoverWithRecoveryKeyRecoveryKey:(CDSSLCardinal_sdkRecoveryDataKey *)recoveryKey autoDelete:(BOOL)autoDelete completionHandler:(void (^)(id<CDSSLCardinal_sdkRecoveryResult> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("recoverWithRecoveryKey(recoveryKey:autoDelete:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoStrategiesRecoveredKeyData")))
@interface CDSSLCardinal_sdkCryptoStrategiesRecoveredKeyData : CDSSLBase
- (instancetype)initWithRecoveredKeys:(NSDictionary<id, CDSSLLibRsaKeypair<id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>> *> *)recoveredKeys keyAuthenticity:(NSDictionary<id, CDSSLBoolean *> *)keyAuthenticity __attribute__((swift_name("init(recoveredKeys:keyAuthenticity:)"))) __attribute__((objc_designated_initializer));
- (CDSSLCardinal_sdkCryptoStrategiesRecoveredKeyData *)doCopyRecoveredKeys:(NSDictionary<id, CDSSLLibRsaKeypair<id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>> *> *)recoveredKeys keyAuthenticity:(NSDictionary<id, CDSSLBoolean *> *)keyAuthenticity __attribute__((swift_name("doCopy(recoveredKeys:keyAuthenticity:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<id, CDSSLBoolean *> *keyAuthenticity __attribute__((swift_name("keyAuthenticity")));
@property (readonly) NSDictionary<id, CDSSLLibRsaKeypair<id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>> *> *recoveredKeys __attribute__((swift_name("recoveredKeys")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("Kotlinx_serialization_coreSerializersModuleCollector")))
@protocol CDSSLKotlinx_serialization_coreSerializersModuleCollector
@required
- (void)contextualKClass:(id<CDSSLKotlinKClass>)kClass provider:(id<CDSSLKotlinx_serialization_coreKSerializer> (^)(NSArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *))provider __attribute__((swift_name("contextual(kClass:provider:)")));
- (void)contextualKClass:(id<CDSSLKotlinKClass>)kClass serializer:(id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("contextual(kClass:serializer:)")));
- (void)polymorphicBaseClass:(id<CDSSLKotlinKClass>)baseClass actualClass:(id<CDSSLKotlinKClass>)actualClass actualSerializer:(id<CDSSLKotlinx_serialization_coreKSerializer>)actualSerializer __attribute__((swift_name("polymorphic(baseClass:actualClass:actualSerializer:)")));
- (void)polymorphicDefaultBaseClass:(id<CDSSLKotlinKClass>)baseClass defaultDeserializerProvider:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefault(baseClass:defaultDeserializerProvider:)"))) __attribute__((deprecated("Deprecated in favor of function with more precise name: polymorphicDefaultDeserializer")));
- (void)polymorphicDefaultDeserializerBaseClass:(id<CDSSLKotlinKClass>)baseClass defaultDeserializerProvider:(id<CDSSLKotlinx_serialization_coreDeserializationStrategy> _Nullable (^)(NSString * _Nullable))defaultDeserializerProvider __attribute__((swift_name("polymorphicDefaultDeserializer(baseClass:defaultDeserializerProvider:)")));
- (void)polymorphicDefaultSerializerBaseClass:(id<CDSSLKotlinKClass>)baseClass defaultSerializerProvider:(id<CDSSLKotlinx_serialization_coreSerializationStrategy> _Nullable (^)(id))defaultSerializerProvider __attribute__((swift_name("polymorphicDefaultSerializer(baseClass:defaultSerializerProvider:)")));
@end

__attribute__((swift_name("KotlinKDeclarationContainer")))
@protocol CDSSLKotlinKDeclarationContainer
@required
@end

__attribute__((swift_name("KotlinKAnnotatedElement")))
@protocol CDSSLKotlinKAnnotatedElement
@required
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((swift_name("KotlinKClassifier")))
@protocol CDSSLKotlinKClassifier
@required
@end

__attribute__((swift_name("KotlinKClass")))
@protocol CDSSLKotlinKClass <CDSSLKotlinKDeclarationContainer, CDSSLKotlinKAnnotatedElement, CDSSLKotlinKClassifier>
@required

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
- (BOOL)isInstanceValue:(id _Nullable)value __attribute__((swift_name("isInstance(value:)")));
@property (readonly) NSString * _Nullable qualifiedName __attribute__((swift_name("qualifiedName")));
@property (readonly) NSString * _Nullable simpleName __attribute__((swift_name("simpleName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibAesKey")))
@interface CDSSLLibAesKey<__covariant A> : CDSSLBase
- (instancetype)initWithRawKey:(CDSSLKotlinByteArray *)rawKey algorithm:(A)algorithm __attribute__((swift_name("init(rawKey:algorithm:)"))) __attribute__((objc_designated_initializer));
@property (readonly) A algorithm __attribute__((swift_name("algorithm")));
@property (readonly) CDSSLKotlinByteArray *rawKey __attribute__((swift_name("rawKey")));
@end

__attribute__((swift_name("LibAesAlgorithm")))
@protocol CDSSLLibAesAlgorithm
@required
@property (readonly) NSString *identifier __attribute__((swift_name("identifier")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibAesServiceKeySize")))
@interface CDSSLLibAesServiceKeySize : CDSSLKotlinEnum<CDSSLLibAesServiceKeySize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) CDSSLLibAesServiceKeySize *aes128 __attribute__((swift_name("aes128")));
@property (class, readonly) CDSSLLibAesServiceKeySize *aes256 __attribute__((swift_name("aes256")));
+ (CDSSLKotlinArray<CDSSLLibAesServiceKeySize *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLLibAesServiceKeySize *> *entries __attribute__((swift_name("entries")));
@property (readonly) int32_t bitSize __attribute__((swift_name("bitSize")));
@property (readonly) int32_t byteSize __attribute__((swift_name("byteSize")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibHmacKey")))
@interface CDSSLLibHmacKey<__covariant A> : CDSSLBase
- (instancetype)initWithRawKey:(CDSSLKotlinByteArray *)rawKey algorithm:(A)algorithm __attribute__((swift_name("init(rawKey:algorithm:)"))) __attribute__((objc_designated_initializer));
@property (readonly) A algorithm __attribute__((swift_name("algorithm")));
@property (readonly) CDSSLKotlinByteArray *rawKey __attribute__((swift_name("rawKey")));
@end

__attribute__((swift_name("LibHmacAlgorithm")))
@protocol CDSSLLibHmacAlgorithm
@required
@property (readonly) int32_t digestSize __attribute__((swift_name("digestSize")));
@property (readonly) NSString *identifier __attribute__((swift_name("identifier")));
@property (readonly) int32_t minimumKeySize __attribute__((swift_name("minimumKeySize")));
@property (readonly) int32_t recommendedKeySize __attribute__((swift_name("recommendedKeySize")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibPrivateRsaKey")))
@interface CDSSLLibPrivateRsaKey<__covariant A> : CDSSLBase <CDSSLLibRsaKey>
- (instancetype)initWithRawKey:(CDSSLKotlinByteArray *)rawKey algorithm:(A)algorithm __attribute__((swift_name("init(rawKey:algorithm:)"))) __attribute__((objc_designated_initializer));
@property (readonly) A algorithm __attribute__((swift_name("algorithm")));
@property (readonly) CDSSLKotlinByteArray *rawKey __attribute__((swift_name("rawKey")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibPublicRsaKey")))
@interface CDSSLLibPublicRsaKey<__covariant A> : CDSSLBase <CDSSLLibRsaKey>
- (instancetype)initWithRawKey:(CDSSLKotlinByteArray *)rawKey algorithm:(A)algorithm __attribute__((swift_name("init(rawKey:algorithm:)"))) __attribute__((objc_designated_initializer));
@property (readonly) A algorithm __attribute__((swift_name("algorithm")));
@property (readonly) CDSSLKotlinByteArray *rawKey __attribute__((swift_name("rawKey")));
@end

__attribute__((swift_name("LibJwkKey")))
@protocol CDSSLLibJwkKey
@required
@property (readonly) NSString *alg __attribute__((swift_name("alg")));
@property (readonly) BOOL ext __attribute__((swift_name("ext")));
@property (readonly) NSSet<NSString *> *key_ops __attribute__((swift_name("key_ops")));
@property (readonly) NSString *kty __attribute__((swift_name("kty")));
@end

__attribute__((swift_name("LibRsaKeyJwk")))
@protocol CDSSLLibRsaKeyJwk <CDSSLLibJwkKey>
@required
@property (readonly) NSString *e __attribute__((swift_name("e")));
@property (readonly) NSString *n __attribute__((swift_name("n")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibPrivateRsaKeyJwk")))
@interface CDSSLLibPrivateRsaKeyJwk : CDSSLBase <CDSSLLibRsaKeyJwk>
- (instancetype)initWithAlg:(NSString *)alg d:(NSString *)d dp:(NSString *)dp dq:(NSString *)dq e:(NSString *)e ext:(BOOL)ext key_ops:(NSSet<NSString *> *)key_ops n:(NSString *)n p:(NSString *)p q:(NSString *)q qi:(NSString *)qi __attribute__((swift_name("init(alg:d:dp:dq:e:ext:key_ops:n:p:q:qi:)"))) __attribute__((objc_designated_initializer));
- (CDSSLLibPrivateRsaKeyJwk *)doCopyAlg:(NSString *)alg d:(NSString *)d dp:(NSString *)dp dq:(NSString *)dq e:(NSString *)e ext:(BOOL)ext key_ops:(NSSet<NSString *> *)key_ops n:(NSString *)n p:(NSString *)p q:(NSString *)q qi:(NSString *)qi __attribute__((swift_name("doCopy(alg:d:dp:dq:e:ext:key_ops:n:p:q:qi:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (CDSSLLibPublicRsaKeyJwk *)extractPublic __attribute__((swift_name("extractPublic()")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *alg __attribute__((swift_name("alg")));
@property (readonly) NSString *d __attribute__((swift_name("d")));
@property (readonly) NSString *dp __attribute__((swift_name("dp")));
@property (readonly) NSString *dq __attribute__((swift_name("dq")));
@property (readonly) NSString *e __attribute__((swift_name("e")));
@property (readonly) BOOL ext __attribute__((swift_name("ext")));
@property (readonly) NSSet<NSString *> *key_ops __attribute__((swift_name("key_ops")));
@property (readonly) NSString *kty __attribute__((swift_name("kty")));
@property (readonly) NSString *n __attribute__((swift_name("n")));
@property (readonly) NSString *p __attribute__((swift_name("p")));
@property (readonly) NSString *q __attribute__((swift_name("q")));
@property (readonly) NSString *qi __attribute__((swift_name("qi")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibPublicRsaKeyJwk")))
@interface CDSSLLibPublicRsaKeyJwk : CDSSLBase <CDSSLLibRsaKeyJwk>
- (instancetype)initWithAlg:(NSString *)alg e:(NSString *)e ext:(BOOL)ext key_ops:(NSSet<NSString *> *)key_ops n:(NSString *)n __attribute__((swift_name("init(alg:e:ext:key_ops:n:)"))) __attribute__((objc_designated_initializer));
- (CDSSLLibPublicRsaKeyJwk *)doCopyAlg:(NSString *)alg e:(NSString *)e ext:(BOOL)ext key_ops:(NSSet<NSString *> *)key_ops n:(NSString *)n __attribute__((swift_name("doCopy(alg:e:ext:key_ops:n:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *alg __attribute__((swift_name("alg")));
@property (readonly) NSString *e __attribute__((swift_name("e")));
@property (readonly) BOOL ext __attribute__((swift_name("ext")));
@property (readonly) NSSet<NSString *> *key_ops __attribute__((swift_name("key_ops")));
@property (readonly) NSString *kty __attribute__((swift_name("kty")));
@property (readonly) NSString *n __attribute__((swift_name("n")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("LibRsaServiceKeySize")))
@interface CDSSLLibRsaServiceKeySize : CDSSLKotlinEnum<CDSSLLibRsaServiceKeySize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) CDSSLLibRsaServiceKeySize *rsa2048 __attribute__((swift_name("rsa2048")));
@property (class, readonly) CDSSLLibRsaServiceKeySize *rsa4096 __attribute__((swift_name("rsa4096")));
+ (CDSSLKotlinArray<CDSSLLibRsaServiceKeySize *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLLibRsaServiceKeySize *> *entries __attribute__((swift_name("entries")));
- (int32_t)maxEncryptionSizeBytesAlgorithm:(id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>)algorithm __attribute__((swift_name("maxEncryptionSizeBytes(algorithm:)")));
@property (readonly) int32_t bitSize __attribute__((swift_name("bitSize")));
@property (readonly) int32_t byteSize __attribute__((swift_name("byteSize")));
@end

__attribute__((swift_name("LibRsaAlgorithmRsaSignatureAlgorithm")))
@protocol CDSSLLibRsaAlgorithmRsaSignatureAlgorithm <CDSSLLibRsaAlgorithm>
@required
@end

__attribute__((swift_name("KotlinCoroutineContextElement")))
@protocol CDSSLKotlinCoroutineContextElement <CDSSLKotlinCoroutineContext>
@required
@property (readonly) id<CDSSLKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end

__attribute__((swift_name("KotlinCoroutineContextKey")))
@protocol CDSSLKotlinCoroutineContextKey
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestData")))
@interface CDSSLKtor_client_coreHttpRequestData : CDSSLBase
- (instancetype)initWithUrl:(CDSSLKtor_httpUrl *)url method:(CDSSLKtor_httpHttpMethod *)method headers:(id<CDSSLKtor_httpHeaders>)headers body:(CDSSLKtor_httpOutgoingContent *)body executionContext:(id<CDSSLKotlinx_coroutines_coreJob>)executionContext attributes:(id<CDSSLKtor_utilsAttributes>)attributes __attribute__((swift_name("init(url:method:headers:body:executionContext:attributes:)"))) __attribute__((objc_designated_initializer));
- (id _Nullable)getCapabilityOrNullKey:(id<CDSSLKtor_client_coreHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) CDSSLKtor_httpOutgoingContent *body __attribute__((swift_name("body")));
@property (readonly) id<CDSSLKotlinx_coroutines_coreJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) id<CDSSLKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) CDSSLKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) CDSSLKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponseData")))
@interface CDSSLKtor_client_coreHttpResponseData : CDSSLBase
- (instancetype)initWithStatusCode:(CDSSLKtor_httpHttpStatusCode *)statusCode requestTime:(CDSSLKtor_utilsGMTDate *)requestTime headers:(id<CDSSLKtor_httpHeaders>)headers version:(CDSSLKtor_httpHttpProtocolVersion *)version body:(id)body callContext:(id<CDSSLKotlinCoroutineContext>)callContext __attribute__((swift_name("init(statusCode:requestTime:headers:version:body:callContext:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id body __attribute__((swift_name("body")));
@property (readonly) id<CDSSLKotlinCoroutineContext> callContext __attribute__((swift_name("callContext")));
@property (readonly) id<CDSSLKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) CDSSLKtor_utilsGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) CDSSLKtor_utilsGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *statusCode __attribute__((swift_name("statusCode")));
@property (readonly) CDSSLKtor_httpHttpProtocolVersion *version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinAbstractCoroutineContextElement")))
@interface CDSSLKotlinAbstractCoroutineContextElement : CDSSLBase <CDSSLKotlinCoroutineContextElement>
- (instancetype)initWithKey:(id<CDSSLKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer));
@property (readonly) id<CDSSLKotlinCoroutineContextKey> key __attribute__((swift_name("key")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinContinuationInterceptor")))
@protocol CDSSLKotlinContinuationInterceptor <CDSSLKotlinCoroutineContextElement>
@required
- (id<CDSSLKotlinContinuation>)interceptContinuationContinuation:(id<CDSSLKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (void)releaseInterceptedContinuationContinuation:(id<CDSSLKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineDispatcher")))
@interface CDSSLKotlinx_coroutines_coreCoroutineDispatcher : CDSSLKotlinAbstractCoroutineContextElement <CDSSLKotlinContinuationInterceptor>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (instancetype)initWithKey:(id<CDSSLKotlinCoroutineContextKey>)key __attribute__((swift_name("init(key:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLKotlinx_coroutines_coreCoroutineDispatcherKey *companion __attribute__((swift_name("companion")));
- (void)dispatchContext:(id<CDSSLKotlinCoroutineContext>)context block:(id<CDSSLKotlinx_coroutines_coreRunnable>)block __attribute__((swift_name("dispatch(context:block:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
- (void)dispatchYieldContext:(id<CDSSLKotlinCoroutineContext>)context block:(id<CDSSLKotlinx_coroutines_coreRunnable>)block __attribute__((swift_name("dispatchYield(context:block:)")));
- (id<CDSSLKotlinContinuation>)interceptContinuationContinuation:(id<CDSSLKotlinContinuation>)continuation __attribute__((swift_name("interceptContinuation(continuation:)")));
- (BOOL)isDispatchNeededContext:(id<CDSSLKotlinCoroutineContext>)context __attribute__((swift_name("isDispatchNeeded(context:)")));
- (CDSSLKotlinx_coroutines_coreCoroutineDispatcher *)limitedParallelismParallelism:(int32_t)parallelism name:(NSString * _Nullable)name __attribute__((swift_name("limitedParallelism(parallelism:name:)")));
- (CDSSLKotlinx_coroutines_coreCoroutineDispatcher *)plusOther:(CDSSLKotlinx_coroutines_coreCoroutineDispatcher *)other __attribute__((swift_name("plus(other:)"))) __attribute__((unavailable("Operator '+' on two CoroutineDispatcher objects is meaningless. CoroutineDispatcher is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The dispatcher to the right of `+` just replaces the dispatcher to the left.")));
- (void)releaseInterceptedContinuationContinuation:(id<CDSSLKotlinContinuation>)continuation __attribute__((swift_name("releaseInterceptedContinuation(continuation:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreProxyConfig")))
@interface CDSSLKtor_client_coreProxyConfig : CDSSLBase
- (instancetype)initWithUrl:(CDSSLKtor_httpUrl *)url __attribute__((swift_name("init(url:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientPlugin")))
@protocol CDSSLKtor_client_coreHttpClientPlugin
@required
- (void)installPlugin:(id)plugin scope:(CDSSLKtor_client_coreHttpClient *)scope __attribute__((swift_name("install(plugin:scope:)")));
- (id)prepareBlock:(void (^)(id))block __attribute__((swift_name("prepare(block:)")));
@property (readonly) CDSSLKtor_utilsAttributeKey<id> *key __attribute__((swift_name("key")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsAttributeKey")))
@interface CDSSLKtor_utilsAttributeKey<T> : CDSSLBase

/**
 * @note annotations
 *   kotlin.jvm.JvmOverloads
*/
- (instancetype)initWithName:(NSString *)name type:(CDSSLKtor_utilsTypeInfo *)type __attribute__((swift_name("init(name:type:)"))) __attribute__((objc_designated_initializer));
- (CDSSLKtor_utilsAttributeKey<T> *)doCopyName:(NSString *)name type:(CDSSLKtor_utilsTypeInfo *)type __attribute__((swift_name("doCopy(name:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("Ktor_eventsEventDefinition")))
@interface CDSSLKtor_eventsEventDefinition<T> : CDSSLBase
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreDisposableHandle")))
@protocol CDSSLKotlinx_coroutines_coreDisposableHandle
@required
- (void)dispose __attribute__((swift_name("dispose()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsPipelinePhase")))
@interface CDSSLKtor_utilsPipelinePhase : CDSSLBase
- (instancetype)initWithName:(NSString *)name __attribute__((swift_name("init(name:)"))) __attribute__((objc_designated_initializer));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("KotlinSuspendFunction2")))
@protocol CDSSLKotlinSuspendFunction2 <CDSSLKotlinFunction>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)invokeP1:(id _Nullable)p1 p2:(id _Nullable)p2 completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("invoke(p1:p2:completionHandler:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpReceivePipeline.Phases")))
@interface CDSSLKtor_client_coreHttpReceivePipelinePhases : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_client_coreHttpReceivePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@end

__attribute__((swift_name("Ktor_httpHttpMessage")))
@protocol CDSSLKtor_httpHttpMessage
@required
@property (readonly) id<CDSSLKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@end

__attribute__((swift_name("Ktor_client_coreHttpResponse")))
@interface CDSSLKtor_client_coreHttpResponse : CDSSLBase <CDSSLKtor_httpHttpMessage, CDSSLKotlinx_coroutines_coreCoroutineScope>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLKtor_client_coreHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) id<CDSSLKtor_ioByteReadChannel> rawContent __attribute__((swift_name("rawContent")));
@property (readonly) CDSSLKtor_utilsGMTDate *requestTime __attribute__((swift_name("requestTime")));
@property (readonly) CDSSLKtor_utilsGMTDate *responseTime __attribute__((swift_name("responseTime")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *status __attribute__((swift_name("status")));
@property (readonly) CDSSLKtor_httpHttpProtocolVersion *version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinUnit")))
@interface CDSSLKotlinUnit : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)unit __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinUnit *shared __attribute__((swift_name("shared")));
- (NSString *)description __attribute__((swift_name("description()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestPipeline.Phases")))
@interface CDSSLKtor_client_coreHttpRequestPipelinePhases : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_client_coreHttpRequestPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Render __attribute__((swift_name("Render")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Send __attribute__((swift_name("Send")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end

__attribute__((swift_name("Ktor_httpHttpMessageBuilder")))
@protocol CDSSLKtor_httpHttpMessageBuilder
@required
@property (readonly) CDSSLKtor_httpHeadersBuilder *headers __attribute__((swift_name("headers")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestBuilder")))
@interface CDSSLKtor_client_coreHttpRequestBuilder : CDSSLBase <CDSSLKtor_httpHttpMessageBuilder>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
@property (class, readonly, getter=companion) CDSSLKtor_client_coreHttpRequestBuilderCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLKtor_client_coreHttpRequestData *)build __attribute__((swift_name("build()")));
- (id _Nullable)getCapabilityOrNullKey:(id<CDSSLKtor_client_coreHttpClientEngineCapability>)key __attribute__((swift_name("getCapabilityOrNull(key:)")));
- (void)setAttributesBlock:(void (^)(id<CDSSLKtor_utilsAttributes>))block __attribute__((swift_name("setAttributes(block:)")));
- (void)setCapabilityKey:(id<CDSSLKtor_client_coreHttpClientEngineCapability>)key capability:(id)capability __attribute__((swift_name("setCapability(key:capability:)")));
- (CDSSLKtor_client_coreHttpRequestBuilder *)takeFromBuilder:(CDSSLKtor_client_coreHttpRequestBuilder *)builder __attribute__((swift_name("takeFrom(builder:)")));
- (CDSSLKtor_client_coreHttpRequestBuilder *)takeFromWithExecutionContextBuilder:(CDSSLKtor_client_coreHttpRequestBuilder *)builder __attribute__((swift_name("takeFromWithExecutionContext(builder:)")));
- (void)urlBlock:(void (^)(CDSSLKtor_httpURLBuilder *, CDSSLKtor_httpURLBuilder *))block __attribute__((swift_name("url(block:)")));
@property (readonly) id<CDSSLKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property id body __attribute__((swift_name("body")));
@property CDSSLKtor_utilsTypeInfo * _Nullable bodyType __attribute__((swift_name("bodyType")));
@property (readonly) id<CDSSLKotlinx_coroutines_coreJob> executionContext __attribute__((swift_name("executionContext")));
@property (readonly) CDSSLKtor_httpHeadersBuilder *headers __attribute__((swift_name("headers")));
@property CDSSLKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) CDSSLKtor_httpURLBuilder *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponsePipeline.Phases")))
@interface CDSSLKtor_client_coreHttpResponsePipelinePhases : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_client_coreHttpResponsePipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *After __attribute__((swift_name("After")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Parse __attribute__((swift_name("Parse")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Transform __attribute__((swift_name("Transform")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpResponseContainer")))
@interface CDSSLKtor_client_coreHttpResponseContainer : CDSSLBase
- (instancetype)initWithExpectedType:(CDSSLKtor_utilsTypeInfo *)expectedType response:(id)response __attribute__((swift_name("init(expectedType:response:)"))) __attribute__((objc_designated_initializer));
- (CDSSLKtor_client_coreHttpResponseContainer *)doCopyExpectedType:(CDSSLKtor_utilsTypeInfo *)expectedType response:(id)response __attribute__((swift_name("doCopy(expectedType:response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLKtor_utilsTypeInfo *expectedType __attribute__((swift_name("expectedType")));
@property (readonly) id response __attribute__((swift_name("response")));
@end

__attribute__((swift_name("Ktor_client_coreHttpClientCall")))
@interface CDSSLKtor_client_coreHttpClientCall : CDSSLBase <CDSSLKotlinx_coroutines_coreCoroutineScope>
- (instancetype)initWithClient:(CDSSLKtor_client_coreHttpClient *)client __attribute__((swift_name("init(client:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithClient:(CDSSLKtor_client_coreHttpClient *)client requestData:(CDSSLKtor_client_coreHttpRequestData *)requestData responseData:(CDSSLKtor_client_coreHttpResponseData *)responseData __attribute__((swift_name("init(client:requestData:responseData:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKtor_client_coreHttpClientCallCompanion *companion __attribute__((swift_name("companion")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyInfo:(CDSSLKtor_utilsTypeInfo *)info completionHandler:(void (^)(id _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("body(info:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)bodyNullableInfo:(CDSSLKtor_utilsTypeInfo *)info completionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("bodyNullable(info:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)getResponseContentWithCompletionHandler:(void (^)(id<CDSSLKtor_ioByteReadChannel> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getResponseContent(completionHandler:)")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) BOOL allowDoubleReceive __attribute__((swift_name("allowDoubleReceive")));
@property (readonly) id<CDSSLKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) CDSSLKtor_client_coreHttpClient *client __attribute__((swift_name("client")));
@property (readonly) id<CDSSLKotlinCoroutineContext> coroutineContext __attribute__((swift_name("coroutineContext")));
@property id<CDSSLKtor_client_coreHttpRequest> request __attribute__((swift_name("request")));
@property CDSSLKtor_client_coreHttpResponse *response __attribute__((swift_name("response")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpSendPipeline.Phases")))
@interface CDSSLKtor_client_coreHttpSendPipelinePhases : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)phases __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_client_coreHttpSendPipelinePhases *shared __attribute__((swift_name("shared")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Before __attribute__((swift_name("Before")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Engine __attribute__((swift_name("Engine")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Monitoring __attribute__((swift_name("Monitoring")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *Receive __attribute__((swift_name("Receive")));
@property (readonly) CDSSLKtor_utilsPipelinePhase *State __attribute__((swift_name("State")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_serialization_jsonJsonElement.Companion")))
@interface CDSSLKotlinx_serialization_jsonJsonElementCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_serialization_jsonJsonElementCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_serialization_jsonClassDiscriminatorMode")))
@interface CDSSLKotlinx_serialization_jsonClassDiscriminatorMode : CDSSLKotlinEnum<CDSSLKotlinx_serialization_jsonClassDiscriminatorMode *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) CDSSLKotlinx_serialization_jsonClassDiscriminatorMode *none __attribute__((swift_name("none")));
@property (class, readonly) CDSSLKotlinx_serialization_jsonClassDiscriminatorMode *allJsonObjects __attribute__((swift_name("allJsonObjects")));
@property (class, readonly) CDSSLKotlinx_serialization_jsonClassDiscriminatorMode *polymorphic __attribute__((swift_name("polymorphic")));
+ (CDSSLKotlinArray<CDSSLKotlinx_serialization_jsonClassDiscriminatorMode *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLKotlinx_serialization_jsonClassDiscriminatorMode *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.ExperimentalSerializationApi
*/
__attribute__((swift_name("Kotlinx_serialization_jsonJsonNamingStrategy")))
@protocol CDSSLKotlinx_serialization_jsonJsonNamingStrategy
@required
- (NSString *)serialNameForJsonDescriptor:(id<CDSSLKotlinx_serialization_coreSerialDescriptor>)descriptor elementIndex:(int32_t)elementIndex serialName:(NSString *)serialName __attribute__((swift_name("serialNameForJson(descriptor:elementIndex:serialName:)")));
@end

__attribute__((swift_name("KotlinByteIterator")))
@interface CDSSLKotlinByteIterator : CDSSLBase <CDSSLKotlinIterator>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (CDSSLByte *)next __attribute__((swift_name("next()")));
- (int8_t)nextByte __attribute__((swift_name("nextByte()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDataOwnerType")))
@interface CDSSLCardinal_sdkDataOwnerType : CDSSLKotlinEnum<CDSSLCardinal_sdkDataOwnerType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDataOwnerTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkDataOwnerType *hcp __attribute__((swift_name("hcp")));
@property (class, readonly) CDSSLCardinal_sdkDataOwnerType *device __attribute__((swift_name("device")));
@property (class, readonly) CDSSLCardinal_sdkDataOwnerType *patient __attribute__((swift_name("patient")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkDataOwnerType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkDataOwnerType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Cardinal_sdkIdentifiable")))
@protocol CDSSLCardinal_sdkIdentifiable
@required
@property (readonly) id _Nullable id __attribute__((swift_name("id")));
@end

__attribute__((swift_name("Cardinal_sdkVersionable")))
@protocol CDSSLCardinal_sdkVersionable <CDSSLCardinal_sdkIdentifiable>
@required
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@end

__attribute__((swift_name("Cardinal_sdkHasTags")))
@protocol CDSSLCardinal_sdkHasTags
@required
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end

__attribute__((swift_name("Cardinal_sdkCryptoActor")))
@protocol CDSSLCardinal_sdkCryptoActor <CDSSLCardinal_sdkVersionable, CDSSLCardinal_sdkHasTags>
@required
@property (readonly) NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *aesExchangeKeys __attribute__((swift_name("aesExchangeKeys")));
@property (readonly) NSDictionary<NSString *, NSArray<id> *> *hcPartyKeys __attribute__((swift_name("hcPartyKeys")));
@property (readonly) NSDictionary<NSString *, id> *privateKeyShamirPartitions __attribute__((swift_name("privateKeyShamirPartitions")));
@property (readonly) id _Nullable publicKey __attribute__((swift_name("publicKey")));
@property (readonly) NSSet<id> *publicKeysForOaepWithSha256 __attribute__((swift_name("publicKeysForOaepWithSha256")));
@property (readonly) NSDictionary<id, NSDictionary<id, id> *> *transferKeys __attribute__((swift_name("transferKeys")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoActorStub")))
@interface CDSSLCardinal_sdkCryptoActorStub : CDSSLBase <CDSSLCardinal_sdkVersionable, CDSSLCardinal_sdkCryptoActor, CDSSLCardinal_sdkHasTags>
- (instancetype)initWithId:(NSString *)id rev:(NSString *)rev hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags __attribute__((swift_name("init(id:rev:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:tags:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCryptoActorStubCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkCryptoActorStub *)doCopyId:(NSString *)id rev:(NSString *)rev hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags __attribute__((swift_name("doCopy(id:rev:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:tags:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *aesExchangeKeys __attribute__((swift_name("aesExchangeKeys")));
@property (readonly) NSDictionary<NSString *, NSArray<id> *> *hcPartyKeys __attribute__((swift_name("hcPartyKeys")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSDictionary<NSString *, id> *privateKeyShamirPartitions __attribute__((swift_name("privateKeyShamirPartitions")));
@property (readonly) id _Nullable publicKey __attribute__((swift_name("publicKey")));
@property (readonly) NSSet<id> *publicKeysForOaepWithSha256 __attribute__((swift_name("publicKeysForOaepWithSha256")));
@property (readonly) NSString *rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSDictionary<id, NSDictionary<id, id> *> *transferKeys __attribute__((swift_name("transferKeys")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoActorStubWithType.Companion")))
@interface CDSSLCardinal_sdkCryptoActorStubWithTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCryptoActorStubWithTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("Cardinal_sdkAccessLogBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkAccessLogBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAccessLogAccessLog:(id<CDSSLCardinal_sdkAccessLog>)accessLog completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAccessLog(accessLog:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAccessLogByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAccessLogById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAccessLogUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAccessLogUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAccessLogsAccessLogs:(NSArray<id<CDSSLCardinal_sdkAccessLog>> *)accessLogs completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAccessLogs(accessLogs:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAccessLogsByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAccessLogsByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAccessLogsUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAccessLogsUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeAccessLogAccessLog:(id<CDSSLCardinal_sdkAccessLog>)accessLog completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeAccessLog(accessLog:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeAccessLogByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeAccessLogById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkAccessLogBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkAccessLogBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findAccessLogsByFromEpoch:(CDSSLLong * _Nullable)fromEpoch toEpoch:(CDSSLLong * _Nullable)toEpoch startKey:(CDSSLLong * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkAccessLog>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findAccessLogsBy(fromEpoch:toEpoch:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Replaced with filter")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findAccessLogsByUserAfterDateUserId:(NSString *)userId accessType:(NSString * _Nullable)accessType startDate:(CDSSLLong * _Nullable)startDate startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkAccessLog>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findAccessLogsByUserAfterDate(userId:accessType:startDate:startKey:startDocumentId:limit:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findAccessLogsInGroupGroupId:(NSString *)groupId fromEpoch:(CDSSLLong * _Nullable)fromEpoch toEpoch:(CDSSLLong * _Nullable)toEpoch startKey:(CDSSLLong * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkAccessLog>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findAccessLogsInGroup(groupId:fromEpoch:toEpoch:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAccessLogEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkAccessLog> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAccessLog(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAccessLogsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkAccessLog>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAccessLogs(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyAccessLogEntity:(id<CDSSLCardinal_sdkAccessLog>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkAccessLog> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyAccessLog(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteAccessLogAccessLog:(id<CDSSLCardinal_sdkAccessLog>)accessLog completionHandler:(void (^)(id<CDSSLCardinal_sdkAccessLog> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteAccessLog(accessLog:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteAccessLogByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkAccessLog> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteAccessLogById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkAccessLogFlavouredApi")))
@protocol CDSSLCardinal_sdkAccessLogFlavouredApi <CDSSLCardinal_sdkAccessLogBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterAccessLogsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterAccessLogsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterAccessLogsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterAccessLogsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findAccessLogsByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findAccessLogsByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId accessLog:(id<CDSSLCardinal_sdkAccessLog>)accessLog options:(CDSSLCardinal_sdkAccessLogShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkAccessLog> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:accessLog:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyAccessLog:(id<CDSSLCardinal_sdkAccessLog>)accessLog delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLogShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkAccessLog> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(accessLog:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkAccessLogApi")))
@protocol CDSSLCardinal_sdkAccessLogApi <CDSSLCardinal_sdkAccessLogBasicFlavourlessApi, CDSSLCardinal_sdkAccessLogFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAccessLogEntity:(CDSSLCardinal_sdkDecryptedAccessLog *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedAccessLog * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createAccessLog(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkAccessLog>)entity delegates:(NSSet<NSString *> *)delegates completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptAccessLog:(CDSSLCardinal_sdkEncryptedAccessLog *)accessLog completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedAccessLog * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(accessLog:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfAccessLog:(id<CDSSLCardinal_sdkAccessLog>)accessLog completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(accessLog:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfAccessLog:(id<CDSSLCardinal_sdkAccessLog>)accessLog completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(accessLog:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessAccessLog:(id<CDSSLCardinal_sdkAccessLog>)accessLog completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(accessLog:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchAccessLogsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchAccessLogsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchAccessLogsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchAccessLogsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptAccessLog:(CDSSLCardinal_sdkEncryptedAccessLog *)accessLog completionHandler:(void (^)(id<CDSSLCardinal_sdkAccessLog> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(accessLog:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedAccessLog * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient>)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedAccessLog * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler:)")));
@property (readonly) id<CDSSLCardinal_sdkAccessLogFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkAccessLogFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkCalendarItemBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkCalendarItemBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteCalendarItemCalendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteCalendarItem(calendarItem:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteCalendarItemByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteCalendarItemById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteCalendarItemUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteCalendarItemUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteCalendarItemsCalendarItems:(NSArray<id<CDSSLCardinal_sdkCalendarItem>> *)calendarItems completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteCalendarItems(calendarItems:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteCalendarItemsByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteCalendarItemsByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteCalendarItemsUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteCalendarItemsUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeCalendarItemCalendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeCalendarItem(calendarItem:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeCalendarItemByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeCalendarItemById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkCalendarItemBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkCalendarItemBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findCalendarItemsByRecurrenceIdRecurrenceId:(NSString *)recurrenceId startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(int32_t)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkCalendarItem>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findCalendarItemsByRecurrenceId(recurrenceId:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCalendarItemEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkCalendarItem> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCalendarItem(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCalendarItemsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkCalendarItem>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCalendarItems(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCalendarItemsByPeriodAndHcPartyIdStartDate:(int64_t)startDate endDate:(int64_t)endDate hcPartyId:(NSString *)hcPartyId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkCalendarItem>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCalendarItemsByPeriodAndHcPartyId(startDate:endDate:hcPartyId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCalendarsByPeriodAndAgendaIdStartDate:(int64_t)startDate endDate:(int64_t)endDate agendaId:(NSString *)agendaId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkCalendarItem>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCalendarsByPeriodAndAgendaId(startDate:endDate:agendaId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyCalendarItemEntity:(id<CDSSLCardinal_sdkCalendarItem>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkCalendarItem> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyCalendarItem(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteCalendarItemCalendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem completionHandler:(void (^)(id<CDSSLCardinal_sdkCalendarItem> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteCalendarItem(calendarItem:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteCalendarItemByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkCalendarItem> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteCalendarItemById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkCalendarItemFlavouredApi")))
@protocol CDSSLCardinal_sdkCalendarItemFlavouredApi <CDSSLCardinal_sdkCalendarItemBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterCalendarItemsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterCalendarItemsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterCalendarItemsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterCalendarItemsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findCalendarItemsByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findCalendarItemsByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)linkToPatientCalendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem patient:(id<CDSSLCardinal_sdkPatient>)patient shareLinkWithDelegates:(NSSet<NSString *> *)shareLinkWithDelegates completionHandler:(void (^)(id<CDSSLCardinal_sdkCalendarItem> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("linkToPatient(calendarItem:patient:shareLinkWithDelegates:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId calendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem options:(CDSSLCardinal_sdkCalendarItemShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkCalendarItem> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:calendarItem:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyCalendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkCalendarItemShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkCalendarItem> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(calendarItem:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkSubscribable")))
@protocol CDSSLCardinal_sdkSubscribable
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeToEventsEvents:(NSSet<CDSSLCardinal_sdkSubscriptionEventType *> *)events filter:(id<CDSSLCardinal_sdkFilterOptions>)filter subscriptionConfig:(CDSSLCardinal_sdkEntitySubscriptionConfiguration * _Nullable)subscriptionConfig completionHandler:(void (^)(id<CDSSLCardinal_sdkEntitySubscription> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeToEvents(events:filter:subscriptionConfig:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkCalendarItemApi")))
@protocol CDSSLCardinal_sdkCalendarItemApi <CDSSLCardinal_sdkCalendarItemBasicFlavourlessApi, CDSSLCardinal_sdkCalendarItemFlavouredApi, CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createCalendarItemEntity:(CDSSLCardinal_sdkDecryptedCalendarItem *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedCalendarItem * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createCalendarItem(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkCalendarItem>)entity delegates:(NSSet<NSString *> *)delegates completionHandler_:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler_:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptCalendarItem:(CDSSLCardinal_sdkEncryptedCalendarItem *)calendarItem completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedCalendarItem * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(calendarItem:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfCalendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(calendarItem:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfCalendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(calendarItem:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessCalendarItem:(id<CDSSLCardinal_sdkCalendarItem>)calendarItem completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(calendarItem:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchCalendarItemsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchCalendarItemsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchCalendarItemsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchCalendarItemsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptCalendarItem:(CDSSLCardinal_sdkEncryptedCalendarItem *)calendarItem completionHandler:(void (^)(id<CDSSLCardinal_sdkCalendarItem> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(calendarItem:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedCalendarItem * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient>)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler_:(void (^)(CDSSLCardinal_sdkDecryptedCalendarItem * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler_:)")));
@property (readonly) id<CDSSLCardinal_sdkCalendarItemFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkCalendarItemFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkCardinalMaintenanceTaskApi")))
@protocol CDSSLCardinal_sdkCardinalMaintenanceTaskApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)applyKeyPairUpdateUpdateRequest:(CDSSLCardinal_sdkKeyPairUpdateNotification *)updateRequest completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("applyKeyPairUpdate(updateRequest:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createKeyPairUpdateNotificationToDataOwnerId:(NSString *)dataOwnerId key:(id)key completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createKeyPairUpdateNotificationTo(dataOwnerId:key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createKeyPairUpdateNotificationsToAllDelegationCounterpartsKey:(id)key requestToOwnerTypes:(NSSet<CDSSLCardinal_sdkDataOwnerType *> * _Nullable)requestToOwnerTypes completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createKeyPairUpdateNotificationsToAllDelegationCounterparts(key:requestToOwnerTypes:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkClassificationBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkClassificationBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteClassificationEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteClassification(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteClassificationsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteClassifications(entityIds:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkClassificationBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkClassificationBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getClassificationEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkClassification> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getClassification(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getClassificationsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkClassification>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getClassifications(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyClassificationEntity:(id<CDSSLCardinal_sdkClassification>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkClassification> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyClassification(entity:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkClassificationFlavouredApi")))
@protocol CDSSLCardinal_sdkClassificationFlavouredApi <CDSSLCardinal_sdkClassificationBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterClassificationsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterClassificationsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterClassificationsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterClassificationsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findClassificationsByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findClassificationsByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId classification:(id<CDSSLCardinal_sdkClassification>)classification options:(CDSSLCardinal_sdkClassificationShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkClassification> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:classification:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyClassification:(id<CDSSLCardinal_sdkClassification>)classification delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkClassificationShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkClassification> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(classification:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkClassificationApi")))
@protocol CDSSLCardinal_sdkClassificationApi <CDSSLCardinal_sdkClassificationBasicFlavourlessApi, CDSSLCardinal_sdkClassificationFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createClassificationEntity:(CDSSLCardinal_sdkDecryptedClassification *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedClassification * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createClassification(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkClassification>)entity delegates:(NSSet<NSString *> *)delegates completionHandler__:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler__:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptClassification:(CDSSLCardinal_sdkEncryptedClassification *)classification completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedClassification * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(classification:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfClassification:(id<CDSSLCardinal_sdkClassification>)classification completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(classification:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfClassification:(id<CDSSLCardinal_sdkClassification>)classification completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(classification:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessClassification:(id<CDSSLCardinal_sdkClassification>)classification completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(classification:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchClassificationsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchClassificationsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchClassificationsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchClassificationsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptClassification:(CDSSLCardinal_sdkEncryptedClassification *)classification completionHandler:(void (^)(id<CDSSLCardinal_sdkClassification> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(classification:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedClassification * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient>)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler__:(void (^)(CDSSLCardinal_sdkDecryptedClassification * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler__:)")));
@property (readonly) id<CDSSLCardinal_sdkClassificationFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkClassificationFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkContactBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkContactBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteContactContact:(id<CDSSLCardinal_sdkContact>)contact completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteContact(contact:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteContactByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteContactById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteContactUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteContactUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteContactsContacts:(NSArray<id<CDSSLCardinal_sdkContact>> *)contacts completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteContacts(contacts:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteContactsByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteContactsByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteContactsUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteContactsUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findContactsDelegationsStubsByHcPartyPatientForeignKeysHcPartyId:(NSString *)hcPartyId secretPatientKeys:(NSArray<NSString *> *)secretPatientKeys completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIcureStub *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findContactsDelegationsStubsByHcPartyPatientForeignKeys(hcPartyId:secretPatientKeys:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getServiceCodesOccurrencesCodeType:(NSString *)codeType minOccurrences:(int64_t)minOccurrences completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkLabelledOccurence *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getServiceCodesOccurrences(codeType:minOccurrences:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeContactContact:(id<CDSSLCardinal_sdkContact>)contact completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeContact(contact:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeContactByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeContactById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkContactBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkContactBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findContactsByOpeningDateStartDate:(int64_t)startDate endDate:(int64_t)endDate hcPartyId:(NSString *)hcPartyId startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkContact>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findContactsByOpeningDate(startDate:endDate:hcPartyId:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getContactEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkContact> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getContact(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getContactsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkContact>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getContacts(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getServiceServiceId:(NSString *)serviceId completionHandler:(void (^)(id<CDSSLCardinal_sdkService> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getService(serviceId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getServicesEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkService>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getServices(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getServicesLinkedToLinkType:(NSString *)linkType ids:(NSArray<NSString *> *)ids completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkService>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getServicesLinkedTo(linkType:ids:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listContactByHCPartyServiceIdHcPartyId:(NSString *)hcPartyId serviceId:(NSString *)serviceId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkContact>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listContactByHCPartyServiceId(hcPartyId:serviceId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listContactsByExternalIdExternalId:(NSString *)externalId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkContact>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listContactsByExternalId(externalId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listContactsByHCPartyAndFormIdHcPartyId:(NSString *)hcPartyId formId:(NSString *)formId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkContact>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listContactsByHCPartyAndFormId(hcPartyId:formId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listContactsByHCPartyAndFormIdsHcPartyId:(NSString *)hcPartyId formIds:(NSArray<NSString *> *)formIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkContact>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listContactsByHCPartyAndFormIds(hcPartyId:formIds:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listContactsByHCPartyAndPatientSecretFKeysHcPartyId:(NSString *)hcPartyId secretPatientKeys:(NSArray<NSString *> *)secretPatientKeys planOfActionsIds:(NSString * _Nullable)planOfActionsIds skipClosedContacts:(CDSSLBoolean * _Nullable)skipClosedContacts completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkContact>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listContactsByHCPartyAndPatientSecretFKeys(hcPartyId:secretPatientKeys:planOfActionsIds:skipClosedContacts:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listServicesByAssociationIdAssociationId:(NSString *)associationId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkService>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listServicesByAssociationId(associationId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listServicesByHealthElementIdHcPartyId:(NSString *)hcPartyId healthElementId:(NSString *)healthElementId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkService>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listServicesByHealthElementId(hcPartyId:healthElementId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyContactEntity:(id<CDSSLCardinal_sdkContact>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkContact> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyContact(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyContactsEntities:(NSArray<id<CDSSLCardinal_sdkContact>> *)entities completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkContact>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyContacts(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteContactContact:(id<CDSSLCardinal_sdkContact>)contact completionHandler:(void (^)(id<CDSSLCardinal_sdkContact> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteContact(contact:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteContactByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkContact> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteContactById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkContactFlavouredApi")))
@protocol CDSSLCardinal_sdkContactFlavouredApi <CDSSLCardinal_sdkContactBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterContactsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterContactsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterContactsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterContactsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterServicesByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterServicesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterServicesBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterServicesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findContactsByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findContactsByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId contact:(id<CDSSLCardinal_sdkContact>)contact options:(CDSSLCardinal_sdkContactShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkContact> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:contact:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyContact:(id<CDSSLCardinal_sdkContact>)contact delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkContactShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkContact> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(contact:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkContactApi")))
@protocol CDSSLCardinal_sdkContactApi <CDSSLCardinal_sdkContactBasicFlavourlessApi, CDSSLCardinal_sdkContactFlavouredApi, CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createContactEntity:(CDSSLCardinal_sdkDecryptedContact *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedContact * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createContact(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createContactsEntities:(NSArray<CDSSLCardinal_sdkDecryptedContact *> *)entities completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDecryptedContact *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createContacts(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkContact>)entity delegates:(NSSet<NSString *> *)delegates completionHandler___:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler___:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptContact:(CDSSLCardinal_sdkEncryptedContact *)contact completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedContact * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(contact:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfContact:(id<CDSSLCardinal_sdkContact>)contact completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(contact:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptServiceService:(CDSSLCardinal_sdkEncryptedService *)service completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedService * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptService(service:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfContact:(id<CDSSLCardinal_sdkContact>)contact completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(contact:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessContact:(id<CDSSLCardinal_sdkContact>)contact completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(contact:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchContactsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchContactsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchContactsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchContactsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchServicesByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchServicesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchServicesBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchServicesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)subscribeToServiceCreateOrUpdateEventsFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter subscriptionConfig:(CDSSLCardinal_sdkEntitySubscriptionConfiguration * _Nullable)subscriptionConfig completionHandler:(void (^)(id<CDSSLCardinal_sdkEntitySubscription> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("subscribeToServiceCreateOrUpdateEvents(filter:subscriptionConfig:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptContact:(CDSSLCardinal_sdkEncryptedContact *)contact completionHandler:(void (^)(id<CDSSLCardinal_sdkContact> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(contact:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptServiceService:(CDSSLCardinal_sdkEncryptedService *)service completionHandler:(void (^)(id<CDSSLCardinal_sdkService> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecryptService(service:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedContact * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient>)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler___:(void (^)(CDSSLCardinal_sdkDecryptedContact * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler___:)")));
@property (readonly) id<CDSSLCardinal_sdkContactFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkContactFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkCryptoApi")))
@protocol CDSSLCardinal_sdkCryptoApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)currentDataOwnerKeysFilterTrustedKeys:(BOOL)filterTrustedKeys completionHandler:(void (^)(NSDictionary<NSString *, NSDictionary<id, CDSSLKotlinByteArray *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("currentDataOwnerKeys(filterTrustedKeys:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)forceReloadWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("forceReload(completionHandler:)")));
@property (readonly) id<CDSSLCardinal_sdkShamirKeysManagerApi> shamirKeysManager __attribute__((swift_name("shamirKeysManager")));
@end

__attribute__((swift_name("Cardinal_sdkDataOwnerApi")))
@protocol CDSSLCardinal_sdkDataOwnerApi
@required
- (void)clearCurrentDataOwnerIdsCache __attribute__((swift_name("clearCurrentDataOwnerIdsCache()")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCryptoActorStubOwnerId:(NSString *)ownerId completionHandler:(void (^)(CDSSLCardinal_sdkCryptoActorStubWithType * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCryptoActorStub(ownerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentDataOwnerWithCompletionHandler:(void (^)(id<CDSSLCardinal_sdkDataOwnerWithType> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentDataOwner(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentDataOwnerHierarchyWithCompletionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkDataOwnerWithType>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentDataOwnerHierarchy(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentDataOwnerHierarchyIdsWithCompletionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentDataOwnerHierarchyIds(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentDataOwnerHierarchyIdsFromParentId:(NSString *)parentId completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentDataOwnerHierarchyIdsFrom(parentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentDataOwnerIdWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentDataOwnerId(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentDataOwnerStubWithCompletionHandler:(void (^)(CDSSLCardinal_sdkCryptoActorStubWithType * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentDataOwnerStub(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentDataOwnerTypeWithCompletionHandler:(void (^)(CDSSLCardinal_sdkDataOwnerType * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentDataOwnerType(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDataOwnerOwnerId:(NSString *)ownerId completionHandler:(void (^)(id<CDSSLCardinal_sdkDataOwnerWithType> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDataOwner(ownerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyDataOwnerStubCryptoActorStubWithTypeDto:(CDSSLCardinal_sdkCryptoActorStubWithType *)cryptoActorStubWithTypeDto completionHandler:(void (^)(CDSSLCardinal_sdkCryptoActorStubWithType * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyDataOwnerStub(cryptoActorStubWithTypeDto:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkDocumentBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkDocumentBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDocumentDocument:(id<CDSSLCardinal_sdkDocument>)document completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDocument(document:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDocumentByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDocumentById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDocumentUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDocumentUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDocumentsDocuments:(NSArray<id<CDSSLCardinal_sdkDocument>> *)documents completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDocuments(documents:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDocumentsByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDocumentsByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDocumentsUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDocumentsUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMainAttachmentEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMainAttachment(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteSecondaryAttachmentDocumentId:(NSString *)documentId key:(NSString *)key rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteSecondaryAttachment(documentId:key:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMainAttachmentAsJsonDocumentId:(NSString *)documentId completionHandler:(void (^)(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMainAttachmentAsJson(documentId:completionHandler:)"))) __attribute__((deprecated("You should just use getRawMainAttachment and parse the json yourself")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMainAttachmentAsPlainTextDocumentId:(NSString *)documentId completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMainAttachmentAsPlainText(documentId:completionHandler:)"))) __attribute__((deprecated("You should just use getRawMainAttachment and decode the string yourself")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRawMainAttachmentDocumentId:(NSString *)documentId completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getRawMainAttachment(documentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRawSecondaryAttachmentDocumentId:(NSString *)documentId key:(NSString *)key completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getRawSecondaryAttachment(documentId:key:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeDocumentDocument:(id<CDSSLCardinal_sdkDocument>)document completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeDocument(document:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeDocumentByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeDocumentById(id:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setRawMainAttachmentDocumentId:(NSString *)documentId rev:(NSString *)rev utis:(NSArray<NSString *> * _Nullable)utis attachment:(CDSSLKotlinByteArray *)attachment encrypted:(BOOL)encrypted completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setRawMainAttachment(documentId:rev:utis:attachment:encrypted:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setRawSecondaryAttachmentDocumentId:(NSString *)documentId key:(NSString *)key rev:(NSString *)rev utis:(NSArray<NSString *> * _Nullable)utis attachment:(CDSSLKotlinByteArray *)attachment encrypted:(BOOL)encrypted completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setRawSecondaryAttachment(documentId:key:rev:utis:attachment:encrypted:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkDocumentBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkDocumentBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findWithoutDelegationLimit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkDocument>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findWithoutDelegation(limit:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDocumentEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkDocument> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDocument(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDocumentByExternalUuidExternalUuid:(NSString *)externalUuid completionHandler:(void (^)(id<CDSSLCardinal_sdkDocument> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDocumentByExternalUuid(externalUuid:completionHandler:)"))) __attribute__((deprecated("Use filter instead (then you can get the first result in case of multiple matches)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDocumentsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkDocument>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDocuments(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDocumentsByExternalUuidExternalUuid:(NSString *)externalUuid completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkDocument>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDocumentsByExternalUuid(externalUuid:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listDocumentsByHcPartyMessageForeignKeysHcPartyId:(NSString *)hcPartyId documentTypeCode:(NSString * _Nullable)documentTypeCode secretMessageKeys:(NSArray<NSString *> *)secretMessageKeys completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkDocument>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listDocumentsByHcPartyMessageForeignKeys(hcPartyId:documentTypeCode:secretMessageKeys:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyDocumentEntity:(id<CDSSLCardinal_sdkDocument>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkDocument> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyDocument(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyDocumentsEntities:(NSArray<id<CDSSLCardinal_sdkDocument>> *)entities completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkDocument>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyDocuments(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteDocumentDocument:(id<CDSSLCardinal_sdkDocument>)document completionHandler:(void (^)(id<CDSSLCardinal_sdkDocument> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteDocument(document:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteDocumentByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkDocument> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteDocumentById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkDocumentFlavouredApi")))
@protocol CDSSLCardinal_sdkDocumentFlavouredApi <CDSSLCardinal_sdkDocumentBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterDocumentsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterDocumentsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterDocumentsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterDocumentsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findDocumentsByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findDocumentsByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId document:(id<CDSSLCardinal_sdkDocument>)document options:(CDSSLCardinal_sdkDocumentShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkDocument> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:document:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyDocument:(id<CDSSLCardinal_sdkDocument>)document delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkDocumentShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkDocument> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(document:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkDocumentApi")))
@protocol CDSSLCardinal_sdkDocumentApi <CDSSLCardinal_sdkDocumentBasicFlavourlessApi, CDSSLCardinal_sdkDocumentFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkDocument>)entity delegates:(NSSet<NSString *> *)delegates completionHandler____:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler____:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDocumentEntity:(CDSSLCardinal_sdkDecryptedDocument *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createDocument(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptDocument:(CDSSLCardinal_sdkEncryptedDocument *)document completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(document:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfDocument:(id<CDSSLCardinal_sdkDocument>)document completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(document:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)encryptAndSetMainAttachmentDocument:(id<CDSSLCardinal_sdkDocument>)document utis:(NSArray<NSString *> * _Nullable)utis attachment:(CDSSLKotlinByteArray *)attachment completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("encryptAndSetMainAttachment(document:utis:attachment:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)encryptAndSetSecondaryAttachmentDocument:(id<CDSSLCardinal_sdkDocument>)document key:(NSString *)key utis:(NSArray<NSString *> * _Nullable)utis attachment:(CDSSLKotlinByteArray *)attachment completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("encryptAndSetSecondaryAttachment(document:key:utis:attachment:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAndDecryptMainAttachmentDocument:(id<CDSSLCardinal_sdkDocument>)document decryptedAttachmentValidator:(id<CDSSLKotlinSuspendFunction1> _Nullable)decryptedAttachmentValidator completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAndDecryptMainAttachment(document:decryptedAttachmentValidator:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAndDecryptSecondaryAttachmentDocument:(id<CDSSLCardinal_sdkDocument>)document key:(NSString *)key decryptedAttachmentValidator:(id<CDSSLKotlinSuspendFunction1> _Nullable)decryptedAttachmentValidator completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAndDecryptSecondaryAttachment(document:key:decryptedAttachmentValidator:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAndTryDecryptMainAttachmentDocument:(id<CDSSLCardinal_sdkDocument>)document decryptedAttachmentValidator:(id<CDSSLKotlinSuspendFunction1> _Nullable)decryptedAttachmentValidator completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getAndTryDecryptMainAttachment(document:decryptedAttachmentValidator:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAndTryDecryptMainAttachmentAsJsonDocument:(id<CDSSLCardinal_sdkDocument>)document decryptedAttachmentValidator:(id<CDSSLKotlinSuspendFunction1> _Nullable)decryptedAttachmentValidator completionHandler:(void (^)(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getAndTryDecryptMainAttachmentAsJson(document:decryptedAttachmentValidator:completionHandler:)"))) __attribute__((deprecated("You should just use getAndTryDecryptMainAttachment and parse the json yourself")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAndTryDecryptMainAttachmentAsPlainTextDocument:(id<CDSSLCardinal_sdkDocument>)document decryptedAttachmentValidator:(id<CDSSLKotlinSuspendFunction1> _Nullable)decryptedAttachmentValidator completionHandler:(void (^)(NSString * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getAndTryDecryptMainAttachmentAsPlainText(document:decryptedAttachmentValidator:completionHandler:)"))) __attribute__((deprecated("You should just use getAndTryDecryptMainAttachment and decode the string yourself")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfDocument:(id<CDSSLCardinal_sdkDocument>)document completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(document:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessDocument:(id<CDSSLCardinal_sdkDocument>)document completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(document:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchDocumentsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchDocumentsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchDocumentsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchDocumentsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptDocument:(CDSSLCardinal_sdkEncryptedDocument *)document completionHandler:(void (^)(id<CDSSLCardinal_sdkDocument> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(document:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptAttachmentDocument:(id<CDSSLCardinal_sdkDocument>)document encryptedAttachment:(CDSSLKotlinByteArray *)encryptedAttachment decryptedAttachmentValidator:(id<CDSSLKotlinSuspendFunction1> _Nullable)decryptedAttachmentValidator completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecryptAttachment(document:encryptedAttachment:decryptedAttachmentValidator:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedDocument * _Nullable)base message:(id<CDSSLCardinal_sdkMessage> _Nullable)message user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:message:user:delegates:secretId:completionHandler:)")));
@property (readonly) id<CDSSLCardinal_sdkDocumentFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkDocumentFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkFormBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkFormBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createFormTemplateFormTemplate:(CDSSLCardinal_sdkFormTemplate *)formTemplate completionHandler:(void (^)(CDSSLCardinal_sdkFormTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createFormTemplate(formTemplate:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteFormForm:(id<CDSSLCardinal_sdkForm>)form completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteForm(form:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteFormByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteFormById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteFormTemplateFormTemplateId:(NSString *)formTemplateId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteFormTemplate(formTemplateId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteFormUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteFormUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteFormsForms:(NSArray<id<CDSSLCardinal_sdkForm>> *)forms completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteForms(forms:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteFormsByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteFormsByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteFormsUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteFormsUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFormTemplateFormTemplateId:(NSString *)formTemplateId raw:(CDSSLBoolean * _Nullable)raw completionHandler:(void (^)(CDSSLCardinal_sdkFormTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFormTemplate(formTemplateId:raw:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFormTemplatesLoadLayout:(CDSSLBoolean * _Nullable)loadLayout raw:(CDSSLBoolean * _Nullable)raw completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkFormTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFormTemplates(loadLayout:raw:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFormTemplatesByGuidFormTemplateGuid:(NSString *)formTemplateGuid specialityCode:(NSString *)specialityCode raw:(CDSSLBoolean * _Nullable)raw completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkFormTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFormTemplatesByGuid(formTemplateGuid:specialityCode:raw:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listFormTemplatesBySpecialitySpecialityCode:(NSString *)specialityCode raw:(CDSSLBoolean * _Nullable)raw completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkFormTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listFormTemplatesBySpeciality(specialityCode:raw:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeFormForm:(id<CDSSLCardinal_sdkForm>)form completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeForm(form:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeFormByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeFormById(id:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setTemplateAttachmentFormTemplateId:(NSString *)formTemplateId payload:(CDSSLKotlinByteArray *)payload completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setTemplateAttachment(formTemplateId:payload:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateFormTemplateFormTemplate:(CDSSLCardinal_sdkFormTemplate *)formTemplate completionHandler:(void (^)(CDSSLCardinal_sdkFormTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateFormTemplate(formTemplate:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkFormBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkFormBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getChildrenFormsHcPartyId:(NSString *)hcPartyId parentId:(NSString *)parentId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkForm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getChildrenForms(hcPartyId:parentId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFormEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getForm(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFormsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkForm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getForms(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFormsByLogicalUuidLogicalUuid:(NSString *)logicalUuid completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkForm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFormsByLogicalUuid(logicalUuid:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFormsByUniqueIdUniqueId:(NSString *)uniqueId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkForm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFormsByUniqueId(uniqueId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLatestFormByLogicalUuidLogicalUuid:(NSString *)logicalUuid completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getLatestFormByLogicalUuid(logicalUuid:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLatestFormByUniqueIdUniqueId:(NSString *)uniqueId completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getLatestFormByUniqueId(uniqueId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listFormsByHCPartyAndPatientForeignKeysHcPartyId:(NSString *)hcPartyId secretFKeys:(NSString *)secretFKeys healthElementId:(NSString * _Nullable)healthElementId planOfActionId:(NSString * _Nullable)planOfActionId formTemplateId:(NSString * _Nullable)formTemplateId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkForm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listFormsByHCPartyAndPatientForeignKeys(hcPartyId:secretFKeys:healthElementId:planOfActionId:formTemplateId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyFormEntity:(id<CDSSLCardinal_sdkForm>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyForm(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyFormsEntities:(NSArray<id<CDSSLCardinal_sdkForm>> *)entities completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkForm>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyForms(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteFormForm:(id<CDSSLCardinal_sdkForm>)form completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteForm(form:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteFormByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteFormById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkFormFlavouredApi")))
@protocol CDSSLCardinal_sdkFormFlavouredApi <CDSSLCardinal_sdkFormBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterFormsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterFormsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterFormsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterFormsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findFormsByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findFormsByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId form:(id<CDSSLCardinal_sdkForm>)form options:(CDSSLCardinal_sdkFormShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:form:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyForm:(id<CDSSLCardinal_sdkForm>)form delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkFormShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(form:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkFormApi")))
@protocol CDSSLCardinal_sdkFormApi <CDSSLCardinal_sdkFormBasicFlavourlessApi, CDSSLCardinal_sdkFormFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkForm>)entity delegates:(NSSet<NSString *> *)delegates completionHandler_____:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler_____:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createFormEntity:(CDSSLCardinal_sdkDecryptedForm *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedForm * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createForm(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createFormsEntities:(NSArray<CDSSLCardinal_sdkDecryptedForm *> *)entities completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDecryptedForm *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createForms(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptForm:(CDSSLCardinal_sdkEncryptedForm *)form completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedForm * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(form:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfForm:(id<CDSSLCardinal_sdkForm>)form completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(form:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfForm:(id<CDSSLCardinal_sdkForm>)form completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(form:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessForm:(id<CDSSLCardinal_sdkForm>)form completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(form:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchFormsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchFormsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchFormsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchFormsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptForm:(CDSSLCardinal_sdkEncryptedForm *)form completionHandler:(void (^)(id<CDSSLCardinal_sdkForm> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(form:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedForm * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient>)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler____:(void (^)(CDSSLCardinal_sdkDecryptedForm * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler____:)")));
@property (readonly) id<CDSSLCardinal_sdkFormFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkFormFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkHealthElementBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkHealthElementBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthElementHealthElement:(id<CDSSLCardinal_sdkHealthElement>)healthElement completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthElement(healthElement:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthElementByIdEntityId:(NSString *)entityId rev:(NSString * _Nullable)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthElementById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthElementUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthElementUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthElementsHealthElements:(NSArray<id<CDSSLCardinal_sdkHealthElement>> *)healthElements completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthElements(healthElements:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthElementsByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthElementsByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthElementsUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthElementsUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findHealthElementsDelegationsStubsByHcPartyPatientForeignKeysHcPartyId:(NSString *)hcPartyId secretPatientKeys:(NSArray<NSString *> *)secretPatientKeys completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIcureStub *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findHealthElementsDelegationsStubsByHcPartyPatientForeignKeys(hcPartyId:secretPatientKeys:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeHealthElementHealthElement:(id<CDSSLCardinal_sdkHealthElement>)healthElement completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeHealthElement(healthElement:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeHealthElementByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeHealthElementById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkHealthElementBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkHealthElementBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findHealthElementsByHcPartyPatientForeignKeysHcPartyId:(NSString *)hcPartyId secretPatientKeys:(NSArray<NSString *> *)secretPatientKeys completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkHealthElement>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findHealthElementsByHcPartyPatientForeignKeys(hcPartyId:secretPatientKeys:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getHealthElementEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkHealthElement> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getHealthElement(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getHealthElementsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkHealthElement>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getHealthElements(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyHealthElementEntity:(id<CDSSLCardinal_sdkHealthElement>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkHealthElement> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyHealthElement(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyHealthElementsEntities:(NSArray<id<CDSSLCardinal_sdkHealthElement>> *)entities completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkHealthElement>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyHealthElements(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteHealthElementHealthElement:(id<CDSSLCardinal_sdkHealthElement>)healthElement completionHandler:(void (^)(id<CDSSLCardinal_sdkHealthElement> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteHealthElement(healthElement:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteHealthElementByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkHealthElement> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteHealthElementById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkHealthElementFlavouredApi")))
@protocol CDSSLCardinal_sdkHealthElementFlavouredApi <CDSSLCardinal_sdkHealthElementBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterHealthElementsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterHealthElementsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterHealthElementsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterHealthElementsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findHealthElementsByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findHealthElementsByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId healthElement:(id<CDSSLCardinal_sdkHealthElement>)healthElement options:(CDSSLCardinal_sdkHealthElementShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkHealthElement> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:healthElement:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyHealthElement:(id<CDSSLCardinal_sdkHealthElement>)healthElement delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkHealthElementShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkHealthElement> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(healthElement:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkHealthElementApi")))
@protocol CDSSLCardinal_sdkHealthElementApi <CDSSLCardinal_sdkHealthElementBasicFlavourlessApi, CDSSLCardinal_sdkHealthElementFlavouredApi, CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkHealthElement>)entity delegates:(NSSet<NSString *> *)delegates completionHandler______:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler______:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createHealthElementEntity:(CDSSLCardinal_sdkDecryptedHealthElement *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedHealthElement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createHealthElement(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createHealthElementsEntities:(NSArray<CDSSLCardinal_sdkDecryptedHealthElement *> *)entities completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDecryptedHealthElement *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createHealthElements(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptHealthElement:(CDSSLCardinal_sdkEncryptedHealthElement *)healthElement completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedHealthElement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(healthElement:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfHealthElement:(id<CDSSLCardinal_sdkHealthElement>)healthElement completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(healthElement:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfHealthElement:(id<CDSSLCardinal_sdkHealthElement>)healthElement completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(healthElement:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessHealthElement:(id<CDSSLCardinal_sdkHealthElement>)healthElement completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(healthElement:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchHealthElementsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchHealthElementsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchHealthElementsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchHealthElementsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptHealthElement:(CDSSLCardinal_sdkEncryptedHealthElement *)healthElement completionHandler:(void (^)(id<CDSSLCardinal_sdkHealthElement> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(healthElement:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedHealthElement * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient>)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler_____:(void (^)(CDSSLCardinal_sdkDecryptedHealthElement * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler_____:)")));
@property (readonly) id<CDSSLCardinal_sdkHealthElementFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkHealthElementFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkInvoiceBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkInvoiceBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteInvoiceEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteInvoice(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findInvoicesDelegationsStubsByHcPartyPatientForeignKeysHcPartyId:(NSString *)hcPartyId secretPatientKeys:(NSArray<NSString *> *)secretPatientKeys completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIcureStub *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findInvoicesDelegationsStubsByHcPartyPatientForeignKeys(hcPartyId:secretPatientKeys:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTarificationsCodesOccurrencesMinOccurrence:(int32_t)minOccurrence completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkLabelledOccurence *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTarificationsCodesOccurrences(minOccurrence:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkInvoiceBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkInvoiceBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)appendCodesUserId:(NSString *)userId type:(NSString *)type sentMediumType:(NSString *)sentMediumType secretFKeys:(NSString *)secretFKeys insuranceId:(NSString * _Nullable)insuranceId invoiceId:(NSString * _Nullable)invoiceId gracePeriod:(CDSSLInt * _Nullable)gracePeriod invoicingCodes:(NSArray<CDSSLCardinal_sdkEncryptedInvoicingCode *> *)invoicingCodes completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("appendCodes(userId:type:sentMediumType:secretFKeys:insuranceId:invoiceId:gracePeriod:invoicingCodes:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findInvoicesByAuthorHcPartyId:(NSString *)hcPartyId fromDate:(CDSSLLong * _Nullable)fromDate toDate:(CDSSLLong * _Nullable)toDate startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findInvoicesByAuthor(hcPartyId:fromDate:toDate:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findInvoicesByHcPartyPatientForeignKeysHcPartyId:(NSString *)hcPartyId secretPatientKeys:(NSArray<NSString *> *)secretPatientKeys completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findInvoicesByHcPartyPatientForeignKeys(hcPartyId:secretPatientKeys:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInvoiceEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkInvoice> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInvoice(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInvoicesEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInvoices(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listAllHcpsByStatusStatus:(NSString *)status from:(CDSSLLong * _Nullable)from to:(CDSSLLong * _Nullable)to hcpIds:(NSArray<NSString *> *)hcpIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listAllHcpsByStatus(status:from:to:hcpIds:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInvoicesByContactIdsContactIds:(NSArray<NSString *> *)contactIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInvoicesByContactIds(contactIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInvoicesByHCPartyAndPatientForeignKeysHcPartyId:(NSString *)hcPartyId secretPatientKeys:(NSArray<NSString *> *)secretPatientKeys completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInvoicesByHCPartyAndPatientForeignKeys(hcPartyId:secretPatientKeys:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInvoicesByHcPartyAndGroupIdHcPartyId:(NSString *)hcPartyId groupId:(NSString *)groupId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInvoicesByHcPartyAndGroupId(hcPartyId:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDateHcPartyId:(NSString *)hcPartyId sentMediumType:(CDSSLCardinal_sdkMediumType *)sentMediumType invoiceType:(CDSSLCardinal_sdkInvoiceType *)invoiceType sent:(BOOL)sent from:(CDSSLLong * _Nullable)from to:(CDSSLLong * _Nullable)to completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInvoicesByHcPartySentMediumTypeInvoiceTypeSentDate(hcPartyId:sentMediumType:invoiceType:sent:from:to:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInvoicesByHcpartySendingModeStatusDateHcPartyId:(NSString *)hcPartyId sendingMode:(NSString *)sendingMode status:(NSString *)status from:(int64_t)from to:(int64_t)to completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInvoicesByHcpartySendingModeStatusDate(hcPartyId:sendingMode:status:from:to:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInvoicesByIdsIds:(NSArray<NSString *> *)ids completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInvoicesByIds(ids:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInvoicesByRecipientsIdsRecipientsIds:(NSArray<NSString *> *)recipientsIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInvoicesByRecipientsIds(recipientsIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInvoicesByServiceIdsServiceIds:(NSArray<NSString *> *)serviceIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInvoicesByServiceIds(serviceIds:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listToInsurancesUserIds:(NSArray<NSString *> *)userIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listToInsurances(userIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listToInsurancesUnsentUserIds:(NSArray<NSString *> *)userIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listToInsurancesUnsent(userIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listToPatientsHcPartyId:(NSString *)hcPartyId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listToPatients(hcPartyId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listToPatientsUnsentHcPartyId:(NSString * _Nullable)hcPartyId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listToPatientsUnsent(hcPartyId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)mergeToInvoiceId:(NSString *)invoiceId ids:(NSArray<NSString *> *)ids completionHandler:(void (^)(id<CDSSLCardinal_sdkInvoice> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("mergeTo(invoiceId:ids:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyInvoiceEntity:(id<CDSSLCardinal_sdkInvoice>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkInvoice> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyInvoice(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyInvoicesEntities:(NSArray<id<CDSSLCardinal_sdkInvoice>> *)entities completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyInvoices(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)reassignInvoiceInvoice:(id<CDSSLCardinal_sdkInvoice>)invoice completionHandler:(void (^)(id<CDSSLCardinal_sdkInvoice> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("reassignInvoice(invoice:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)removeCodesUserId:(NSString *)userId serviceId:(NSString *)serviceId secretFKeys:(NSString *)secretFKeys tarificationIds:(NSArray<NSString *> *)tarificationIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkInvoice>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("removeCodes(userId:serviceId:secretFKeys:tarificationIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)validateInvoiceId:(NSString *)invoiceId scheme:(NSString *)scheme forcedValue:(NSString *)forcedValue completionHandler:(void (^)(id<CDSSLCardinal_sdkInvoice> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("validate(invoiceId:scheme:forcedValue:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkInvoiceFlavouredApi")))
@protocol CDSSLCardinal_sdkInvoiceFlavouredApi <CDSSLCardinal_sdkInvoiceBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findInvoicesByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findInvoicesByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId invoice:(id<CDSSLCardinal_sdkInvoice>)invoice options:(CDSSLCardinal_sdkInvoiceShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkInvoice> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:invoice:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyInvoice:(id<CDSSLCardinal_sdkInvoice>)invoice delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkInvoiceShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkInvoice> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(invoice:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkInvoiceApi")))
@protocol CDSSLCardinal_sdkInvoiceApi <CDSSLCardinal_sdkInvoiceBasicFlavourlessApi, CDSSLCardinal_sdkInvoiceFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkInvoice>)entity delegates:(NSSet<NSString *> *)delegates completionHandler_______:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler_______:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createInvoiceEntity:(CDSSLCardinal_sdkDecryptedInvoice *)entity prefix:(NSString * _Nullable)prefix completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedInvoice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createInvoice(entity:prefix:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createInvoicesEntities:(NSArray<CDSSLCardinal_sdkDecryptedInvoice *> *)entities completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDecryptedInvoice *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createInvoices(entities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptInvoice:(CDSSLCardinal_sdkEncryptedInvoice *)invoice completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedInvoice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(invoice:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfInvoice:(id<CDSSLCardinal_sdkInvoice>)invoice completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(invoice:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfInvoice:(id<CDSSLCardinal_sdkInvoice>)invoice completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(invoice:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessInvoice:(id<CDSSLCardinal_sdkInvoice>)invoice completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(invoice:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptInvoice:(CDSSLCardinal_sdkEncryptedInvoice *)invoice completionHandler:(void (^)(id<CDSSLCardinal_sdkInvoice> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(invoice:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedInvoice * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient> _Nullable)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler______:(void (^)(CDSSLCardinal_sdkDecryptedInvoice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler______:)")));
@property (readonly) id<CDSSLCardinal_sdkInvoiceFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkInvoiceFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkMaintenanceTaskBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkMaintenanceTaskBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMaintenanceTaskMaintenanceTask:(id<CDSSLCardinal_sdkMaintenanceTask>)maintenanceTask completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMaintenanceTask(maintenanceTask:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMaintenanceTaskByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMaintenanceTaskById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMaintenanceTaskUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMaintenanceTaskUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMaintenanceTasksMaintenanceTasks:(NSArray<id<CDSSLCardinal_sdkMaintenanceTask>> *)maintenanceTasks completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMaintenanceTasks(maintenanceTasks:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMaintenanceTasksByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMaintenanceTasksByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMaintenanceTasksUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMaintenanceTasksUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeMaintenanceTaskMaintenanceTask:(id<CDSSLCardinal_sdkMaintenanceTask>)maintenanceTask completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeMaintenanceTask(maintenanceTask:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeMaintenanceTaskByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeMaintenanceTaskById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkMaintenanceTaskBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkMaintenanceTaskBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMaintenanceTaskEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkMaintenanceTask> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMaintenanceTask(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMaintenanceTasksEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMaintenanceTask>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMaintenanceTasks(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyMaintenanceTaskEntity:(id<CDSSLCardinal_sdkMaintenanceTask>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkMaintenanceTask> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyMaintenanceTask(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteMaintenanceTaskMaintenanceTask:(id<CDSSLCardinal_sdkMaintenanceTask>)maintenanceTask completionHandler:(void (^)(id<CDSSLCardinal_sdkMaintenanceTask> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteMaintenanceTask(maintenanceTask:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteMaintenanceTaskByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkMaintenanceTask> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteMaintenanceTaskById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkMaintenanceTaskFlavouredApi")))
@protocol CDSSLCardinal_sdkMaintenanceTaskFlavouredApi <CDSSLCardinal_sdkMaintenanceTaskBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterMaintenanceTasksByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterMaintenanceTasksBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterMaintenanceTasksBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterMaintenanceTasksBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId maintenanceTask:(id<CDSSLCardinal_sdkMaintenanceTask>)maintenanceTask options:(CDSSLCardinal_sdkMaintenanceTaskShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkMaintenanceTask> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:maintenanceTask:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyMaintenanceTask:(id<CDSSLCardinal_sdkMaintenanceTask>)maintenanceTask delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkMaintenanceTaskShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkMaintenanceTask> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(maintenanceTask:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkMaintenanceTaskApi")))
@protocol CDSSLCardinal_sdkMaintenanceTaskApi <CDSSLCardinal_sdkMaintenanceTaskBasicFlavourlessApi, CDSSLCardinal_sdkMaintenanceTaskFlavouredApi, CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkMaintenanceTask>)entity delegates:(NSSet<NSString *> *)delegates completionHandler________:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler________:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createMaintenanceTaskEntity:(CDSSLCardinal_sdkDecryptedMaintenanceTask *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedMaintenanceTask * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createMaintenanceTask(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptMaintenanceTask:(CDSSLCardinal_sdkEncryptedMaintenanceTask *)maintenanceTask completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedMaintenanceTask * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(maintenanceTask:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfMaintenanceTask:(id<CDSSLCardinal_sdkMaintenanceTask>)maintenanceTask completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(maintenanceTask:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfMaintenanceTask:(id<CDSSLCardinal_sdkMaintenanceTask>)maintenanceTask completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(maintenanceTask:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessMaintenanceTask:(id<CDSSLCardinal_sdkMaintenanceTask>)maintenanceTask completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(maintenanceTask:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchMaintenanceTasksByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchMaintenanceTasksBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchMaintenanceTasksBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchMaintenanceTasksBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptMaintenanceTask:(CDSSLCardinal_sdkEncryptedMaintenanceTask *)maintenanceTask completionHandler:(void (^)(id<CDSSLCardinal_sdkMaintenanceTask> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(maintenanceTask:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataMaintenanceTask:(CDSSLCardinal_sdkDecryptedMaintenanceTask * _Nullable)maintenanceTask user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedMaintenanceTask * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(maintenanceTask:user:delegates:completionHandler:)")));
@property (readonly) id<CDSSLCardinal_sdkMaintenanceTaskFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkMaintenanceTaskFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkMessageBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkMessageBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMessageMessage:(id<CDSSLCardinal_sdkMessage>)message completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMessage(message:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMessageByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMessageById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMessageUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMessageUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMessagesMessages:(NSArray<id<CDSSLCardinal_sdkMessage>> *)messages completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMessages(messages:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMessagesByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMessagesByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMessagesUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMessagesUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeMessageMessage:(id<CDSSLCardinal_sdkMessage>)message completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeMessage(message:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeMessageByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeMessageById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkMessageBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkMessageBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findMessagesStartKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findMessages(startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findMessagesByFromAddressFromAddress:(NSString *)fromAddress startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findMessagesByFromAddress(fromAddress:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findMessagesByHCPartyPatientForeignKeysSecretPatientKeys:(NSArray<NSString *> *)secretPatientKeys completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findMessagesByHCPartyPatientForeignKeys(secretPatientKeys:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findMessagesByToAddressToAddress:(NSString *)toAddress startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findMessagesByToAddress(toAddress:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findMessagesByTransportGuidTransportGuid:(NSString *)transportGuid completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findMessagesByTransportGuid(transportGuid:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findMessagesByTransportGuidSentDateTransportGuid:(NSString *)transportGuid from:(int64_t)from to:(int64_t)to startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit hcpId:(NSString * _Nullable)hcpId completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findMessagesByTransportGuidSentDate(transportGuid:from:to:startKey:startDocumentId:limit:hcpId:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getChildrenMessagesMessageId:(NSString *)messageId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getChildrenMessages(messageId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMessageEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkMessage> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMessage(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMessagesEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMessages(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMessagesChildrenMessageIds:(NSArray<NSString *> *)messageIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMessagesChildren(messageIds:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listMessagesByInvoicesInvoiceIds:(NSArray<NSString *> *)invoiceIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listMessagesByInvoices(invoiceIds:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listMessagesByTransportGuidsHcPartyId:(NSString *)hcPartyId transportGuids:(NSArray<NSString *> *)transportGuids completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listMessagesByTransportGuids(hcPartyId:transportGuids:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyMessageEntity:(id<CDSSLCardinal_sdkMessage>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkMessage> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyMessage(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setMessagesReadStatusEntityIds:(NSArray<NSString *> *)entityIds time:(CDSSLLong * _Nullable)time readStatus:(BOOL)readStatus userId:(NSString * _Nullable)userId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setMessagesReadStatus(entityIds:time:readStatus:userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setMessagesStatusBitsEntityIds:(NSArray<NSString *> *)entityIds statusBits:(int32_t)statusBits completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkMessage>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setMessagesStatusBits(entityIds:statusBits:completionHandler:)"))) __attribute__((deprecated("Status bits have unclear meaning, use read status instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteMessageMessage:(id<CDSSLCardinal_sdkMessage>)message completionHandler:(void (^)(id<CDSSLCardinal_sdkMessage> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteMessage(message:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteMessageByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkMessage> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteMessageById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkMessageFlavouredApi")))
@protocol CDSSLCardinal_sdkMessageFlavouredApi <CDSSLCardinal_sdkMessageBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterMessagesByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterMessagesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterMessagesBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterMessagesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findMessagesByHcPartyPatientHcPartyId:(NSString *)hcPartyId patient:(id<CDSSLCardinal_sdkPatient>)patient startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate descending:(CDSSLBoolean * _Nullable)descending completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findMessagesByHcPartyPatient(hcPartyId:patient:startDate:endDate:descending:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId message:(id<CDSSLCardinal_sdkMessage>)message options:(CDSSLCardinal_sdkMessageShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkMessage> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:message:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyMessage:(id<CDSSLCardinal_sdkMessage>)message delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkMessageShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkMessage> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(message:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkMessageApi")))
@protocol CDSSLCardinal_sdkMessageApi <CDSSLCardinal_sdkMessageBasicFlavourlessApi, CDSSLCardinal_sdkMessageFlavouredApi, CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkMessage>)entity delegates:(NSSet<NSString *> *)delegates completionHandler_________:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler_________:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createMessageEntity:(CDSSLCardinal_sdkDecryptedMessage *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedMessage * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createMessage(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createMessageInTopicEntity:(CDSSLCardinal_sdkDecryptedMessage *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedMessage * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createMessageInTopic(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptMessage:(CDSSLCardinal_sdkEncryptedMessage *)message completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedMessage * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(message:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfMessage:(id<CDSSLCardinal_sdkMessage>)message completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(message:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfMessage:(id<CDSSLCardinal_sdkMessage>)message completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(message:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessMessage:(id<CDSSLCardinal_sdkMessage>)message completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(message:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchMessagesByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchMessagesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchMessagesBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchMessagesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptMessage:(CDSSLCardinal_sdkEncryptedMessage *)message completionHandler:(void (^)(id<CDSSLCardinal_sdkMessage> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(message:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedMessage * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient> _Nullable)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler_______:(void (^)(CDSSLCardinal_sdkDecryptedMessage * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler_______:)")));
@property (readonly) id<CDSSLCardinal_sdkMessageFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkMessageFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkPatientBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkPatientBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)countOfPatientsHcPartyId:(NSString *)hcPartyId completionHandler:(void (^)(CDSSLInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("countOfPatients(hcPartyId:completionHandler:)"))) __attribute__((deprecated("This method gives inaccurate results outside of the simples scenarios, use match instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deletePatientPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deletePatient(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deletePatientByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deletePatientById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deletePatientUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deletePatientUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deletePatientsPatients:(NSArray<id<CDSSLCardinal_sdkPatient>> *)patients completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deletePatients(patients:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deletePatientsByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deletePatientsByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deletePatientsUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deletePatientsUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDataOwnersWithAccessToPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(CDSSLCardinal_sdkEntityAccessInformation * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDataOwnersWithAccessTo(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgePatientPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgePatient(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgePatientByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgePatientById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkPatientBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkPatientBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findDeletedPatientsStartDate:(int64_t)startDate endDate:(CDSSLLong * _Nullable)endDate desc:(CDSSLBoolean * _Nullable)desc startKey:(CDSSLLong * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findDeletedPatients(startDate:endDate:desc:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findDuplicatesByNameHcPartyId:(NSString *)hcPartyId startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findDuplicatesByName(hcPartyId:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findDuplicatesBySsinHcPartyId:(NSString *)hcPartyId startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findDuplicatesBySsin(hcPartyId:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findPatientsByHealthcarePartyHcPartyId:(NSString * _Nullable)hcPartyId sortField:(NSString *)sortField startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit sortDirection:(CDSSLCardinal_sdkSortDirection *)sortDirection completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findPatientsByHealthcareParty(hcPartyId:sortField:startKey:startDocumentId:limit:sortDirection:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findPatientsByNameBirthSsinAutoHealthcarePartyId:(NSString * _Nullable)healthcarePartyId filterValue:(NSString *)filterValue startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit sortDirection:(CDSSLCardinal_sdkSortDirection *)sortDirection completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findPatientsByNameBirthSsinAuto(healthcarePartyId:filterValue:startKey:startDocumentId:limit:sortDirection:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findPatientsIdsByHealthcarePartyHcPartyId:(NSString *)hcPartyId startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findPatientsIdsByHealthcareParty(hcPartyId:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findPatientsModifiedAfterDate:(int64_t)date startKey:(CDSSLLong * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findPatientsModifiedAfter(date:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)fuzzySearchFirstName:(NSString *)firstName lastName:(NSString *)lastName dateOfBirth:(CDSSLInt * _Nullable)dateOfBirth completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("fuzzySearch(firstName:lastName:dateOfBirth:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPatientEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPatient(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPatientByExternalIdExternalId:(NSString *)externalId completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPatientByExternalId(externalId:completionHandler:)"))) __attribute__((deprecated("This method has undefined behaviour in case multiple patients have the same external id. You should use the corresponding filter instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPatientByHealthcarePartyAndIdentifierHcPartyId:(NSString *)hcPartyId id:(NSString *)id system:(NSString * _Nullable)system completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPatientByHealthcarePartyAndIdentifier(hcPartyId:id:system:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPatientResolvingMergesPatientId:(NSString *)patientId maxMergeDepth:(CDSSLInt * _Nullable)maxMergeDepth completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPatientResolvingMerges(patientId:maxMergeDepth:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPatientsPatientIds:(NSArray<NSString *> *)patientIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPatients(patientIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listDeletedPatientsByNameFirstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listDeletedPatientsByName(firstName:lastName:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listOfMergesAfterDate:(int64_t)date completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listOfMergesAfter(date:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listPatientsByHcPartyHcPartyId:(NSString *)hcPartyId sortField:(NSString *)sortField startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit sortDirection:(CDSSLCardinal_sdkSortDirection *)sortDirection completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listPatientsByHcParty(hcPartyId:sortField:startKey:startDocumentId:limit:sortDirection:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listPatientsOfHcPartyHcPartyId:(NSString *)hcPartyId sortField:(NSString *)sortField startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit sortDirection:(CDSSLCardinal_sdkSortDirection *)sortDirection completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listPatientsOfHcParty(hcPartyId:sortField:startKey:startDocumentId:limit:sortDirection:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)mergePatientsFrom:(id<CDSSLCardinal_sdkPatient>)from mergedInto:(id<CDSSLCardinal_sdkPatient>)mergedInto completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("mergePatients(from:mergedInto:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyPatientEntity:(id<CDSSLCardinal_sdkPatient>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyPatient(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyPatientsPatientDtos:(NSArray<CDSSLCardinal_sdkEncryptedPatient *> *)patientDtos completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyPatients(patientDtos:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeletePatientPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeletePatient(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeletePatientByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeletePatientById(id:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeletePatientsIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)ids completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkPatient>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeletePatients(ids:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkPatientFlavouredApi")))
@protocol CDSSLCardinal_sdkPatientFlavouredApi <CDSSLCardinal_sdkPatientBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterPatientsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterPatientsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterPatientsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterPatientsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)initializeConfidentialSecretIdPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("initializeConfidentialSecretId(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId patient:(id<CDSSLCardinal_sdkPatient>)patient options:(CDSSLCardinal_sdkPatientShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:patient:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyPatient:(id<CDSSLCardinal_sdkPatient>)patient delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkPatientShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(patient:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkPatientApi")))
@protocol CDSSLCardinal_sdkPatientApi <CDSSLCardinal_sdkPatientBasicFlavourlessApi, CDSSLCardinal_sdkPatientFlavouredApi, CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkPatient>)entity delegates:(NSSet<NSString *> *)delegates completionHandler__________:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler__________:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createPatientPatient:(CDSSLCardinal_sdkDecryptedPatient *)patient completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedPatient * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createPatient(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createPatientsPatientDtos:(NSArray<CDSSLCardinal_sdkDecryptedPatient *> *)patientDtos completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createPatients(patientDtos:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatient:(CDSSLCardinal_sdkEncryptedPatient *)patient completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedPatient * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)ensureEncryptionMetadataForSelfIsInitializedSharingWith:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)sharingWith completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedPatient * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("ensureEncryptionMetadataForSelfIsInitialized(sharingWith:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)forceInitializeExchangeDataToNewlyInvitedPatientPatientId:(NSString *)patientId completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("forceInitializeExchangeDataToNewlyInvitedPatient(patientId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getConfidentialSecretIdsOfPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getConfidentialSecretIdsOf(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPatientIdOfChildDocumentForHcpAndHcpParentsChildDocument:(CDSSLCardinal_sdkEntityWithTypeInfo<id> *)childDocument completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPatientIdOfChildDocumentForHcpAndHcpParents(childDocument:completionHandler:)"))) __attribute__((deprecated("This method combines the getPatientId of a child document (contact, health element, ...) with the getPatientResolvingMerges method. Use the methods individually instead.")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getSecretIdsOfPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getSecretIdsOf(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessPatient:(id<CDSSLCardinal_sdkPatient>)patient completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchPatientsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchPatientsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchPatientsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchPatientsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareAllDataOfPatientPatientId:(NSString *)patientId delegatesWithShareType:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkShareAllPatientDataOptionsTag *> *> *)delegatesWithShareType completionHandler:(void (^)(CDSSLCardinal_sdkShareAllPatientDataOptionsResult * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareAllDataOfPatient(patientId:delegatesWithShareType:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptPatient:(CDSSLCardinal_sdkEncryptedPatient *)patient completionHandler:(void (^)(id<CDSSLCardinal_sdkPatient> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(patient:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedPatient * _Nullable)base user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedPatient * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:user:delegates:completionHandler:)")));
@property (readonly) id<CDSSLCardinal_sdkPatientFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkPatientFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkReceiptBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkReceiptBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteReceiptEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteReceipt(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteReceiptsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteReceipts(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getRawReceiptAttachmentReceiptId:(NSString *)receiptId attachmentId:(NSString *)attachmentId completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getRawReceiptAttachment(receiptId:attachmentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setRawReceiptAttachmentReceiptId:(NSString *)receiptId rev:(NSString *)rev blobType:(NSString *)blobType attachment:(CDSSLKotlinByteArray *)attachment completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedReceipt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setRawReceiptAttachment(receiptId:rev:blobType:attachment:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkReceiptBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkReceiptBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReceiptEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkReceipt> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReceipt(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listByReferenceReference:(NSString *)reference completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkReceipt>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listByReference(reference:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyReceiptEntity:(id<CDSSLCardinal_sdkReceipt>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkReceipt> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyReceipt(entity:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkReceiptFlavouredApi")))
@protocol CDSSLCardinal_sdkReceiptFlavouredApi <CDSSLCardinal_sdkReceiptBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId receipt:(id<CDSSLCardinal_sdkReceipt>)receipt options:(CDSSLCardinal_sdkReceiptShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkReceipt> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:receipt:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyReceipt:(id<CDSSLCardinal_sdkReceipt>)receipt delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkReceiptShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkReceipt> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(receipt:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkReceiptApi")))
@protocol CDSSLCardinal_sdkReceiptApi <CDSSLCardinal_sdkReceiptBasicFlavourlessApi, CDSSLCardinal_sdkReceiptFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkReceipt>)entity delegates:(NSSet<NSString *> *)delegates completionHandler___________:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler___________:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createReceiptEntity:(CDSSLCardinal_sdkDecryptedReceipt *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedReceipt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createReceipt(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptReceipt:(CDSSLCardinal_sdkEncryptedReceipt *)receipt completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedReceipt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(receipt:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfReceipt:(id<CDSSLCardinal_sdkReceipt>)receipt completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(receipt:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)encryptAndSetReceiptAttachmentReceipt:(id<CDSSLCardinal_sdkReceipt>)receipt blobType:(NSString *)blobType attachment:(CDSSLKotlinByteArray *)attachment completionHandler:(void (^)(CDSSLCardinal_sdkEncryptedReceipt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("encryptAndSetReceiptAttachment(receipt:blobType:attachment:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAndDecryptReceiptAttachmentReceipt:(id<CDSSLCardinal_sdkReceipt>)receipt attachmentId:(NSString *)attachmentId completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAndDecryptReceiptAttachment(receipt:attachmentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfReceipt:(id<CDSSLCardinal_sdkReceipt>)receipt completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(receipt:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessReceipt:(id<CDSSLCardinal_sdkReceipt>)receipt completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(receipt:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)logReceiptUser:(CDSSLCardinal_sdkUser *)user docId:(NSString *)docId refs:(NSArray<NSString *> *)refs blobType:(NSString *)blobType blob:(CDSSLKotlinByteArray *)blob completionHandler:(void (^)(id<CDSSLCardinal_sdkReceipt> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("logReceipt(user:docId:refs:blobType:blob:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptReceipt:(CDSSLCardinal_sdkEncryptedReceipt *)receipt completionHandler:(void (^)(id<CDSSLCardinal_sdkReceipt> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(receipt:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedReceipt * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient> _Nullable)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler________:(void (^)(CDSSLCardinal_sdkDecryptedReceipt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler________:)")));
@property (readonly) id<CDSSLCardinal_sdkReceiptFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkReceiptFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkRecoveryApi")))
@protocol CDSSLCardinal_sdkRecoveryApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createExchangeDataRecoveryInfoDelegateId:(NSString *)delegateId lifetimeSeconds:(CDSSLInt * _Nullable)lifetimeSeconds recoveryKeySize:(CDSSLCardinal_sdkRecoveryKeySize *)recoveryKeySize completionHandler:(void (^)(CDSSLCardinal_sdkRecoveryDataKey * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createExchangeDataRecoveryInfo(delegateId:lifetimeSeconds:recoveryKeySize:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createRecoveryInfoForAvailableKeyPairsIncludeParentsKeys:(BOOL)includeParentsKeys lifetimeSeconds:(CDSSLInt * _Nullable)lifetimeSeconds recoveryKeySize:(CDSSLCardinal_sdkRecoveryKeySize *)recoveryKeySize completionHandler:(void (^)(CDSSLCardinal_sdkRecoveryDataKey * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createRecoveryInfoForAvailableKeyPairs(includeParentsKeys:lifetimeSeconds:recoveryKeySize:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeAllExchangeDataRecoveryInfoForDataOwnerId:(NSString *)dataOwnerId completionHandler:(void (^)(CDSSLInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("purgeAllExchangeDataRecoveryInfoFor(dataOwnerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeAllKeyPairRecoveryInfoForDataOwnerId:(NSString *)dataOwnerId completionHandler:(void (^)(CDSSLInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("purgeAllKeyPairRecoveryInfoFor(dataOwnerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeAllRecoveryInfoForDataOwnerId:(NSString *)dataOwnerId completionHandler:(void (^)(CDSSLInt * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("purgeAllRecoveryInfoFor(dataOwnerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeRecoveryInfoRecoveryKey:(CDSSLCardinal_sdkRecoveryDataKey *)recoveryKey completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeRecoveryInfo(recoveryKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)recoverExchangeDataRecoveryKey:(CDSSLCardinal_sdkRecoveryDataKey *)recoveryKey completionHandler:(void (^)(CDSSLCardinal_sdkRecoveryDataUseFailureReason * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("recoverExchangeData(recoveryKey:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)recoverKeyPairsRecoveryKey:(CDSSLCardinal_sdkRecoveryDataKey *)recoveryKey autoDelete:(BOOL)autoDelete completionHandler:(void (^)(id<CDSSLCardinal_sdkRecoveryResult> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("recoverKeyPairs(recoveryKey:autoDelete:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkTimeTableBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkTimeTableBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTimeTableTimeTable:(id<CDSSLCardinal_sdkTimeTable>)timeTable completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTimeTable(timeTable:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTimeTableByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTimeTableById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTimeTableUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTimeTableUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTimeTablesTimeTables:(NSArray<id<CDSSLCardinal_sdkTimeTable>> *)timeTables completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTimeTables(timeTables:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTimeTablesByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTimeTablesByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTimeTablesUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTimeTablesUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeTimeTableTimeTable:(id<CDSSLCardinal_sdkTimeTable>)timeTable completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeTimeTable(timeTable:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeTimeTableByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeTimeTableById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkTimeTableBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkTimeTableBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTimeTableEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkTimeTable> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTimeTable(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTimeTablesTimeTableIds:(NSArray<NSString *> *)timeTableIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkTimeTable>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTimeTables(timeTableIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTimeTablesByAgendaIdAgendaId:(NSString *)agendaId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkTimeTable>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTimeTablesByAgendaId(agendaId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTimeTablesByPeriodAndAgendaIdStartDate:(int64_t)startDate endDate:(int64_t)endDate agendaId:(NSString *)agendaId completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkTimeTable>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTimeTablesByPeriodAndAgendaId(startDate:endDate:agendaId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyTimeTableEntity:(id<CDSSLCardinal_sdkTimeTable>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkTimeTable> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyTimeTable(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteTimeTableTimeTable:(id<CDSSLCardinal_sdkTimeTable>)timeTable completionHandler:(void (^)(id<CDSSLCardinal_sdkTimeTable> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteTimeTable(timeTable:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteTimeTableByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkTimeTable> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteTimeTableById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkTimeTableFlavouredApi")))
@protocol CDSSLCardinal_sdkTimeTableFlavouredApi <CDSSLCardinal_sdkTimeTableBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterTimeTablesByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterTimeTablesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterTimeTablesBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterTimeTablesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId timeTable:(id<CDSSLCardinal_sdkTimeTable>)timeTable options:(CDSSLCardinal_sdkTimeTableShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkTimeTable> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:timeTable:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyTimeTable:(id<CDSSLCardinal_sdkTimeTable>)timeTable delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkTimeTableShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkTimeTable> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(timeTable:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkTimeTableApi")))
@protocol CDSSLCardinal_sdkTimeTableApi <CDSSLCardinal_sdkTimeTableBasicFlavourlessApi, CDSSLCardinal_sdkTimeTableFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkTimeTable>)entity delegates:(NSSet<NSString *> *)delegates completionHandler____________:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler____________:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createTimeTableEntity:(CDSSLCardinal_sdkDecryptedTimeTable *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedTimeTable * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createTimeTable(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptTimeTable:(CDSSLCardinal_sdkEncryptedTimeTable *)timeTable completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedTimeTable * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(timeTable:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfTimeTable:(id<CDSSLCardinal_sdkTimeTable>)timeTable completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(timeTable:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfTimeTable:(id<CDSSLCardinal_sdkTimeTable>)timeTable completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(timeTable:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessTimeTable:(id<CDSSLCardinal_sdkTimeTable>)timeTable completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(timeTable:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchTimeTablesByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchTimeTablesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchTimeTablesBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchTimeTablesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptTimeTable:(CDSSLCardinal_sdkEncryptedTimeTable *)timeTable completionHandler:(void (^)(id<CDSSLCardinal_sdkTimeTable> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(timeTable:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedTimeTable * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient> _Nullable)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler_________:(void (^)(CDSSLCardinal_sdkDecryptedTimeTable * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler_________:)")));
@property (readonly) id<CDSSLCardinal_sdkTimeTableFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkTimeTableFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkTopicBasicFlavourlessApi")))
@protocol CDSSLCardinal_sdkTopicBasicFlavourlessApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTopicTopic:(id<CDSSLCardinal_sdkTopic>)topic completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTopic(topic:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTopicByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTopicById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTopicUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTopicUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTopicsTopics:(NSArray<id<CDSSLCardinal_sdkTopic>> *)topics completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTopics(topics:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTopicsByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTopicsByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteTopicsUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteTopicsUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeTopicTopic:(id<CDSSLCardinal_sdkTopic>)topic completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeTopic(topic:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeTopicByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeTopicById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkTopicBasicFlavouredApi")))
@protocol CDSSLCardinal_sdkTopicBasicFlavouredApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)addParticipantEntityId:(NSString *)entityId dataOwnerId:(NSString *)dataOwnerId topicRole:(CDSSLCardinal_sdkTopicRole *)topicRole completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("addParticipant(entityId:dataOwnerId:topicRole:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTopicEntityId:(NSString *)entityId completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTopic(entityId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTopicsEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<id<CDSSLCardinal_sdkTopic>> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTopics(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyTopicEntity:(id<CDSSLCardinal_sdkTopic>)entity completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyTopic(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)removeParticipantEntityId:(NSString *)entityId dataOwnerId:(NSString *)dataOwnerId completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("removeParticipant(entityId:dataOwnerId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteTopicTopic:(id<CDSSLCardinal_sdkTopic>)topic completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteTopic(topic:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteTopicByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteTopicById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkTopicFlavouredApi")))
@protocol CDSSLCardinal_sdkTopicFlavouredApi <CDSSLCardinal_sdkTopicBasicFlavouredApi>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterTopicsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterTopicsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterTopicsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterTopicsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithDelegateId:(NSString *)delegateId topic:(id<CDSSLCardinal_sdkTopic>)topic options:(CDSSLCardinal_sdkTopicShareOptions * _Nullable)options completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWith(delegateId:topic:options:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)shareWithManyTopic:(id<CDSSLCardinal_sdkTopic>)topic delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkTopicShareOptions *> *)delegates completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("shareWithMany(topic:delegates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkTopicApi")))
@protocol CDSSLCardinal_sdkTopicApi <CDSSLCardinal_sdkTopicBasicFlavourlessApi, CDSSLCardinal_sdkTopicFlavouredApi, CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDelegationDeAnonymizationMetadataEntity:(id<CDSSLCardinal_sdkTopic>)entity delegates:(NSSet<NSString *> *)delegates completionHandler_____________:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("createDelegationDeAnonymizationMetadata(entity:delegates:completionHandler_____________:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createTopicEntity:(CDSSLCardinal_sdkDecryptedTopic *)entity completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedTopic * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createTopic(entity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptTopic:(CDSSLCardinal_sdkEncryptedTopic *)topic completionHandler:(void (^)(CDSSLCardinal_sdkDecryptedTopic * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decrypt(topic:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)decryptPatientIdOfTopic:(id<CDSSLCardinal_sdkTopic>)topic completionHandler:(void (^)(NSSet<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("decryptPatientIdOf(topic:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEncryptionKeysOfTopic:(id<CDSSLCardinal_sdkTopic>)topic completionHandler:(void (^)(NSSet<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEncryptionKeysOf(topic:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasWriteAccessTopic:(id<CDSSLCardinal_sdkTopic>)topic completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasWriteAccess(topic:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchTopicsByFilter:(id<CDSSLCardinal_sdkFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchTopicsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchTopicsBySortedFilter:(id<CDSSLCardinal_sdkSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchTopicsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)tryDecryptTopic:(CDSSLCardinal_sdkEncryptedTopic *)topic completionHandler:(void (^)(id<CDSSLCardinal_sdkTopic> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("tryDecrypt(topic:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)withEncryptionMetadataBase:(CDSSLCardinal_sdkDecryptedTopic * _Nullable)base patient:(id<CDSSLCardinal_sdkPatient> _Nullable)patient user:(CDSSLCardinal_sdkUser * _Nullable)user delegates:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)delegates secretId:(id<CDSSLCardinal_sdkSecretIdUseOption>)secretId completionHandler__________:(void (^)(CDSSLCardinal_sdkDecryptedTopic * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("withEncryptionMetadata(base:patient:user:delegates:secretId:completionHandler__________:)")));
@property (readonly) id<CDSSLCardinal_sdkTopicFlavouredApi> encrypted __attribute__((swift_name("encrypted")));
@property (readonly) id<CDSSLCardinal_sdkTopicFlavouredApi> tryAndRecover __attribute__((swift_name("tryAndRecover")));
@end

__attribute__((swift_name("Cardinal_sdkAgendaApi")))
@protocol CDSSLCardinal_sdkAgendaApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAgendaAgendaDto:(CDSSLCardinal_sdkAgenda *)agendaDto completionHandler:(void (^)(CDSSLCardinal_sdkAgenda * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createAgenda(agendaDto:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAgendaAgenda:(CDSSLCardinal_sdkAgenda *)agenda completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAgenda(agenda:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAgendaByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAgendaById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAgendaUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAgendaUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAgendasAgendas:(NSArray<CDSSLCardinal_sdkAgenda *> *)agendas completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAgendas(agendas:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAgendasByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAgendasByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteAgendasUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteAgendasUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterAgendasByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterAgendasBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterAgendasBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterAgendasBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgendaAgendaId:(NSString *)agendaId completionHandler:(void (^)(CDSSLCardinal_sdkAgenda * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgenda(agendaId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgendasAgendaIds:(NSArray<NSString *> *)agendaIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkAgenda *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgendas(agendaIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAgendasForUserUserId:(NSString *)userId completionHandler:(void (^)(CDSSLCardinal_sdkAgenda * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAgendasForUser(userId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllAgendasStartDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkAgenda *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAllAgendas(startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReadableAgendasForUserUserId:(NSString *)userId completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkAgenda *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReadableAgendasForUser(userId:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchAgendasByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchAgendasBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchAgendasBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchAgendasBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyAgendaAgendaDto:(CDSSLCardinal_sdkAgenda *)agendaDto completionHandler:(void (^)(CDSSLCardinal_sdkAgenda * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyAgenda(agendaDto:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeAgendaAgenda:(CDSSLCardinal_sdkAgenda *)agenda completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeAgenda(agenda:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeAgendaByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeAgendaById(id:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteAgendaAgenda:(CDSSLCardinal_sdkAgenda *)agenda completionHandler:(void (^)(CDSSLCardinal_sdkAgenda * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteAgenda(agenda:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteAgendaByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkAgenda * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteAgendaById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkApplicationSettingsApi")))
@protocol CDSSLCardinal_sdkApplicationSettingsApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createApplicationSettingsApplicationSettings:(CDSSLCardinal_sdkApplicationSettings *)applicationSettings completionHandler:(void (^)(CDSSLCardinal_sdkApplicationSettings * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createApplicationSettings(applicationSettings:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getApplicationSettingsWithCompletionHandler:(void (^)(NSArray<CDSSLCardinal_sdkApplicationSettings *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getApplicationSettings(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateApplicationSettingsApplicationSettings:(CDSSLCardinal_sdkApplicationSettings *)applicationSettings completionHandler:(void (^)(CDSSLCardinal_sdkApplicationSettings * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateApplicationSettings(applicationSettings:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkCodeApi")))
@protocol CDSSLCardinal_sdkCodeApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createCodeC:(CDSSLCardinal_sdkCode *)c completionHandler:(void (^)(CDSSLCardinal_sdkCode * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createCode(c:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createCodesCodeBatch:(NSArray<CDSSLCardinal_sdkCode *> *)codeBatch completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createCodes(codeBatch:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createCodesGroupId:(NSString *)groupId codeBatch:(NSArray<CDSSLCardinal_sdkCode *> *)codeBatch completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createCodes(groupId:codeBatch:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterCodesByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterCodesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterCodesBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterCodesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findCodesByLabelRegion:(NSString * _Nullable)region types:(NSString *)types language:(NSString *)language label:(NSString *)label version:(NSString * _Nullable)version startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findCodesByLabel(region:types:language:label:version:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findCodesByLinkLinkType:(NSString *)linkType linkedId:(NSString * _Nullable)linkedId startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findCodesByLink(linkType:linkedId:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findCodesByTypeRegion:(NSString *)region type:(NSString * _Nullable)type code:(NSString * _Nullable)code version:(NSString * _Nullable)version startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findCodesByType(region:type:code:version:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCodeCodeId:(NSString *)codeId completionHandler:(void (^)(CDSSLCardinal_sdkCode * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCode(codeId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCodeByRegionLanguageTypeLabelRegion:(NSString *)region label:(NSString *)label type:(NSString *)type languages:(NSString * _Nullable)languages completionHandler:(void (^)(CDSSLCardinal_sdkCode * _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("getCodeByRegionLanguageTypeLabel(region:label:type:languages:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCodeWithPartsType:(NSString *)type code:(NSString *)code version:(NSString *)version completionHandler:(void (^)(CDSSLCardinal_sdkCode * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCodeWithParts(type:code:version:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCodesCodeIds:(NSArray<NSString *> *)codeIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCodes(codeIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCodesGroupId:(NSString *)groupId codeIds:(NSArray<NSString *> *)codeIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCodes(groupId:codeIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)importCodesCodeType:(NSString *)codeType completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("importCodes(codeType:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isCodeValidType:(NSString *)type code:(NSString *)code version:(NSString * _Nullable)version completionHandler:(void (^)(CDSSLCardinal_sdkBooleanResponse * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isCodeValid(type:code:version:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listCodeTypesByRegion:(NSString * _Nullable)region type:(NSString * _Nullable)type completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listCodeTypesBy(region:type:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listCodesByRegionTypeCodeVersionRegion:(NSString *)region type:(NSString * _Nullable)type code:(NSString * _Nullable)code version:(NSString * _Nullable)version completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listCodesByRegionTypeCodeVersion(region:type:code:version:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listTagTypesByRegion:(NSString * _Nullable)region type:(NSString * _Nullable)type completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listTagTypesBy(region:type:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchCodesByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchCodesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchCodesBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchCodesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyCodeCodeDto:(CDSSLCardinal_sdkCode *)codeDto completionHandler:(void (^)(CDSSLCardinal_sdkCode * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyCode(codeDto:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyCodesCodeBatch:(NSArray<CDSSLCardinal_sdkCode *> *)codeBatch completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyCodes(codeBatch:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyCodesGroupId:(NSString *)groupId codeBatch:(NSArray<CDSSLCardinal_sdkCode *> *)codeBatch completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkCode *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyCodes(groupId:codeBatch:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkDeviceApi")))
@protocol CDSSLCardinal_sdkDeviceApi <CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDeviceP:(CDSSLCardinal_sdkDevice *)p completionHandler:(void (^)(CDSSLCardinal_sdkDevice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createDevice(p:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDeviceInGroupGroupId:(NSString *)groupId device:(CDSSLCardinal_sdkDevice *)device completionHandler:(void (^)(CDSSLCardinal_sdkDevice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createDeviceInGroup(groupId:device:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDevicesDevices:(NSArray<CDSSLCardinal_sdkDevice *> *)devices completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createDevices(devices:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDeviceDevice:(CDSSLCardinal_sdkDevice *)device completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDevice(device:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDeviceByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDeviceById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDeviceUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDeviceUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDevicesDevices:(NSArray<CDSSLCardinal_sdkDevice *> *)devices completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDevices(devices:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDevicesByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDevicesByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDevicesInGroupGroupId:(NSString *)groupId deviceIds:(NSArray<CDSSLCardinal_sdkIdWithRev *> *)deviceIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDevicesInGroup(groupId:deviceIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDevicesUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDevicesUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterDevicesByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterDevicesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterDevicesBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterDevicesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDeviceDeviceId:(NSString *)deviceId completionHandler:(void (^)(CDSSLCardinal_sdkDevice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDevice(deviceId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDevicesDeviceIds:(NSArray<NSString *> *)deviceIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDevice *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDevices(deviceIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDevicesInGroupGroupId:(NSString *)groupId deviceIds:(NSArray<NSString *> * _Nullable)deviceIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDevice *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDevicesInGroup(groupId:deviceIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchDevicesByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchDevicesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchDevicesBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchDevicesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyDeviceDevice:(CDSSLCardinal_sdkDevice *)device completionHandler:(void (^)(CDSSLCardinal_sdkDevice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyDevice(device:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyDeviceInGroupGroupId:(NSString *)groupId device:(CDSSLCardinal_sdkDevice *)device completionHandler:(void (^)(CDSSLCardinal_sdkDevice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyDeviceInGroup(groupId:device:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyDevicesDevices:(NSArray<CDSSLCardinal_sdkDevice *> *)devices completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyDevices(devices:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeDeviceDevice:(CDSSLCardinal_sdkDevice *)device completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeDevice(device:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeDeviceByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeDeviceById(id:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteDeviceDevice:(CDSSLCardinal_sdkDevice *)device completionHandler:(void (^)(CDSSLCardinal_sdkDevice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteDevice(device:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteDeviceByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDevice * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteDeviceById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkDocumentTemplateApi")))
@protocol CDSSLCardinal_sdkDocumentTemplateApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createDocumentTemplateDocumentTemplate:(CDSSLCardinal_sdkDocumentTemplate *)documentTemplate completionHandler:(void (^)(CDSSLCardinal_sdkDocumentTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createDocumentTemplate(documentTemplate:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteDocumentTemplatesDocumentTemplateIds:(NSArray<NSString *> *)documentTemplateIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteDocumentTemplates(documentTemplateIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findAllDocumentTemplatesStartKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkDocumentTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findAllDocumentTemplates(startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAttachmentTextDocumentTemplateId:(NSString *)documentTemplateId attachmentId:(NSString *)attachmentId completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAttachmentText(documentTemplateId:attachmentId:completionHandler:)")));
- (NSString *)getAttachmentUrlDocumentId:(NSString *)documentId attachmentId:(NSString *)attachmentId __attribute__((swift_name("getAttachmentUrl(documentId:attachmentId:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDocumentTemplateDocumentTemplateId:(NSString *)documentTemplateId completionHandler:(void (^)(CDSSLCardinal_sdkDocumentTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDocumentTemplate(documentTemplateId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDocumentTemplateAttachmentDocumentTemplateId:(NSString *)documentTemplateId attachmentId:(NSString *)attachmentId completionHandler:(void (^)(CDSSLKotlinByteArray * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDocumentTemplateAttachment(documentTemplateId:attachmentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listDocumentTemplatesWithCompletionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocumentTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listDocumentTemplates(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listDocumentTemplatesByDocumentTypeDocumentTypeCode:(NSString *)documentTypeCode completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocumentTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listDocumentTemplatesByDocumentType(documentTypeCode:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listDocumentTemplatesByDocumentTypeForCurrentUserDocumentTypeCode:(NSString *)documentTypeCode completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocumentTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listDocumentTemplatesByDocumentTypeForCurrentUser(documentTypeCode:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listDocumentTemplatesBySpecialitySpecialityCode:(NSString *)specialityCode completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocumentTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listDocumentTemplatesBySpeciality(specialityCode:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyDocumentTemplateDocumentTemplate:(CDSSLCardinal_sdkDocumentTemplate *)documentTemplate completionHandler:(void (^)(CDSSLCardinal_sdkDocumentTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyDocumentTemplate(documentTemplate:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setDocumentTemplateAttachmentDocumentTemplateId:(NSString *)documentTemplateId payload:(CDSSLKotlinByteArray *)payload completionHandler:(void (^)(CDSSLCardinal_sdkDocumentTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setDocumentTemplateAttachment(documentTemplateId:payload:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkEntityReferenceApi")))
@protocol CDSSLCardinal_sdkEntityReferenceApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createEntityReferenceEntityReference:(CDSSLCardinal_sdkEntityReference *)entityReference completionHandler:(void (^)(CDSSLCardinal_sdkEntityReference * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createEntityReference(entityReference:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getLatestPrefix:(NSString *)prefix completionHandler:(void (^)(CDSSLCardinal_sdkEntityReference * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getLatest(prefix:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkEntityTemplateApi")))
@protocol CDSSLCardinal_sdkEntityTemplateApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createEntityTemplateApplicationSettings:(CDSSLCardinal_sdkEntityTemplate *)applicationSettings completionHandler:(void (^)(CDSSLCardinal_sdkEntityTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createEntityTemplate(applicationSettings:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createEntityTemplatesEntityTemplates:(NSArray<CDSSLCardinal_sdkEntityTemplate *> *)entityTemplates completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkEntityTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createEntityTemplates(entityTemplates:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteEntityTemplatesEntityTemplateIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityTemplateIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteEntityTemplates(entityTemplateIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findAllEntityTemplatesByKeywordType:(NSString *)type keyword:(NSString *)keyword includeEntities:(CDSSLBoolean * _Nullable)includeEntities completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkEntityTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findAllEntityTemplatesByKeyword(type:keyword:includeEntities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEntityTemplateDocumentTemplateId:(NSString *)documentTemplateId completionHandler:(void (^)(CDSSLCardinal_sdkEntityTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEntityTemplate(documentTemplateId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getEntityTemplatesEntityTemplateIds:(NSArray<NSString *> *)entityTemplateIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkEntityTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getEntityTemplates(entityTemplateIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listAllEntityTemplatesByType:(NSString *)type searchString:(NSString * _Nullable)searchString includeEntities:(CDSSLBoolean * _Nullable)includeEntities completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkEntityTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listAllEntityTemplatesBy(type:searchString:includeEntities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listEntityTemplatesByUserId:(NSString *)userId type:(NSString *)type searchString:(NSString * _Nullable)searchString includeEntities:(CDSSLBoolean * _Nullable)includeEntities completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkEntityTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listEntityTemplatesBy(userId:type:searchString:includeEntities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listEntityTemplatesByKeywordUserId:(NSString *)userId type:(NSString *)type keyword:(NSString *)keyword includeEntities:(CDSSLBoolean * _Nullable)includeEntities completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkEntityTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listEntityTemplatesByKeyword(userId:type:keyword:includeEntities:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyEntityTemplateDocumentTemplate:(CDSSLCardinal_sdkEntityTemplate *)documentTemplate completionHandler:(void (^)(CDSSLCardinal_sdkEntityTemplate * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyEntityTemplate(documentTemplate:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyEntityTemplatesEntityTemplates:(NSArray<CDSSLCardinal_sdkEntityTemplate *> *)entityTemplates completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkEntityTemplate *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyEntityTemplates(entityTemplates:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkFrontEndMigrationApi")))
@protocol CDSSLCardinal_sdkFrontEndMigrationApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createFrontEndMigrationFrontEndMigration:(CDSSLCardinal_sdkFrontEndMigration *)frontEndMigration completionHandler:(void (^)(CDSSLCardinal_sdkFrontEndMigration * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createFrontEndMigration(frontEndMigration:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteFrontEndMigrationFrontEndMigrationId:(NSString *)frontEndMigrationId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteFrontEndMigration(frontEndMigrationId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFrontEndMigrationFrontEndMigrationId:(NSString *)frontEndMigrationId completionHandler:(void (^)(CDSSLCardinal_sdkFrontEndMigration * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFrontEndMigration(frontEndMigrationId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFrontEndMigrationByNameFrontEndMigrationName:(NSString *)frontEndMigrationName completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkFrontEndMigration *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFrontEndMigrationByName(frontEndMigrationName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getFrontEndMigrationsWithCompletionHandler:(void (^)(NSArray<CDSSLCardinal_sdkFrontEndMigration *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getFrontEndMigrations(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyFrontEndMigrationFrontEndMigration:(CDSSLCardinal_sdkFrontEndMigration *)frontEndMigration completionHandler:(void (^)(CDSSLCardinal_sdkFrontEndMigration * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyFrontEndMigration(frontEndMigration:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkGroupApi")))
@protocol CDSSLCardinal_sdkGroupApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)changeSuperGroupChildGroupId:(NSString *)childGroupId operationToken:(NSString *)operationToken completionHandler:(void (^)(CDSSLCardinal_sdkGroup * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("changeSuperGroup(childGroupId:operationToken:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createGroupId:(NSString *)id name:(NSString *)name type:(CDSSLCardinal_sdkGroupType * _Nullable)type password:(NSString *)password server:(NSString * _Nullable)server q:(CDSSLInt * _Nullable)q n:(CDSSLInt * _Nullable)n superGroup:(NSString * _Nullable)superGroup applicationId:(NSString * _Nullable)applicationId initialisationData:(CDSSLCardinal_sdkDatabaseInitialisation *)initialisationData completionHandler:(void (^)(CDSSLCardinal_sdkGroup * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createGroup(id:name:type:password:server:q:n:superGroup:applicationId:initialisationData:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteGroupId:(NSString *)id completionHandler:(void (^)(CDSSLCardinal_sdkGroup * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteGroup(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteOperationTokenTokenId:(NSString *)tokenId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("deleteOperationToken(tokenId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findGroupsId:(NSString *)id startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkGroup *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findGroups(id:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findGroupsWithContentId:(NSString *)id searchString:(NSString *)searchString startKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkGroup *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findGroupsWithContent(id:searchString:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getDefaultRolesGroupId:(NSString *)groupId completionHandler:(void (^)(NSDictionary<CDSSLCardinal_sdkUserType *, NSArray<CDSSLCardinal_sdkRoleConfiguration *> *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getDefaultRoles(groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupId:(NSString *)id completionHandler:(void (^)(CDSSLCardinal_sdkGroup * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroup(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getGroupsStorageInfosGroups:(NSArray<NSString *> *)groups completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkGroupDatabasesInfo *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getGroupsStorageInfos(groups:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getHierarchyId:(NSString *)id completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getHierarchy(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getNameOfGroupParentId:(NSString *)id completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getNameOfGroupParent(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getOperationTokenOperation:(CDSSLCardinal_sdkOperation *)operation duration:(CDSSLLong * _Nullable)duration description:(NSString * _Nullable)description completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getOperationToken(operation:duration:description:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplicationInfoId:(NSString *)id completionHandler:(void (^)(CDSSLCardinal_sdkReplicationInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplicationInfo(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hardDeleteGroupId:(NSString *)id completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkGroupDeletionReport *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hardDeleteGroup(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)doInitDesignDocsId:(NSString *)id clazz:(NSString * _Nullable)clazz warmup:(CDSSLBoolean * _Nullable)warmup dryRun:(CDSSLBoolean * _Nullable)dryRun completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDesignDocument *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("doInitDesignDocs(id:clazz:warmup:dryRun:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listAllGroupsIdsWithCompletionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listAllGroupsIds(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listAppsWithCompletionHandler:(void (^)(NSArray<CDSSLCardinal_sdkGroup *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listApps(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listGroupsWithCompletionHandler:(void (^)(NSArray<CDSSLCardinal_sdkGroup *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listGroups(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyGroupNameId:(NSString *)id name:(NSString *)name completionHandler:(void (^)(CDSSLCardinal_sdkGroup * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyGroupName(id:name:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyGroupPropertiesId:(NSString *)id properties:(CDSSLCardinal_sdkListOfProperties *)properties completionHandler:(void (^)(CDSSLCardinal_sdkGroup * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyGroupProperties(id:properties:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerNewGroupAdministratorType:(CDSSLCardinal_sdkGroupType * _Nullable)type role:(CDSSLCardinal_sdkPermissionType * _Nullable)role registrationInformation:(CDSSLCardinal_sdkRegistrationInformation *)registrationInformation completionHandler:(void (^)(CDSSLCardinal_sdkRegistrationSuccess * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerNewGroupAdministrator(type:role:registrationInformation:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetStorageId:(NSString *)id q:(CDSSLInt * _Nullable)q n:(CDSSLInt * _Nullable)n databases:(NSArray<NSString *> *)databases completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("resetStorage(id:q:n:databases:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setDefaultRolesGroupId:(NSString *)groupId userType:(NSString *)userType roleIds:(NSArray<NSString *> *)roleIds completionHandler:(void (^)(CDSSLCardinal_sdkGroup * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setDefaultRoles(groupId:userType:roleIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setGroupPasswordId:(NSString *)id password:(NSString *)password completionHandler:(void (^)(CDSSLCardinal_sdkGroup * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setGroupPassword(id:password:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)solveConflictsId:(NSString *)id limit:(CDSSLInt * _Nullable)limit warmup:(CDSSLBoolean * _Nullable)warmup completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("solveConflicts(id:limit:warmup:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkHealthcarePartyApi")))
@protocol CDSSLCardinal_sdkHealthcarePartyApi <CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createHealthcarePartyP:(CDSSLCardinal_sdkHealthcareParty *)p completionHandler:(void (^)(CDSSLCardinal_sdkHealthcareParty * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createHealthcareParty(p:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createHealthcarePartyInGroupGroupId:(NSString *)groupId healthcareParty:(CDSSLCardinal_sdkHealthcareParty *)healthcareParty completionHandler:(void (^)(CDSSLCardinal_sdkHealthcareParty * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createHealthcarePartyInGroup(groupId:healthcareParty:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartiesHealthcareParties:(NSArray<CDSSLCardinal_sdkHealthcareParty *> *)healthcareParties completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcareParties(healthcareParties:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartiesByIdsEntityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcarePartiesByIds(entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartiesInGroupGroupId:(NSString *)groupId healthcareParties:(NSArray<CDSSLCardinal_sdkHealthcareParty *> *)healthcareParties completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcarePartiesInGroup(groupId:healthcareParties:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartiesInGroupByIdsGroupId:(NSString *)groupId entityIds:(NSArray<CDSSLCardinal_sdkIdWithMandatoryRev *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcarePartiesInGroupByIds(groupId:entityIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartiesUnsafeEntityIds:(NSArray<NSString *> *)entityIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcarePartiesUnsafe(entityIds:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartyHealthcareParty:(CDSSLCardinal_sdkHealthcareParty *)healthcareParty completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcareParty(healthcareParty:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartyByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcarePartyById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartyInGroupGroupId:(NSString *)groupId hcp:(CDSSLCardinal_sdkHealthcareParty *)hcp completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcarePartyInGroup(groupId:hcp:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartyInGroupByIdGroupId:(NSString *)groupId entityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcarePartyInGroupById(groupId:entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteHealthcarePartyUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteHealthcarePartyUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterHealthPartiesByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterHealthPartiesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterHealthPartiesBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterHealthPartiesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findHealthcarePartiesByStartKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit desc:(CDSSLBoolean * _Nullable)desc completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkHealthcareParty *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findHealthcarePartiesBy(startKey:startDocumentId:limit:desc:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findHealthcarePartiesByNameName:(NSString * _Nullable)name startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit desc:(CDSSLBoolean * _Nullable)desc completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkHealthcareParty *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findHealthcarePartiesByName(name:startKey:startDocumentId:limit:desc:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findHealthcarePartiesBySpecialityAndPostCodeType:(NSString *)type spec:(NSString *)spec firstCode:(NSString *)firstCode lastCode:(NSString *)lastCode startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkHealthcareParty *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findHealthcarePartiesBySpecialityAndPostCode(type:spec:firstCode:lastCode:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findHealthcarePartiesBySsinOrNihiiSearchValue:(NSString *)searchValue startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit desc:(BOOL)desc completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkHealthcareParty *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findHealthcarePartiesBySsinOrNihii(searchValue:startKey:startDocumentId:limit:desc:completionHandler:)"))) __attribute__((deprecated("Find methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentHealthcarePartyWithCompletionHandler:(void (^)(CDSSLCardinal_sdkHealthcareParty * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentHealthcareParty(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getHealthcarePartiesHealthcarePartyIds:(NSArray<NSString *> *)healthcarePartyIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkHealthcareParty *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getHealthcareParties(healthcarePartyIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getHealthcarePartiesInGroupGroupId:(NSString *)groupId healthcarePartyIds:(NSArray<NSString *> * _Nullable)healthcarePartyIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkHealthcareParty *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getHealthcarePartiesInGroup(groupId:healthcarePartyIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getHealthcarePartyHealthcarePartyId:(NSString *)healthcarePartyId completionHandler:(void (^)(CDSSLCardinal_sdkHealthcareParty * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getHealthcareParty(healthcarePartyId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPublicKeyHealthcarePartyId:(NSString *)healthcarePartyId completionHandler:(void (^)(CDSSLCardinal_sdkPublicKey * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPublicKey(healthcarePartyId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listHealthcarePartiesByNameName:(NSString *)name completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkHealthcareParty *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listHealthcarePartiesByName(name:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listHealthcarePartiesByParentIdParentId:(NSString *)parentId completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkHealthcareParty *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listHealthcarePartiesByParentId(parentId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchHealthcarePartiesByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchHealthcarePartiesBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchHealthcarePartiesBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchHealthcarePartiesBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyHealthcarePartyHealthcareParty:(CDSSLCardinal_sdkHealthcareParty *)healthcareParty completionHandler:(void (^)(CDSSLCardinal_sdkHealthcareParty * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyHealthcareParty(healthcareParty:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyHealthcarePartyInGroupGroupId:(NSString *)groupId healthcareParty:(CDSSLCardinal_sdkHealthcareParty *)healthcareParty completionHandler:(void (^)(CDSSLCardinal_sdkHealthcareParty * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyHealthcarePartyInGroup(groupId:healthcareParty:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeHealthcarePartyHealthcareParty:(CDSSLCardinal_sdkHealthcareParty *)healthcareParty completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeHealthcareParty(healthcareParty:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeHealthcarePartyByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeHealthcarePartyById(id:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)registerPatientGroupId:(NSString *)groupId parentHcPartyId:(NSString * _Nullable)parentHcPartyId token:(NSString * _Nullable)token useShortToken:(CDSSLBoolean * _Nullable)useShortToken hcp:(CDSSLCardinal_sdkHealthcareParty *)hcp completionHandler:(void (^)(CDSSLCardinal_sdkDataOwnerRegistrationSuccess * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("registerPatient(groupId:parentHcPartyId:token:useShortToken:hcp:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteHealthcarePartyHealthcareParty:(CDSSLCardinal_sdkHealthcareParty *)healthcareParty completionHandler:(void (^)(CDSSLCardinal_sdkHealthcareParty * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteHealthcareParty(healthcareParty:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteHealthcarePartyByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkHealthcareParty * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteHealthcarePartyById(id:rev:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkInsuranceApi")))
@protocol CDSSLCardinal_sdkInsuranceApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createInsuranceInsurance:(CDSSLCardinal_sdkInsurance *)insurance completionHandler:(void (^)(CDSSLCardinal_sdkInsurance * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createInsurance(insurance:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteInsuranceInsuranceId:(NSString *)insuranceId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteInsurance(insuranceId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllInsurancesStartDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkInsurance *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAllInsurances(startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInsuranceInsuranceId:(NSString *)insuranceId completionHandler:(void (^)(CDSSLCardinal_sdkInsurance * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInsurance(insuranceId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getInsurancesInsuranceIds:(NSArray<NSString *> *)insuranceIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkInsurance *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getInsurances(insuranceIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInsurancesByCodeInsuranceCode:(NSString *)insuranceCode completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkInsurance *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInsurancesByCode(insuranceCode:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listInsurancesByNameInsuranceName:(NSString *)insuranceName completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkInsurance *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listInsurancesByName(insuranceName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyInsuranceInsurance:(CDSSLCardinal_sdkInsurance *)insurance completionHandler:(void (^)(CDSSLCardinal_sdkInsurance * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyInsurance(insurance:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkKeywordApi")))
@protocol CDSSLCardinal_sdkKeywordApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createKeywordFrontEndMigration:(CDSSLCardinal_sdkKeyword *)frontEndMigration completionHandler:(void (^)(CDSSLCardinal_sdkKeyword * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createKeyword(frontEndMigration:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteKeywordsKeywordIds:(NSArray<NSString *> *)keywordIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteKeywords(keywordIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getKeywordFrontEndMigrationId:(NSString *)frontEndMigrationId completionHandler:(void (^)(CDSSLCardinal_sdkKeyword * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getKeyword(frontEndMigrationId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getKeywordsStartDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkKeyword *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getKeywords(startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getKeywordsByUserUserId:(NSString *)userId completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkKeyword *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getKeywordsByUser(userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyKeywordKeyword:(CDSSLCardinal_sdkKeyword *)keyword completionHandler:(void (^)(CDSSLCardinal_sdkKeyword * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyKeyword(keyword:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkMedicalLocationApi")))
@protocol CDSSLCardinal_sdkMedicalLocationApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createMedicalLocationMedicalLocationDto:(CDSSLCardinal_sdkMedicalLocation *)medicalLocationDto completionHandler:(void (^)(CDSSLCardinal_sdkMedicalLocation * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createMedicalLocation(medicalLocationDto:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteMedicalLocationsLocationIds:(CDSSLCardinal_sdkListOfIds *)locationIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteMedicalLocations(locationIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterMedicalLocationsByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterMedicalLocationsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterMedicalLocationsBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterMedicalLocationsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllMedicalLocationsStartDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkMedicalLocation *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAllMedicalLocations(startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Use filter instead")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMedicalLocationLocationId:(NSString *)locationId completionHandler:(void (^)(CDSSLCardinal_sdkMedicalLocation * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMedicalLocation(locationId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMedicalLocationsMedicalLocationIds:(NSArray<NSString *> *)medicalLocationIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkMedicalLocation *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMedicalLocations(medicalLocationIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchMedicalLocationsByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchMedicalLocationsBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchMedicalLocationsBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchMedicalLocationsBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyMedicalLocationMedicalLocationDto:(CDSSLCardinal_sdkMedicalLocation *)medicalLocationDto completionHandler:(void (^)(CDSSLCardinal_sdkMedicalLocation * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyMedicalLocation(medicalLocationDto:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkPermissionApi")))
@protocol CDSSLCardinal_sdkPermissionApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyUserPermissionsUserId:(NSString *)userId permissions:(CDSSLCardinal_sdkPermission *)permissions completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkPermission *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyUserPermissions(userId:permissions:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkPlaceApi")))
@protocol CDSSLCardinal_sdkPlaceApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createPlacePlace:(CDSSLCardinal_sdkPlace *)place completionHandler:(void (^)(CDSSLCardinal_sdkPlace * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createPlace(place:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deletePlacesPlaceIds:(NSArray<NSString *> *)placeIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkDocIdentifier *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deletePlaces(placeIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPlacePlaceId:(NSString *)placeId completionHandler:(void (^)(CDSSLCardinal_sdkPlace * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPlace(placeId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getPlacesStartDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkPlace *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getPlaces(startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyPlacePlace:(CDSSLCardinal_sdkPlace *)place completionHandler:(void (^)(CDSSLCardinal_sdkPlace * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyPlace(place:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkRoleApi")))
@protocol CDSSLCardinal_sdkRoleApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getAllRolesWithCompletionHandler:(void (^)(NSArray<CDSSLCardinal_sdkRole *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getAllRoles(completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkSystemApi")))
@protocol CDSSLCardinal_sdkSystemApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)evictAllFromMapMapName:(NSString *)mapName completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("evictAllFromMap(mapName:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getIndexingInfoWithCompletionHandler:(void (^)(CDSSLCardinal_sdkIndexingInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getIndexingInfo(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getIndexingInfoByGroupGroupId:(NSString *)groupId completionHandler:(void (^)(CDSSLCardinal_sdkIndexingInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getIndexingInfoByGroup(groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getProcessInfoWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getProcessInfo(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplicationInfoWithCompletionHandler:(void (^)(CDSSLCardinal_sdkReplicationInfo * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplicationInfo(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getReplicatorInfoId:(NSString *)id completionHandler:(void (^)(CDSSLCardinal_sdkReplicatorDocument * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getReplicatorInfo(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getVersionWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getVersion(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)isReadyWithCompletionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("isReady(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resolveContactsConflictsLimit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resolveContactsConflicts(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resolveDocumentsConflictsIds:(NSString * _Nullable)ids limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resolveDocumentsConflicts(ids:limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resolveFormsConflictsLimit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resolveFormsConflicts(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resolveHealthElementsConflictsLimit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resolveHealthElementsConflicts(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resolveInvoicesConflictsLimit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resolveInvoicesConflicts(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resolveMessagesConflictsLimit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resolveMessagesConflicts(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resolvePatientsConflictsLimit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkIdWithRev *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resolvePatientsConflicts(limit:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateDesignDocEntityName:(NSString *)entityName warmup:(CDSSLBoolean * _Nullable)warmup completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateDesignDoc(entityName:warmup:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkTarificationApi")))
@protocol CDSSLCardinal_sdkTarificationApi
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createTarificationTarification:(CDSSLCardinal_sdkTarification *)tarification completionHandler:(void (^)(CDSSLCardinal_sdkTarification * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createTarification(tarification:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findTarificationsByRegion:(NSString * _Nullable)region type:(NSString * _Nullable)type tarification:(NSString * _Nullable)tarification version:(NSString * _Nullable)version startDocumentId:(NSString * _Nullable)startDocumentId startKey:(NSString * _Nullable)startKey limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkTarification *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findTarificationsBy(region:type:tarification:version:startDocumentId:startKey:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findTarificationsByLabelRegion:(NSString * _Nullable)region types:(NSString * _Nullable)types language:(NSString * _Nullable)language label:(NSString * _Nullable)label startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkTarification *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findTarificationsByLabel(region:types:language:label:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("Will be replaced by filters")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTarificationTarificationId:(NSString *)tarificationId completionHandler:(void (^)(CDSSLCardinal_sdkTarification * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTarification(tarificationId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTarificationWithPartsType:(NSString *)type tarification:(NSString *)tarification version:(NSString *)version completionHandler:(void (^)(CDSSLCardinal_sdkTarification * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTarificationWithParts(type:tarification:version:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTarificationsTarificationIds:(NSArray<NSString *> *)tarificationIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkTarification *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTarifications(tarificationIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyTarificationTarification:(CDSSLCardinal_sdkTarification *)tarification completionHandler:(void (^)(CDSSLCardinal_sdkTarification * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyTarification(tarification:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkUserApi")))
@protocol CDSSLCardinal_sdkUserApi <CDSSLCardinal_sdkSubscribable>
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)assignHealthcarePartyHealthcarePartyId:(NSString *)healthcarePartyId completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("assignHealthcareParty(healthcarePartyId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAdminUserUser:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createAdminUser(user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createAdminUserInGroupGroupId:(NSString *)groupId user:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createAdminUserInGroup(groupId:user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createUserUser:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createUser(user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)createUserInGroupGroupId:(NSString *)groupId user:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("createUserInGroup(groupId:user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUserUser:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteUser(user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUserByIdEntityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteUserById(entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUserInGroupGroupId:(NSString *)groupId user:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteUserInGroup(groupId:user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUserInGroupByIdGroupId:(NSString *)groupId entityId:(NSString *)entityId rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteUserInGroupById(groupId:entityId:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)deleteUserUnsafeEntityId:(NSString *)entityId completionHandler:(void (^)(CDSSLCardinal_sdkDocIdentifier * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("deleteUserUnsafe(entityId:completionHandler:)"))) __attribute__((deprecated("Deletion without rev is unsafe")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)disable2faForUserUserId:(NSString *)userId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("disable2faForUser(userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)disable2faForUserUserId:(NSString *)userId groupId:(NSString *)groupId completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("disable2faForUser(userId:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)enable2faForUserUserId:(NSString *)userId request:(CDSSLCardinal_sdkEnable2faRequest *)request completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("enable2faForUser(userId:request:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)enable2faForUserUserId:(NSString *)userId groupId:(NSString *)groupId request:(CDSSLCardinal_sdkEnable2faRequest *)request completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("enable2faForUser(userId:groupId:request:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterUsersByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterUsersBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterUsersBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterUsersBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterUsersInGroupByGroupId:(NSString *)groupId filter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterUsersInGroupBy(groupId:filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)filterUsersInGroupBySortedGroupId:(NSString *)groupId filter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(id<CDSSLCardinal_sdkPaginatedListIterator> _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("filterUsersInGroupBySorted(groupId:filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findByHcpartyIdId:(NSString *)id completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findByHcpartyId(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)findByPatientIdId:(NSString *)id completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("findByPatientId(id:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getCurrentUserWithCompletionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getCurrentUser(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getMatchingUsersWithCompletionHandler:(void (^)(NSArray<CDSSLCardinal_sdkUserGroup *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getMatchingUsers(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTokenUserId:(NSString *)userId key:(NSString *)key tokenValidity:(CDSSLLong * _Nullable)tokenValidity token:(NSString * _Nullable)token completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getToken(userId:key:tokenValidity:token:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTokenInAllGroupsUserIdentifier:(NSString *)userIdentifier key:(NSString *)key token:(NSString * _Nullable)token tokenValidity:(CDSSLLong * _Nullable)tokenValidity completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkTokenWithGroup *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTokenInAllGroups(userIdentifier:key:token:tokenValidity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getTokenInGroupGroupId:(NSString *)groupId userId:(NSString *)userId key:(NSString *)key token:(NSString * _Nullable)token tokenValidity:(CDSSLLong * _Nullable)tokenValidity completionHandler:(void (^)(NSString * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getTokenInGroup(groupId:userId:key:token:tokenValidity:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserUserId:(NSString *)userId completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUser(userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserByEmailEmail:(NSString *)email completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUserByEmail(email:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUserByPhoneNumberPhoneNumber:(NSString *)phoneNumber completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUserByPhoneNumber(phoneNumber:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUsersUserIds:(NSArray<NSString *> *)userIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkUser *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUsers(userIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)getUsersInGroupGroupId:(NSString *)groupId userIds:(NSArray<NSString *> *)userIds completionHandler:(void (^)(NSArray<CDSSLCardinal_sdkUser *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("getUsersInGroup(groupId:userIds:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listUsersByStartKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit skipPatients:(CDSSLBoolean * _Nullable)skipPatients completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkUser *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listUsersBy(startKey:startDocumentId:limit:skipPatients:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)listUsersInGroupGroupId:(NSString *)groupId startKey:(NSString * _Nullable)startKey startDocumentId:(NSString * _Nullable)startDocumentId limit:(CDSSLInt * _Nullable)limit completionHandler:(void (^)(CDSSLCardinal_sdkPaginatedList<CDSSLCardinal_sdkUser *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("listUsersInGroup(groupId:startKey:startDocumentId:limit:completionHandler:)"))) __attribute__((deprecated("List methods are deprecated")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchUsersByFilter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchUsersBy(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchUsersBySortedFilter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchUsersBySorted(filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchUsersInGroupByGroupId:(NSString *)groupId filter:(id<CDSSLCardinal_sdkBaseFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchUsersInGroupBy(groupId:filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)matchUsersInGroupBySortedGroupId:(NSString *)groupId filter:(id<CDSSLCardinal_sdkBaseSortableFilterOptions>)filter completionHandler:(void (^)(NSArray<NSString *> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("matchUsersInGroupBySorted(groupId:filter:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyPropertiesUserId:(NSString *)userId properties:(NSArray<CDSSLCardinal_sdkEncryptedPropertyStub *> * _Nullable)properties completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyProperties(userId:properties:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyUserUser:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyUser(user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)modifyUserInGroupGroupId:(NSString *)groupId user:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("modifyUserInGroup(groupId:user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeUserUser:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeUser(user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)purgeUserByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("purgeUserById(id:rev:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetUserRolesUserId:(NSString *)userId completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resetUserRoles(userId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)resetUserRolesInGroupUserId:(NSString *)userId groupId:(NSString *)groupId completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("resetUserRolesInGroup(userId:groupId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setUserRolesUserId:(NSString *)userId rolesId:(CDSSLCardinal_sdkListOfIds *)rolesId completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setUserRoles(userId:rolesId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)setUserRolesInGroupUserId:(NSString *)userId groupId:(NSString *)groupId rolesId:(CDSSLCardinal_sdkListOfIds *)rolesId completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("setUserRolesInGroup(userId:groupId:rolesId:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteUserUser:(CDSSLCardinal_sdkUser *)user completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteUser(user:completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)undeleteUserByIdId:(NSString *)id rev:(NSString *)rev completionHandler:(void (^)(CDSSLCardinal_sdkUser * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("undeleteUserById(id:rev:completionHandler:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoStrategiesUnavailableKeyInfo")))
@interface CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfo : CDSSLBase
- (instancetype)initWithPublicKey:(id)publicKey keyAlgorithm:(id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>)keyAlgorithm __attribute__((swift_name("init(publicKey:keyAlgorithm:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfoCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfo *)doCopyPublicKey:(id)publicKey keyAlgorithm:(id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm>)keyAlgorithm __attribute__((swift_name("doCopy(publicKey:keyAlgorithm:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLLibRsaAlgorithmRsaEncryptionAlgorithm> keyAlgorithm __attribute__((swift_name("keyAlgorithm")));
@property (readonly) id publicKey __attribute__((swift_name("publicKey")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoStrategiesKeyDataRecoveryRequest.Companion")))
@interface CDSSLCardinal_sdkCryptoStrategiesKeyDataRecoveryRequestCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCryptoStrategiesKeyDataRecoveryRequestCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRecoveryDataKey")))
@interface CDSSLCardinal_sdkRecoveryDataKey : CDSSLBase
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRecoveryDataKeyCompanion *companion __attribute__((swift_name("companion")));
- (NSString *)asBase32 __attribute__((swift_name("asBase32()")));
- (id)asHexString __attribute__((swift_name("asHexString()")));
- (CDSSLKotlinByteArray *)asRawBytes __attribute__((swift_name("asRawBytes()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/crypto/entities/RecoveryResultSerializer))
*/
__attribute__((swift_name("Cardinal_sdkRecoveryResult")))
@protocol CDSSLCardinal_sdkRecoveryResult
@required
@property (readonly) BOOL isSuccess __attribute__((swift_name("isSuccess")));
@property (readonly) id value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpUrl")))
@interface CDSSLKtor_httpUrl : CDSSLBase
@property (class, readonly, getter=companion) CDSSLKtor_httpUrlCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *encodedFragment __attribute__((swift_name("encodedFragment")));
@property (readonly) NSString * _Nullable encodedPassword __attribute__((swift_name("encodedPassword")));
@property (readonly) NSString *encodedPath __attribute__((swift_name("encodedPath")));
@property (readonly) NSString *encodedPathAndQuery __attribute__((swift_name("encodedPathAndQuery")));
@property (readonly) NSString *encodedQuery __attribute__((swift_name("encodedQuery")));
@property (readonly) NSString * _Nullable encodedUser __attribute__((swift_name("encodedUser")));
@property (readonly) NSString *fragment __attribute__((swift_name("fragment")));
@property (readonly) NSString *host __attribute__((swift_name("host")));
@property (readonly) id<CDSSLKtor_httpParameters> parameters __attribute__((swift_name("parameters")));
@property (readonly) NSString * _Nullable password __attribute__((swift_name("password")));
@property (readonly) NSArray<NSString *> *pathSegments __attribute__((swift_name("pathSegments"))) __attribute__((deprecated("\n        `pathSegments` is deprecated.\n\n        This property will contain an empty path segment at the beginning for URLs with a hostname,\n        and an empty path segment at the end for the URLs with a trailing slash. If you need to keep this behaviour please\n        use [rawSegments]. If you only need to access the meaningful parts of the path, consider using [segments] instead.\n             \n        Please decide if you need [rawSegments] or [segments] explicitly.\n        ")));
@property (readonly) int32_t port __attribute__((swift_name("port")));
@property (readonly) CDSSLKtor_httpURLProtocol *protocol __attribute__((swift_name("protocol")));
@property (readonly) CDSSLKtor_httpURLProtocol * _Nullable protocolOrNull __attribute__((swift_name("protocolOrNull")));
@property (readonly) NSArray<NSString *> *rawSegments __attribute__((swift_name("rawSegments")));
@property (readonly) NSArray<NSString *> *segments __attribute__((swift_name("segments")));
@property (readonly) int32_t specifiedPort __attribute__((swift_name("specifiedPort")));
@property (readonly) BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property (readonly) NSString * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpMethod")))
@interface CDSSLKtor_httpHttpMethod : CDSSLBase
- (instancetype)initWithValue:(NSString *)value __attribute__((swift_name("init(value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKtor_httpHttpMethodCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLKtor_httpHttpMethod *)doCopyValue:(NSString *)value __attribute__((swift_name("doCopy(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("Ktor_utilsStringValues")))
@protocol CDSSLKtor_utilsStringValues
@required
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<CDSSLKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (void)forEachBody:(void (^)(NSString *, NSArray<NSString *> *))body __attribute__((swift_name("forEach(body:)")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((swift_name("Ktor_httpHeaders")))
@protocol CDSSLKtor_httpHeaders <CDSSLKtor_utilsStringValues>
@required
@end

__attribute__((swift_name("Ktor_httpOutgoingContent")))
@interface CDSSLKtor_httpOutgoingContent : CDSSLBase
- (id _Nullable)getPropertyKey:(CDSSLKtor_utilsAttributeKey<id> *)key __attribute__((swift_name("getProperty(key:)")));
- (void)setPropertyKey:(CDSSLKtor_utilsAttributeKey<id> *)key value:(id _Nullable)value __attribute__((swift_name("setProperty(key:value:)")));
- (id<CDSSLKtor_httpHeaders> _Nullable)trailers __attribute__((swift_name("trailers()")));
@property (readonly) CDSSLLong * _Nullable contentLength __attribute__((swift_name("contentLength")));
@property (readonly) CDSSLKtor_httpContentType * _Nullable contentType __attribute__((swift_name("contentType")));
@property (readonly) id<CDSSLKtor_httpHeaders> headers __attribute__((swift_name("headers")));
@property (readonly) CDSSLKtor_httpHttpStatusCode * _Nullable status __attribute__((swift_name("status")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreJob")))
@protocol CDSSLKotlinx_coroutines_coreJob <CDSSLKotlinCoroutineContextElement>
@required

/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
- (id<CDSSLKotlinx_coroutines_coreChildHandle>)attachChildChild:(id<CDSSLKotlinx_coroutines_coreChildJob>)child __attribute__((swift_name("attachChild(child:)")));
- (void)cancelCause:(CDSSLKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
- (CDSSLKotlinCancellationException *)getCancellationException __attribute__((swift_name("getCancellationException()")));
- (id<CDSSLKotlinx_coroutines_coreDisposableHandle>)invokeOnCompletionHandler:(void (^)(CDSSLKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(handler:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
- (id<CDSSLKotlinx_coroutines_coreDisposableHandle>)invokeOnCompletionOnCancelling:(BOOL)onCancelling invokeImmediately:(BOOL)invokeImmediately handler:(void (^)(CDSSLKotlinThrowable * _Nullable))handler __attribute__((swift_name("invokeOnCompletion(onCancelling:invokeImmediately:handler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)joinWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("join(completionHandler:)")));
- (id<CDSSLKotlinx_coroutines_coreJob>)plusOther_:(id<CDSSLKotlinx_coroutines_coreJob>)other __attribute__((swift_name("plus(other_:)"))) __attribute__((unavailable("Operator '+' on two Job objects is meaningless. Job is a coroutine context element and `+` is a set-sum operator for coroutine contexts. The job to the right of `+` just replaces the job the left of `+`.")));
- (BOOL)start __attribute__((swift_name("start()")));
@property (readonly) id<CDSSLKotlinSequence> children __attribute__((swift_name("children")));
@property (readonly) BOOL isActive __attribute__((swift_name("isActive")));
@property (readonly) BOOL isCancelled __attribute__((swift_name("isCancelled")));
@property (readonly) BOOL isCompleted __attribute__((swift_name("isCompleted")));
@property (readonly) id<CDSSLKotlinx_coroutines_coreSelectClause0> onJoin __attribute__((swift_name("onJoin")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
@property (readonly) id<CDSSLKotlinx_coroutines_coreJob> _Nullable parent __attribute__((swift_name("parent")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpStatusCode")))
@interface CDSSLKtor_httpHttpStatusCode : CDSSLBase <CDSSLKotlinComparable>
- (instancetype)initWithValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("init(value:description:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKtor_httpHttpStatusCodeCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(CDSSLKtor_httpHttpStatusCode *)other __attribute__((swift_name("compareTo(other:)")));
- (CDSSLKtor_httpHttpStatusCode *)doCopyValue:(int32_t)value description:(NSString *)description __attribute__((swift_name("doCopy(value:description:)")));
- (CDSSLKtor_httpHttpStatusCode *)descriptionValue:(NSString *)value __attribute__((swift_name("description(value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *description_ __attribute__((swift_name("description_")));
@property (readonly) int32_t value __attribute__((swift_name("value")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsGMTDate")))
@interface CDSSLKtor_utilsGMTDate : CDSSLBase <CDSSLKotlinComparable>
- (instancetype)initWithSeconds:(int32_t)seconds minutes:(int32_t)minutes hours:(int32_t)hours dayOfWeek:(CDSSLKtor_utilsWeekDay *)dayOfWeek dayOfMonth:(int32_t)dayOfMonth dayOfYear:(int32_t)dayOfYear month:(CDSSLKtor_utilsMonth *)month year:(int32_t)year timestamp:(int64_t)timestamp __attribute__((swift_name("init(seconds:minutes:hours:dayOfWeek:dayOfMonth:dayOfYear:month:year:timestamp:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKtor_utilsGMTDateCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(CDSSLKtor_utilsGMTDate *)other __attribute__((swift_name("compareTo(other:)")));
- (CDSSLKtor_utilsGMTDate *)doCopy __attribute__((swift_name("doCopy()")));
- (CDSSLKtor_utilsGMTDate *)doCopySeconds:(int32_t)seconds minutes:(int32_t)minutes hours:(int32_t)hours dayOfWeek:(CDSSLKtor_utilsWeekDay *)dayOfWeek dayOfMonth:(int32_t)dayOfMonth dayOfYear:(int32_t)dayOfYear month:(CDSSLKtor_utilsMonth *)month year:(int32_t)year timestamp:(int64_t)timestamp __attribute__((swift_name("doCopy(seconds:minutes:hours:dayOfWeek:dayOfMonth:dayOfYear:month:year:timestamp:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t dayOfMonth __attribute__((swift_name("dayOfMonth")));
@property (readonly) CDSSLKtor_utilsWeekDay *dayOfWeek __attribute__((swift_name("dayOfWeek")));
@property (readonly) int32_t dayOfYear __attribute__((swift_name("dayOfYear")));
@property (readonly) int32_t hours __attribute__((swift_name("hours")));
@property (readonly) int32_t minutes __attribute__((swift_name("minutes")));
@property (readonly) CDSSLKtor_utilsMonth *month __attribute__((swift_name("month")));
@property (readonly) int32_t seconds __attribute__((swift_name("seconds")));
@property (readonly) int64_t timestamp __attribute__((swift_name("timestamp")));
@property (readonly) int32_t year __attribute__((swift_name("year")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpProtocolVersion")))
@interface CDSSLKtor_httpHttpProtocolVersion : CDSSLBase
- (instancetype)initWithName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("init(name:major:minor:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKtor_httpHttpProtocolVersionCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLKtor_httpHttpProtocolVersion *)doCopyName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("doCopy(name:major:minor:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t major __attribute__((swift_name("major")));
@property (readonly) int32_t minor __attribute__((swift_name("minor")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
*/
__attribute__((swift_name("KotlinContinuation")))
@protocol CDSSLKotlinContinuation
@required
- (void)resumeWithResult:(id _Nullable)result __attribute__((swift_name("resumeWith(result:)")));
@property (readonly) id<CDSSLKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.3")
 *   kotlin.ExperimentalStdlibApi
*/
__attribute__((swift_name("KotlinAbstractCoroutineContextKey")))
@interface CDSSLKotlinAbstractCoroutineContextKey<B, E> : CDSSLBase <CDSSLKotlinCoroutineContextKey>
- (instancetype)initWithBaseKey:(id<CDSSLKotlinCoroutineContextKey>)baseKey safeCast:(E _Nullable (^)(id<CDSSLKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer));
@end


/**
 * @note annotations
 *   kotlin.ExperimentalStdlibApi
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_coroutines_coreCoroutineDispatcher.Key")))
@interface CDSSLKotlinx_coroutines_coreCoroutineDispatcherKey : CDSSLKotlinAbstractCoroutineContextKey<id<CDSSLKotlinContinuationInterceptor>, CDSSLKotlinx_coroutines_coreCoroutineDispatcher *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithBaseKey:(id<CDSSLKotlinCoroutineContextKey>)baseKey safeCast:(id<CDSSLKotlinCoroutineContextElement> _Nullable (^)(id<CDSSLKotlinCoroutineContextElement>))safeCast __attribute__((swift_name("init(baseKey:safeCast:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
+ (instancetype)key __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_coroutines_coreCoroutineDispatcherKey *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreRunnable")))
@protocol CDSSLKotlinx_coroutines_coreRunnable
@required
- (void)run __attribute__((swift_name("run()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsTypeInfo")))
@interface CDSSLKtor_utilsTypeInfo : CDSSLBase
- (instancetype)initWithType:(id<CDSSLKotlinKClass>)type kotlinType:(id<CDSSLKotlinKType> _Nullable)kotlinType __attribute__((swift_name("init(type:kotlinType:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithType:(id<CDSSLKotlinKClass>)type reifiedType:(id<CDSSLKotlinKType>)reifiedType kotlinType:(id<CDSSLKotlinKType> _Nullable)kotlinType __attribute__((swift_name("init(type:reifiedType:kotlinType:)"))) __attribute__((objc_designated_initializer)) __attribute__((deprecated("Use constructor without reifiedType parameter.")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLKotlinKType> _Nullable kotlinType __attribute__((swift_name("kotlinType")));
@property (readonly) id<CDSSLKotlinKClass> type __attribute__((swift_name("type")));
@end

__attribute__((swift_name("Ktor_ioByteReadChannel")))
@protocol CDSSLKtor_ioByteReadChannel
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)awaitContentMin:(int32_t)min completionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("awaitContent(min:completionHandler:)")));
- (void)cancelCause_:(CDSSLKotlinThrowable * _Nullable)cause __attribute__((swift_name("cancel(cause_:)")));
@property (readonly) CDSSLKotlinThrowable * _Nullable closedCause __attribute__((swift_name("closedCause")));
@property (readonly) BOOL isClosedForRead __attribute__((swift_name("isClosedForRead")));
@property (readonly) id<CDSSLKotlinx_io_coreSource> readBuffer __attribute__((swift_name("readBuffer")));
@end

__attribute__((swift_name("Ktor_utilsStringValuesBuilder")))
@protocol CDSSLKtor_utilsStringValuesBuilder
@required
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<CDSSLKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<CDSSLKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<CDSSLKtor_utilsStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<CDSSLKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));
@end

__attribute__((swift_name("Ktor_utilsStringValuesBuilderImpl")))
@interface CDSSLKtor_utilsStringValuesBuilderImpl : CDSSLBase <CDSSLKtor_utilsStringValuesBuilder>
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer));
- (void)appendName:(NSString *)name value:(NSString *)value __attribute__((swift_name("append(name:value:)")));
- (void)appendAllStringValues:(id<CDSSLKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendAll(stringValues:)")));
- (void)appendAllName:(NSString *)name values:(id)values __attribute__((swift_name("appendAll(name:values:)")));
- (void)appendMissingStringValues:(id<CDSSLKtor_utilsStringValues>)stringValues __attribute__((swift_name("appendMissing(stringValues:)")));
- (void)appendMissingName:(NSString *)name values:(id)values __attribute__((swift_name("appendMissing(name:values:)")));
- (id<CDSSLKtor_utilsStringValues>)build __attribute__((swift_name("build()")));
- (void)clear __attribute__((swift_name("clear()")));
- (BOOL)containsName:(NSString *)name __attribute__((swift_name("contains(name:)")));
- (BOOL)containsName:(NSString *)name value:(NSString *)value __attribute__((swift_name("contains(name:value:)")));
- (NSSet<id<CDSSLKotlinMapEntry>> *)entries __attribute__((swift_name("entries()")));
- (NSString * _Nullable)getName:(NSString *)name __attribute__((swift_name("get(name:)")));
- (NSArray<NSString *> * _Nullable)getAllName:(NSString *)name __attribute__((swift_name("getAll(name:)")));
- (BOOL)isEmpty_ __attribute__((swift_name("isEmpty()")));
- (NSSet<NSString *> *)names __attribute__((swift_name("names()")));
- (void)removeName:(NSString *)name __attribute__((swift_name("remove(name:)")));
- (BOOL)removeName:(NSString *)name value:(NSString *)value __attribute__((swift_name("remove(name:value:)")));
- (void)removeKeysWithNoEntries __attribute__((swift_name("removeKeysWithNoEntries()")));
- (void)setName:(NSString *)name value:(NSString *)value __attribute__((swift_name("set(name:value:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@property (readonly) BOOL caseInsensitiveName __attribute__((swift_name("caseInsensitiveName")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) CDSSLMutableDictionary<NSString *, NSMutableArray<NSString *> *> *values __attribute__((swift_name("values")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeadersBuilder")))
@interface CDSSLKtor_httpHeadersBuilder : CDSSLKtor_utilsStringValuesBuilderImpl
- (instancetype)initWithSize:(int32_t)size __attribute__((swift_name("init(size:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithCaseInsensitiveName:(BOOL)caseInsensitiveName size:(int32_t)size __attribute__((swift_name("init(caseInsensitiveName:size:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
- (id<CDSSLKtor_httpHeaders>)build __attribute__((swift_name("build()")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateNameName:(NSString *)name __attribute__((swift_name("validateName(name:)")));

/**
 * @note This method has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
- (void)validateValueValue:(NSString *)value __attribute__((swift_name("validateValue(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpRequestBuilder.Companion")))
@interface CDSSLKtor_client_coreHttpRequestBuilderCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_client_coreHttpRequestBuilderCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLBuilder")))
@interface CDSSLKtor_httpURLBuilder : CDSSLBase
- (instancetype)initWithProtocol:(CDSSLKtor_httpURLProtocol * _Nullable)protocol host:(NSString *)host port:(int32_t)port user:(NSString * _Nullable)user password:(NSString * _Nullable)password pathSegments:(NSArray<NSString *> *)pathSegments parameters:(id<CDSSLKtor_httpParameters>)parameters fragment:(NSString *)fragment trailingQuery:(BOOL)trailingQuery __attribute__((swift_name("init(protocol:host:port:user:password:pathSegments:parameters:fragment:trailingQuery:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKtor_httpURLBuilderCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLKtor_httpUrl *)build __attribute__((swift_name("build()")));
- (NSString *)buildString __attribute__((swift_name("buildString()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property NSString *encodedFragment __attribute__((swift_name("encodedFragment")));
@property id<CDSSLKtor_httpParametersBuilder> encodedParameters __attribute__((swift_name("encodedParameters")));
@property NSString * _Nullable encodedPassword __attribute__((swift_name("encodedPassword")));
@property NSArray<NSString *> *encodedPathSegments __attribute__((swift_name("encodedPathSegments")));
@property NSString * _Nullable encodedUser __attribute__((swift_name("encodedUser")));
@property NSString *fragment __attribute__((swift_name("fragment")));
@property NSString *host __attribute__((swift_name("host")));
@property (readonly) id<CDSSLKtor_httpParametersBuilder> parameters __attribute__((swift_name("parameters")));
@property NSString * _Nullable password __attribute__((swift_name("password")));
@property NSArray<NSString *> *pathSegments __attribute__((swift_name("pathSegments")));
@property int32_t port __attribute__((swift_name("port")));
@property CDSSLKtor_httpURLProtocol *protocol __attribute__((swift_name("protocol")));
@property CDSSLKtor_httpURLProtocol * _Nullable protocolOrNull __attribute__((swift_name("protocolOrNull")));
@property BOOL trailingQuery __attribute__((swift_name("trailingQuery")));
@property NSString * _Nullable user __attribute__((swift_name("user")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_client_coreHttpClientCall.Companion")))
@interface CDSSLKtor_client_coreHttpClientCallCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_client_coreHttpClientCallCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Ktor_client_coreHttpRequest")))
@protocol CDSSLKtor_client_coreHttpRequest <CDSSLKtor_httpHttpMessage, CDSSLKotlinx_coroutines_coreCoroutineScope>
@required
@property (readonly) id<CDSSLKtor_utilsAttributes> attributes __attribute__((swift_name("attributes")));
@property (readonly) CDSSLKtor_client_coreHttpClientCall *call __attribute__((swift_name("call")));
@property (readonly) CDSSLKtor_httpOutgoingContent *content __attribute__((swift_name("content")));
@property (readonly) CDSSLKtor_httpHttpMethod *method __attribute__((swift_name("method")));
@property (readonly) CDSSLKtor_httpUrl *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDataOwnerType.Companion")))
@interface CDSSLCardinal_sdkDataOwnerTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDataOwnerTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((swift_name("Cardinal_sdkCodeIdentification")))
@protocol CDSSLCardinal_sdkCodeIdentification
@required
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) NSString * _Nullable context __attribute__((swift_name("context")));
@property (readonly) id _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCodeStub")))
@interface CDSSLCardinal_sdkCodeStub : CDSSLBase <CDSSLCardinal_sdkCodeIdentification>
- (instancetype)initWithId:(NSString * _Nullable)id context:(NSString * _Nullable)context type:(NSString * _Nullable)type code:(NSString * _Nullable)code version:(NSString * _Nullable)version contextLabel:(NSString * _Nullable)contextLabel label:(NSDictionary<NSString *, NSString *> * _Nullable)label __attribute__((swift_name("init(id:context:type:code:version:contextLabel:label:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCodeStubCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkCodeStub *)doCopyId:(NSString * _Nullable)id context:(NSString * _Nullable)context type:(NSString * _Nullable)type code:(NSString * _Nullable)code version:(NSString * _Nullable)version contextLabel:(NSString * _Nullable)contextLabel label:(NSDictionary<NSString *, NSString *> * _Nullable)label __attribute__((swift_name("doCopy(id:context:type:code:version:contextLabel:label:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) NSString * _Nullable context __attribute__((swift_name("context")));
@property (readonly) NSString * _Nullable contextLabel __attribute__((swift_name("contextLabel")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable version __attribute__((swift_name("version")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoActorStub.Companion")))
@interface CDSSLCardinal_sdkCryptoActorStubCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCryptoActorStubCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("Cardinal_sdkStoredDocument")))
@protocol CDSSLCardinal_sdkStoredDocument <CDSSLCardinal_sdkVersionable>
@required
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@end

__attribute__((swift_name("Cardinal_sdkHasCodes")))
@protocol CDSSLCardinal_sdkHasCodes
@required
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@end

__attribute__((swift_name("Cardinal_sdkICureDocument")))
@protocol CDSSLCardinal_sdkICureDocument <CDSSLCardinal_sdkIdentifiable, CDSSLCardinal_sdkHasTags, CDSSLCardinal_sdkHasCodes>
@required
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@end

__attribute__((swift_name("Cardinal_sdkHasEncryptionMetadata")))
@protocol CDSSLCardinal_sdkHasEncryptionMetadata <CDSSLCardinal_sdkVersionable>
@required
- (id<CDSSLCardinal_sdkHasEncryptionMetadata>)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@end

__attribute__((swift_name("Cardinal_sdkEncryptable")))
@protocol CDSSLCardinal_sdkEncryptable
@required
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@end

__attribute__((swift_name("Cardinal_sdkAccessLog")))
@protocol CDSSLCardinal_sdkAccessLog <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString * _Nullable accessType __attribute__((swift_name("accessType")));
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable date __attribute__((swift_name("date")));
@property (readonly) NSString * _Nullable detail __attribute__((swift_name("detail")));
@property (readonly) NSString * _Nullable objectId __attribute__((swift_name("objectId")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSString * _Nullable user __attribute__((swift_name("user")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedAccessLog")))
@interface CDSSLCardinal_sdkDecryptedAccessLog : CDSSLBase <CDSSLCardinal_sdkAccessLog>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate objectId:(NSString * _Nullable)objectId accessType:(NSString * _Nullable)accessType user:(NSString * _Nullable)user detail:(NSString * _Nullable)detail date:(CDSSLKotlinx_datetimeInstant * _Nullable)date patientId:(NSString * _Nullable)patientId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:objectId:accessType:user:detail:date:patientId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedAccessLogCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedAccessLog *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate objectId:(NSString * _Nullable)objectId accessType:(NSString * _Nullable)accessType user:(NSString * _Nullable)user detail:(NSString * _Nullable)detail date:(CDSSLKotlinx_datetimeInstant * _Nullable)date patientId:(NSString * _Nullable)patientId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:objectId:accessType:user:detail:date:patientId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedAccessLog *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable accessType __attribute__((swift_name("accessType")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable date __attribute__((swift_name("date")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable detail __attribute__((swift_name("detail")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable objectId __attribute__((swift_name("objectId")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable user __attribute__((swift_name("user")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedAccessLog")))
@interface CDSSLCardinal_sdkEncryptedAccessLog : CDSSLBase <CDSSLCardinal_sdkAccessLog>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate objectId:(NSString * _Nullable)objectId accessType:(NSString * _Nullable)accessType user:(NSString * _Nullable)user detail:(NSString * _Nullable)detail date:(CDSSLKotlinx_datetimeInstant * _Nullable)date patientId:(NSString * _Nullable)patientId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:objectId:accessType:user:detail:date:patientId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedAccessLogCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedAccessLog *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate objectId:(NSString * _Nullable)objectId accessType:(NSString * _Nullable)accessType user:(NSString * _Nullable)user detail:(NSString * _Nullable)detail date:(CDSSLKotlinx_datetimeInstant * _Nullable)date patientId:(NSString * _Nullable)patientId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:objectId:accessType:user:detail:date:patientId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedAccessLog *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable accessType __attribute__((swift_name("accessType")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable date __attribute__((swift_name("date")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable detail __attribute__((swift_name("detail")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable objectId __attribute__((swift_name("objectId")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable user __attribute__((swift_name("user")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkFilterOptions")))
@protocol CDSSLCardinal_sdkFilterOptions
@required
- (id<CDSSLCardinal_sdkFilterOptions>)andOther:(id<CDSSLCardinal_sdkFilterOptions>)other __attribute__((swift_name("and(other:)")));
- (id<CDSSLCardinal_sdkFilterOptions>)minusOther:(id<CDSSLCardinal_sdkFilterOptions>)other __attribute__((swift_name("minus(other:)")));
- (id<CDSSLCardinal_sdkFilterOptions>)orOther:(id<CDSSLCardinal_sdkFilterOptions>)other __attribute__((swift_name("or(other:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkSortableFilterOptions")))
@protocol CDSSLCardinal_sdkSortableFilterOptions <CDSSLCardinal_sdkFilterOptions>
@required
@end

__attribute__((swift_name("Cardinal_sdkPerson")))
@protocol CDSSLCardinal_sdkPerson <CDSSLCardinal_sdkIdentifiable>
@required
@property (readonly) NSArray<id<CDSSLCardinal_sdkAddress>> *addresses __attribute__((swift_name("addresses")));
@property (readonly) NSString * _Nullable civility __attribute__((swift_name("civility")));
@property (readonly) NSString * _Nullable companyName __attribute__((swift_name("companyName")));
@property (readonly) NSString * _Nullable firstName __attribute__((swift_name("firstName")));
@property (readonly) CDSSLCardinal_sdkGender * _Nullable gender __attribute__((swift_name("gender")));
@property (readonly) NSArray<NSString *> *languages __attribute__((swift_name("languages")));
@property (readonly) NSString * _Nullable lastName __attribute__((swift_name("lastName")));
@property (readonly, getter=names_) NSArray<CDSSLCardinal_sdkPersonName *> *names __attribute__((swift_name("names")));
@end

__attribute__((swift_name("Cardinal_sdkPatient")))
@protocol CDSSLCardinal_sdkPatient <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkPerson, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable, CDSSLCardinal_sdkCryptoActor>
@required
@property (readonly) BOOL active __attribute__((swift_name("active")));
@property (readonly) NSString * _Nullable administrativeNote __attribute__((swift_name("administrativeNote")));
@property (readonly) NSString * _Nullable alias __attribute__((swift_name("alias")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable birthCountry __attribute__((swift_name("birthCountry")));
@property (readonly) CDSSLCardinal_sdkGender * _Nullable birthSex __attribute__((swift_name("birthSex")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) CDSSLInt * _Nullable dateOfBirth __attribute__((swift_name("dateOfBirth")));
@property (readonly) CDSSLInt * _Nullable dateOfDeath __attribute__((swift_name("dateOfDeath")));
@property (readonly) CDSSLInt * _Nullable deactivationDate __attribute__((swift_name("deactivationDate")));
@property (readonly) CDSSLCardinal_sdkDeactivationReason *deactivationReason __attribute__((swift_name("deactivationReason")));
@property (readonly) CDSSLBoolean * _Nullable deceased __attribute__((swift_name("deceased")));
@property (readonly) NSString * _Nullable education __attribute__((swift_name("education")));
@property (readonly) NSArray<CDSSLCardinal_sdkEmploymentInfo *> *employementInfos __attribute__((swift_name("employementInfos")));
@property (readonly) NSSet<NSString *> *encryptedAdministrativesDocuments __attribute__((swift_name("encryptedAdministrativesDocuments")));
@property (readonly) NSString * _Nullable ethnicity __attribute__((swift_name("ethnicity")));
@property (readonly) NSString * _Nullable externalId __attribute__((swift_name("externalId")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable fatherBirthCountry __attribute__((swift_name("fatherBirthCountry")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkFinancialInstitutionInformation>> *financialInstitutionInformation __attribute__((swift_name("financialInstitutionInformation")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkInsurability>> *insurabilities __attribute__((swift_name("insurabilities")));
@property (readonly) NSString * _Nullable maidenName __attribute__((swift_name("maidenName")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable mainSourceOfIncome __attribute__((swift_name("mainSourceOfIncome")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkMedicalHouseContract>> *medicalHouseContracts __attribute__((swift_name("medicalHouseContracts")));
@property (readonly) NSString * _Nullable mergeToPatientId __attribute__((swift_name("mergeToPatientId")));
@property (readonly) NSSet<NSString *> *mergedIds __attribute__((swift_name("mergedIds")));
@property (readonly) NSString * _Nullable nationality __attribute__((swift_name("nationality")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable nativeCountry __attribute__((swift_name("nativeCountry")));
@property (readonly) NSSet<NSString *> *nonDuplicateIds __attribute__((swift_name("nonDuplicateIds")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSDictionary<NSString *, NSArray<NSString *> *> *parameters __attribute__((swift_name("parameters")));
@property (readonly) NSString * _Nullable partnerName __attribute__((swift_name("partnerName")));
@property (readonly) NSArray<CDSSLCardinal_sdkPartnership *> *partnerships __attribute__((swift_name("partnerships")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkPatientHealthCareParty>> *patientHealthCareParties __attribute__((swift_name("patientHealthCareParties")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *patientProfessions __attribute__((swift_name("patientProfessions")));
@property (readonly) CDSSLCardinal_sdkPersonalStatus * _Nullable personalStatus __attribute__((swift_name("personalStatus")));
@property (readonly) CDSSLKotlinByteArray * _Nullable picture __attribute__((swift_name("picture")));
@property (readonly) NSString * _Nullable placeOfBirth __attribute__((swift_name("placeOfBirth")));
@property (readonly) NSString * _Nullable placeOfDeath __attribute__((swift_name("placeOfDeath")));
@property (readonly) NSString * _Nullable preferredUserId __attribute__((swift_name("preferredUserId")));
@property (readonly) NSString * _Nullable profession __attribute__((swift_name("profession")));
@property (readonly) NSSet<id<CDSSLCardinal_sdkPropertyStub>> *properties __attribute__((swift_name("properties")));
@property (readonly) NSString * _Nullable race __attribute__((swift_name("race")));
@property (readonly) NSArray<CDSSLCardinal_sdkSchoolingInfo *> *schoolingInfos __attribute__((swift_name("schoolingInfos")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable socialStatus __attribute__((swift_name("socialStatus")));
@property (readonly) NSString * _Nullable spouseName __attribute__((swift_name("spouseName")));
@property (readonly) NSString * _Nullable ssin __attribute__((swift_name("ssin")));
@property (readonly) CDSSLLong * _Nullable timestampOfLatestEidReading __attribute__((swift_name("timestampOfLatestEidReading")));
@property (readonly) NSString * _Nullable warning __attribute__((swift_name("warning")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUser")))
@interface CDSSLCardinal_sdkUser : CDSSLBase <CDSSLCardinal_sdkStoredDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate created:(CDSSLLong * _Nullable)created identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier name:(NSString * _Nullable)name properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties permissions:(NSSet<CDSSLCardinal_sdkPermission *> *)permissions roles:(NSSet<NSString *> *)roles type:(CDSSLCardinal_sdkUsersType * _Nullable)type status:(CDSSLCardinal_sdkUsersStatus * _Nullable)status login:(NSString * _Nullable)login passwordHash:(NSString * _Nullable)passwordHash groupId:(NSString * _Nullable)groupId healthcarePartyId:(NSString * _Nullable)healthcarePartyId patientId:(NSString * _Nullable)patientId deviceId:(NSString * _Nullable)deviceId autoDelegations:(NSDictionary<CDSSLCardinal_sdkDelegationTag *, NSSet<NSString *> *> *)autoDelegations createdDate:(CDSSLKotlinx_datetimeInstant * _Nullable)createdDate termsOfUseDate:(CDSSLKotlinx_datetimeInstant * _Nullable)termsOfUseDate email:(NSString * _Nullable)email mobilePhone:(NSString * _Nullable)mobilePhone applicationTokens:(NSDictionary<NSString *, NSString *> *)applicationTokens authenticationTokens:(NSDictionary<NSString *, CDSSLCardinal_sdkAuthenticationToken *> *)authenticationTokens systemMetadata:(CDSSLCardinal_sdkUserSystemMetadata * _Nullable)systemMetadata __attribute__((swift_name("init(id:rev:deletionDate:created:identifier:name:properties:permissions:roles:type:status:login:passwordHash:groupId:healthcarePartyId:patientId:deviceId:autoDelegations:createdDate:termsOfUseDate:email:mobilePhone:applicationTokens:authenticationTokens:systemMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkUserCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkUser *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate created:(CDSSLLong * _Nullable)created identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier name:(NSString * _Nullable)name properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties permissions:(NSSet<CDSSLCardinal_sdkPermission *> *)permissions roles:(NSSet<NSString *> *)roles type:(CDSSLCardinal_sdkUsersType * _Nullable)type status:(CDSSLCardinal_sdkUsersStatus * _Nullable)status login:(NSString * _Nullable)login passwordHash:(NSString * _Nullable)passwordHash groupId:(NSString * _Nullable)groupId healthcarePartyId:(NSString * _Nullable)healthcarePartyId patientId:(NSString * _Nullable)patientId deviceId:(NSString * _Nullable)deviceId autoDelegations:(NSDictionary<CDSSLCardinal_sdkDelegationTag *, NSSet<NSString *> *> *)autoDelegations createdDate:(CDSSLKotlinx_datetimeInstant * _Nullable)createdDate termsOfUseDate:(CDSSLKotlinx_datetimeInstant * _Nullable)termsOfUseDate email:(NSString * _Nullable)email mobilePhone:(NSString * _Nullable)mobilePhone applicationTokens:(NSDictionary<NSString *, NSString *> *)applicationTokens authenticationTokens:(NSDictionary<NSString *, CDSSLCardinal_sdkAuthenticationToken *> *)authenticationTokens systemMetadata:(CDSSLCardinal_sdkUserSystemMetadata * _Nullable)systemMetadata __attribute__((swift_name("doCopy(id:rev:deletionDate:created:identifier:name:properties:permissions:roles:type:status:login:passwordHash:groupId:healthcarePartyId:patientId:deviceId:autoDelegations:createdDate:termsOfUseDate:email:mobilePhone:applicationTokens:authenticationTokens:systemMetadata:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, NSString *> *applicationTokens __attribute__((swift_name("applicationTokens")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkAuthenticationToken *> *authenticationTokens __attribute__((swift_name("authenticationTokens")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkDelegationTag *, NSSet<NSString *> *> *autoDelegations __attribute__((swift_name("autoDelegations")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable createdDate __attribute__((swift_name("createdDate")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable deviceId __attribute__((swift_name("deviceId")));
@property (readonly) NSString * _Nullable email __attribute__((swift_name("email")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSString * _Nullable login __attribute__((swift_name("login")));
@property (readonly) NSString * _Nullable mobilePhone __attribute__((swift_name("mobilePhone")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable passwordHash __attribute__((swift_name("passwordHash")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSSet<CDSSLCardinal_sdkPermission *> *permissions __attribute__((swift_name("permissions")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *roles __attribute__((swift_name("roles")));
@property (readonly) CDSSLCardinal_sdkUsersStatus * _Nullable status __attribute__((swift_name("status")));
@property (readonly) CDSSLCardinal_sdkUserSystemMetadata * _Nullable systemMetadata __attribute__((swift_name("systemMetadata")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable termsOfUseDate __attribute__((swift_name("termsOfUseDate")));
@property (readonly) CDSSLCardinal_sdkUsersType * _Nullable type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAccessLevel")))
@interface CDSSLCardinal_sdkAccessLevel : CDSSLKotlinEnum<CDSSLCardinal_sdkAccessLevel *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAccessLevelCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkAccessLevel *read __attribute__((swift_name("read")));
@property (class, readonly) CDSSLCardinal_sdkAccessLevel *write __attribute__((swift_name("write")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkAccessLevel *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkAccessLevel *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkSecretIdUseOption")))
@protocol CDSSLCardinal_sdkSecretIdUseOption
@required
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocIdentifier")))
@interface CDSSLCardinal_sdkDocIdentifier : CDSSLBase
- (instancetype)initWithId:(NSString * _Nullable)id rev:(NSString * _Nullable)rev __attribute__((swift_name("init(id:rev:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDocIdentifierCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDocIdentifier *)doCopyId:(NSString * _Nullable)id rev:(NSString * _Nullable)rev __attribute__((swift_name("doCopy(id:rev:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIdWithMandatoryRev")))
@interface CDSSLCardinal_sdkIdWithMandatoryRev : CDSSLBase
- (instancetype)initWithId:(NSString *)id rev:(NSString *)rev __attribute__((swift_name("init(id:rev:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkIdWithMandatoryRevCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkIdWithMandatoryRev *)doCopyId:(NSString *)id rev:(NSString *)rev __attribute__((swift_name("doCopy(id:rev:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *rev __attribute__((swift_name("rev")));
@end

__attribute__((swift_name("Cardinal_sdkPaginatedListIterator")))
@protocol CDSSLCardinal_sdkPaginatedListIterator
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasNextWithCompletionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasNext(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)nextLimit:(int32_t)limit completionHandler:(void (^)(NSArray<id> * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("next(limit:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkSimpleDelegateShareOptions")))
@protocol CDSSLCardinal_sdkSimpleDelegateShareOptions
@required
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAccessLogShareOptions")))
@interface CDSSLCardinal_sdkAccessLogShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAccessLogShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkAccessLogShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPaginatedList")))
@interface CDSSLCardinal_sdkPaginatedList<T> : CDSSLBase
- (instancetype)initWithRows:(NSArray<id> *)rows nextKeyPair:(CDSSLCardinal_sdkPaginatedDocumentKeyIdPair * _Nullable)nextKeyPair __attribute__((swift_name("init(rows:nextKeyPair:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPaginatedListCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPaginatedList<T> *)doCopyRows:(NSArray<id> *)rows nextKeyPair:(CDSSLCardinal_sdkPaginatedDocumentKeyIdPair * _Nullable)nextKeyPair __attribute__((swift_name("doCopy(rows:nextKeyPair:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkPaginatedList<id> *)mapMapper:(id _Nullable (^)(T _Nullable))mapper __attribute__((swift_name("map(mapper:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkPaginatedDocumentKeyIdPair * _Nullable nextKeyPair __attribute__((swift_name("nextKeyPair")));
@property (readonly) NSArray<id> *rows __attribute__((swift_name("rows")));
@end

__attribute__((swift_name("Cardinal_sdkCalendarItem")))
@protocol CDSSLCardinal_sdkCalendarItem <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) id<CDSSLCardinal_sdkAddress> _Nullable address __attribute__((swift_name("address")));
@property (readonly) NSString * _Nullable addressText __attribute__((swift_name("addressText")));
@property (readonly) NSString * _Nullable agendaId __attribute__((swift_name("agendaId")));
@property (readonly) CDSSLBoolean * _Nullable allDay __attribute__((swift_name("allDay")));
@property (readonly) NSString * _Nullable calendarItemTypeId __attribute__((swift_name("calendarItemTypeId")));
@property (readonly) CDSSLLong * _Nullable cancellationTimestamp __attribute__((swift_name("cancellationTimestamp")));
@property (readonly) NSString * _Nullable confirmationId __attribute__((swift_name("confirmationId")));
@property (readonly) CDSSLLong * _Nullable confirmationTime __attribute__((swift_name("confirmationTime")));
@property (readonly) NSString * _Nullable details __attribute__((swift_name("details")));
@property (readonly) CDSSLLong * _Nullable duration __attribute__((swift_name("duration")));
@property (readonly) CDSSLLong * _Nullable endTime __attribute__((swift_name("endTime")));
@property (readonly) CDSSLCardinal_sdkFlowItem * _Nullable flowItem __attribute__((swift_name("flowItem")));
@property (readonly) NSString * _Nullable hcpId __attribute__((swift_name("hcpId")));
@property (readonly) CDSSLBoolean * _Nullable homeVisit __attribute__((swift_name("homeVisit")));
@property (readonly) CDSSLBoolean * _Nullable important __attribute__((swift_name("important")));
@property (readonly) NSString * _Nullable masterCalendarItemId __attribute__((swift_name("masterCalendarItemId")));
@property (readonly) NSSet<CDSSLCardinal_sdkCalendarItemTag *> *meetingTags __attribute__((swift_name("meetingTags")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSString * _Nullable phoneNumber __attribute__((swift_name("phoneNumber")));
@property (readonly) NSString * _Nullable placeId __attribute__((swift_name("placeId")));
@property (readonly) NSString * _Nullable recurrenceId __attribute__((swift_name("recurrenceId")));
@property (readonly) CDSSLLong * _Nullable startTime __attribute__((swift_name("startTime")));
@property (readonly) NSString * _Nullable title __attribute__((swift_name("title")));
@property (readonly) CDSSLBoolean * _Nullable wasMigrated __attribute__((swift_name("wasMigrated")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedCalendarItem")))
@interface CDSSLCardinal_sdkDecryptedCalendarItem : CDSSLBase <CDSSLCardinal_sdkCalendarItem>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate title:(NSString * _Nullable)title calendarItemTypeId:(NSString * _Nullable)calendarItemTypeId masterCalendarItemId:(NSString * _Nullable)masterCalendarItemId patientId:(NSString * _Nullable)patientId important:(CDSSLBoolean * _Nullable)important homeVisit:(CDSSLBoolean * _Nullable)homeVisit phoneNumber:(NSString * _Nullable)phoneNumber placeId:(NSString * _Nullable)placeId address:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)address addressText:(NSString * _Nullable)addressText startTime:(CDSSLLong * _Nullable)startTime endTime:(CDSSLLong * _Nullable)endTime confirmationTime:(CDSSLLong * _Nullable)confirmationTime cancellationTimestamp:(CDSSLLong * _Nullable)cancellationTimestamp confirmationId:(NSString * _Nullable)confirmationId duration:(CDSSLLong * _Nullable)duration allDay:(CDSSLBoolean * _Nullable)allDay details:(NSString * _Nullable)details wasMigrated:(CDSSLBoolean * _Nullable)wasMigrated agendaId:(NSString * _Nullable)agendaId hcpId:(NSString * _Nullable)hcpId recurrenceId:(NSString * _Nullable)recurrenceId meetingTags:(NSSet<CDSSLCardinal_sdkCalendarItemTag *> *)meetingTags flowItem:(CDSSLCardinal_sdkFlowItem * _Nullable)flowItem secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:title:calendarItemTypeId:masterCalendarItemId:patientId:important:homeVisit:phoneNumber:placeId:address:addressText:startTime:endTime:confirmationTime:cancellationTimestamp:confirmationId:duration:allDay:details:wasMigrated:agendaId:hcpId:recurrenceId:meetingTags:flowItem:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedCalendarItemCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedCalendarItem *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate title:(NSString * _Nullable)title calendarItemTypeId:(NSString * _Nullable)calendarItemTypeId masterCalendarItemId:(NSString * _Nullable)masterCalendarItemId patientId:(NSString * _Nullable)patientId important:(CDSSLBoolean * _Nullable)important homeVisit:(CDSSLBoolean * _Nullable)homeVisit phoneNumber:(NSString * _Nullable)phoneNumber placeId:(NSString * _Nullable)placeId address:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)address addressText:(NSString * _Nullable)addressText startTime:(CDSSLLong * _Nullable)startTime endTime:(CDSSLLong * _Nullable)endTime confirmationTime:(CDSSLLong * _Nullable)confirmationTime cancellationTimestamp:(CDSSLLong * _Nullable)cancellationTimestamp confirmationId:(NSString * _Nullable)confirmationId duration:(CDSSLLong * _Nullable)duration allDay:(CDSSLBoolean * _Nullable)allDay details:(NSString * _Nullable)details wasMigrated:(CDSSLBoolean * _Nullable)wasMigrated agendaId:(NSString * _Nullable)agendaId hcpId:(NSString * _Nullable)hcpId recurrenceId:(NSString * _Nullable)recurrenceId meetingTags:(NSSet<CDSSLCardinal_sdkCalendarItemTag *> *)meetingTags flowItem:(CDSSLCardinal_sdkFlowItem * _Nullable)flowItem secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:title:calendarItemTypeId:masterCalendarItemId:patientId:important:homeVisit:phoneNumber:placeId:address:addressText:startTime:endTime:confirmationTime:cancellationTimestamp:confirmationId:duration:allDay:details:wasMigrated:agendaId:hcpId:recurrenceId:meetingTags:flowItem:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedCalendarItem *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkDecryptedCalendarItem *)resetCalendarDelegationObjects __attribute__((swift_name("resetCalendarDelegationObjects()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkDecryptedAddress * _Nullable address __attribute__((swift_name("address")));
@property (readonly) NSString * _Nullable addressText __attribute__((swift_name("addressText")));
@property (readonly) NSString * _Nullable agendaId __attribute__((swift_name("agendaId")));
@property (readonly) CDSSLBoolean * _Nullable allDay __attribute__((swift_name("allDay")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSString * _Nullable calendarItemTypeId __attribute__((swift_name("calendarItemTypeId")));
@property (readonly) CDSSLLong * _Nullable cancellationTimestamp __attribute__((swift_name("cancellationTimestamp")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable confirmationId __attribute__((swift_name("confirmationId")));
@property (readonly) CDSSLLong * _Nullable confirmationTime __attribute__((swift_name("confirmationTime")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable details __attribute__((swift_name("details")));
@property (readonly) CDSSLLong * _Nullable duration __attribute__((swift_name("duration")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) CDSSLLong * _Nullable endTime __attribute__((swift_name("endTime")));
@property (readonly) CDSSLCardinal_sdkFlowItem * _Nullable flowItem __attribute__((swift_name("flowItem")));
@property (readonly) NSString * _Nullable hcpId __attribute__((swift_name("hcpId")));
@property (readonly) CDSSLBoolean * _Nullable homeVisit __attribute__((swift_name("homeVisit")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLBoolean * _Nullable important __attribute__((swift_name("important")));
@property (readonly) NSString * _Nullable masterCalendarItemId __attribute__((swift_name("masterCalendarItemId")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) NSSet<CDSSLCardinal_sdkCalendarItemTag *> *meetingTags __attribute__((swift_name("meetingTags")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSString * _Nullable phoneNumber __attribute__((swift_name("phoneNumber")));
@property (readonly) NSString * _Nullable placeId __attribute__((swift_name("placeId")));
@property (readonly) NSString * _Nullable recurrenceId __attribute__((swift_name("recurrenceId")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLLong * _Nullable startTime __attribute__((swift_name("startTime")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable title __attribute__((swift_name("title")));
@property (readonly) CDSSLBoolean * _Nullable wasMigrated __attribute__((swift_name("wasMigrated")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedCalendarItem")))
@interface CDSSLCardinal_sdkEncryptedCalendarItem : CDSSLBase <CDSSLCardinal_sdkCalendarItem>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate title:(NSString * _Nullable)title calendarItemTypeId:(NSString * _Nullable)calendarItemTypeId masterCalendarItemId:(NSString * _Nullable)masterCalendarItemId patientId:(NSString * _Nullable)patientId important:(CDSSLBoolean * _Nullable)important homeVisit:(CDSSLBoolean * _Nullable)homeVisit phoneNumber:(NSString * _Nullable)phoneNumber placeId:(NSString * _Nullable)placeId address:(CDSSLCardinal_sdkEncryptedAddress * _Nullable)address addressText:(NSString * _Nullable)addressText startTime:(CDSSLLong * _Nullable)startTime endTime:(CDSSLLong * _Nullable)endTime confirmationTime:(CDSSLLong * _Nullable)confirmationTime cancellationTimestamp:(CDSSLLong * _Nullable)cancellationTimestamp confirmationId:(NSString * _Nullable)confirmationId duration:(CDSSLLong * _Nullable)duration allDay:(CDSSLBoolean * _Nullable)allDay details:(NSString * _Nullable)details wasMigrated:(CDSSLBoolean * _Nullable)wasMigrated agendaId:(NSString * _Nullable)agendaId hcpId:(NSString * _Nullable)hcpId recurrenceId:(NSString * _Nullable)recurrenceId meetingTags:(NSSet<CDSSLCardinal_sdkCalendarItemTag *> *)meetingTags flowItem:(CDSSLCardinal_sdkFlowItem * _Nullable)flowItem secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:title:calendarItemTypeId:masterCalendarItemId:patientId:important:homeVisit:phoneNumber:placeId:address:addressText:startTime:endTime:confirmationTime:cancellationTimestamp:confirmationId:duration:allDay:details:wasMigrated:agendaId:hcpId:recurrenceId:meetingTags:flowItem:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedCalendarItemCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedCalendarItem *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate title:(NSString * _Nullable)title calendarItemTypeId:(NSString * _Nullable)calendarItemTypeId masterCalendarItemId:(NSString * _Nullable)masterCalendarItemId patientId:(NSString * _Nullable)patientId important:(CDSSLBoolean * _Nullable)important homeVisit:(CDSSLBoolean * _Nullable)homeVisit phoneNumber:(NSString * _Nullable)phoneNumber placeId:(NSString * _Nullable)placeId address:(CDSSLCardinal_sdkEncryptedAddress * _Nullable)address addressText:(NSString * _Nullable)addressText startTime:(CDSSLLong * _Nullable)startTime endTime:(CDSSLLong * _Nullable)endTime confirmationTime:(CDSSLLong * _Nullable)confirmationTime cancellationTimestamp:(CDSSLLong * _Nullable)cancellationTimestamp confirmationId:(NSString * _Nullable)confirmationId duration:(CDSSLLong * _Nullable)duration allDay:(CDSSLBoolean * _Nullable)allDay details:(NSString * _Nullable)details wasMigrated:(CDSSLBoolean * _Nullable)wasMigrated agendaId:(NSString * _Nullable)agendaId hcpId:(NSString * _Nullable)hcpId recurrenceId:(NSString * _Nullable)recurrenceId meetingTags:(NSSet<CDSSLCardinal_sdkCalendarItemTag *> *)meetingTags flowItem:(CDSSLCardinal_sdkFlowItem * _Nullable)flowItem secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:title:calendarItemTypeId:masterCalendarItemId:patientId:important:homeVisit:phoneNumber:placeId:address:addressText:startTime:endTime:confirmationTime:cancellationTimestamp:confirmationId:duration:allDay:details:wasMigrated:agendaId:hcpId:recurrenceId:meetingTags:flowItem:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedCalendarItem *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLCardinal_sdkEncryptedCalendarItem *)resetCalendarDelegationObjects __attribute__((swift_name("resetCalendarDelegationObjects()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkEncryptedAddress * _Nullable address __attribute__((swift_name("address")));
@property (readonly) NSString * _Nullable addressText __attribute__((swift_name("addressText")));
@property (readonly) NSString * _Nullable agendaId __attribute__((swift_name("agendaId")));
@property (readonly) CDSSLBoolean * _Nullable allDay __attribute__((swift_name("allDay")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSString * _Nullable calendarItemTypeId __attribute__((swift_name("calendarItemTypeId")));
@property (readonly) CDSSLLong * _Nullable cancellationTimestamp __attribute__((swift_name("cancellationTimestamp")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable confirmationId __attribute__((swift_name("confirmationId")));
@property (readonly) CDSSLLong * _Nullable confirmationTime __attribute__((swift_name("confirmationTime")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable details __attribute__((swift_name("details")));
@property (readonly) CDSSLLong * _Nullable duration __attribute__((swift_name("duration")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) CDSSLLong * _Nullable endTime __attribute__((swift_name("endTime")));
@property (readonly) CDSSLCardinal_sdkFlowItem * _Nullable flowItem __attribute__((swift_name("flowItem")));
@property (readonly) NSString * _Nullable hcpId __attribute__((swift_name("hcpId")));
@property (readonly) CDSSLBoolean * _Nullable homeVisit __attribute__((swift_name("homeVisit")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLBoolean * _Nullable important __attribute__((swift_name("important")));
@property (readonly) NSString * _Nullable masterCalendarItemId __attribute__((swift_name("masterCalendarItemId")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) NSSet<CDSSLCardinal_sdkCalendarItemTag *> *meetingTags __attribute__((swift_name("meetingTags")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSString * _Nullable phoneNumber __attribute__((swift_name("phoneNumber")));
@property (readonly) NSString * _Nullable placeId __attribute__((swift_name("placeId")));
@property (readonly) NSString * _Nullable recurrenceId __attribute__((swift_name("recurrenceId")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLLong * _Nullable startTime __attribute__((swift_name("startTime")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable title __attribute__((swift_name("title")));
@property (readonly) CDSSLBoolean * _Nullable wasMigrated __attribute__((swift_name("wasMigrated")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCalendarItemShareOptions")))
@interface CDSSLCardinal_sdkCalendarItemShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCalendarItemShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkCalendarItemShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSubscriptionEventType")))
@interface CDSSLCardinal_sdkSubscriptionEventType : CDSSLKotlinEnum<CDSSLCardinal_sdkSubscriptionEventType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSubscriptionEventTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkSubscriptionEventType *create __attribute__((swift_name("create")));
@property (class, readonly) CDSSLCardinal_sdkSubscriptionEventType *update __attribute__((swift_name("update")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkSubscriptionEventType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkSubscriptionEventType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntitySubscriptionConfiguration")))
@interface CDSSLCardinal_sdkEntitySubscriptionConfiguration : CDSSLBase
- (instancetype)initWithChannelBufferCapacity:(int32_t)channelBufferCapacity onBufferFull:(CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *)onBufferFull reconnectionDelay:(int64_t)reconnectionDelay retryDelayExponentFactor:(double)retryDelayExponentFactor connectionMaxRetries:(int32_t)connectionMaxRetries __attribute__((swift_name("init(channelBufferCapacity:onBufferFull:reconnectionDelay:retryDelayExponentFactor:connectionMaxRetries:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEntitySubscriptionConfigurationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEntitySubscriptionConfiguration *)doCopyChannelBufferCapacity:(int32_t)channelBufferCapacity onBufferFull:(CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *)onBufferFull reconnectionDelay:(int64_t)reconnectionDelay retryDelayExponentFactor:(double)retryDelayExponentFactor connectionMaxRetries:(int32_t)connectionMaxRetries __attribute__((swift_name("doCopy(channelBufferCapacity:onBufferFull:reconnectionDelay:retryDelayExponentFactor:connectionMaxRetries:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t channelBufferCapacity __attribute__((swift_name("channelBufferCapacity")));
@property (readonly) int32_t connectionMaxRetries __attribute__((swift_name("connectionMaxRetries")));
@property (readonly) CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *onBufferFull __attribute__((swift_name("onBufferFull")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/DurationAsMillisecondsSerializer))
*/
@property (readonly) int64_t reconnectionDelay __attribute__((swift_name("reconnectionDelay")));
@property (readonly) double retryDelayExponentFactor __attribute__((swift_name("retryDelayExponentFactor")));
@end

__attribute__((swift_name("Cardinal_sdkEntitySubscription")))
@protocol CDSSLCardinal_sdkEntitySubscription
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)closeWithCompletionHandler:(void (^)(NSError * _Nullable))completionHandler __attribute__((swift_name("close(completionHandler:)")));
@property (readonly) CDSSLCardinal_sdkEntitySubscriptionCloseReason * _Nullable closeReason __attribute__((swift_name("closeReason")));
@property (readonly) id<CDSSLKotlinx_coroutines_coreReceiveChannel> eventChannel __attribute__((swift_name("eventChannel")));
@property (readonly) BOOL isClosed __attribute__((swift_name("isClosed")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkKeyPairUpdateNotification")))
@interface CDSSLCardinal_sdkKeyPairUpdateNotification : CDSSLBase
- (instancetype)initWithNewPublicKey:(id)newPublicKey concernedDataOwnerId:(NSString *)concernedDataOwnerId __attribute__((swift_name("init(newPublicKey:concernedDataOwnerId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkKeyPairUpdateNotificationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkKeyPairUpdateNotification *)doCopyNewPublicKey:(id)newPublicKey concernedDataOwnerId:(NSString *)concernedDataOwnerId __attribute__((swift_name("doCopy(newPublicKey:concernedDataOwnerId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *concernedDataOwnerId __attribute__((swift_name("concernedDataOwnerId")));
@property (readonly, getter=doNewPublicKey) id newPublicKey __attribute__((swift_name("newPublicKey")));
@end

__attribute__((swift_name("Cardinal_sdkClassification")))
@protocol CDSSLCardinal_sdkClassification <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString *label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable parentId __attribute__((swift_name("parentId")));
@property (readonly) NSString * _Nullable templateId __attribute__((swift_name("templateId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedClassification")))
@interface CDSSLCardinal_sdkDecryptedClassification : CDSSLBase <CDSSLCardinal_sdkClassification>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate parentId:(NSString * _Nullable)parentId label:(NSString *)label templateId:(NSString * _Nullable)templateId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:parentId:label:templateId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedClassificationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedClassification *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate parentId:(NSString * _Nullable)parentId label:(NSString *)label templateId:(NSString * _Nullable)templateId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:parentId:label:templateId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedClassification *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable parentId __attribute__((swift_name("parentId")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable templateId __attribute__((swift_name("templateId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedClassification")))
@interface CDSSLCardinal_sdkEncryptedClassification : CDSSLBase <CDSSLCardinal_sdkClassification>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate parentId:(NSString * _Nullable)parentId label:(NSString *)label templateId:(NSString * _Nullable)templateId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:parentId:label:templateId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedClassificationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedClassification *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate parentId:(NSString * _Nullable)parentId label:(NSString *)label templateId:(NSString * _Nullable)templateId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:parentId:label:templateId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedClassification *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable parentId __attribute__((swift_name("parentId")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable templateId __attribute__((swift_name("templateId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkClassificationShareOptions")))
@interface CDSSLCardinal_sdkClassificationShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkClassificationShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkClassificationShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end

__attribute__((swift_name("Cardinal_sdkContact")))
@protocol CDSSLCardinal_sdkContact <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id<CDSSLCardinal_sdkAddress> _Nullable encounterLocation __attribute__((swift_name("encounterLocation")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable encounterType __attribute__((swift_name("encounterType")));
@property (readonly) NSString * _Nullable externalId __attribute__((swift_name("externalId")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSString * _Nullable location __attribute__((swift_name("location")));
@property (readonly) NSString * _Nullable modifiedContactId __attribute__((swift_name("modifiedContactId")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkParticipantType *, NSString *> *participants __attribute__((swift_name("participants")));
@property (readonly) NSSet<id<CDSSLCardinal_sdkService>> *services __attribute__((swift_name("services")));
@property (readonly) NSSet<id<CDSSLCardinal_sdkSubContact>> *subContacts __attribute__((swift_name("subContacts")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedContact")))
@interface CDSSLCardinal_sdkDecryptedContact : CDSSLBase <CDSSLCardinal_sdkContact>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate groupId:(NSString * _Nullable)groupId openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate descr:(NSString * _Nullable)descr location:(NSString * _Nullable)location externalId:(NSString * _Nullable)externalId encounterType:(CDSSLCardinal_sdkCodeStub * _Nullable)encounterType encounterLocation:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)encounterLocation subContacts:(NSSet<CDSSLCardinal_sdkDecryptedSubContact *> *)subContacts services:(NSSet<CDSSLCardinal_sdkDecryptedService *> *)services participants:(NSDictionary<CDSSLCardinal_sdkParticipantType *, NSString *> *)participants healthcarePartyId:(NSString * _Nullable)healthcarePartyId modifiedContactId:(NSString * _Nullable)modifiedContactId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:identifier:endOfLife:deletionDate:groupId:openingDate:closingDate:descr:location:externalId:encounterType:encounterLocation:subContacts:services:participants:healthcarePartyId:modifiedContactId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:notes:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedContactCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedContact *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate groupId:(NSString * _Nullable)groupId openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate descr:(NSString * _Nullable)descr location:(NSString * _Nullable)location externalId:(NSString * _Nullable)externalId encounterType:(CDSSLCardinal_sdkCodeStub * _Nullable)encounterType encounterLocation:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)encounterLocation subContacts:(NSSet<CDSSLCardinal_sdkDecryptedSubContact *> *)subContacts services:(NSSet<CDSSLCardinal_sdkDecryptedService *> *)services participants:(NSDictionary<CDSSLCardinal_sdkParticipantType *, NSString *> *)participants healthcarePartyId:(NSString * _Nullable)healthcarePartyId modifiedContactId:(NSString * _Nullable)modifiedContactId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:identifier:endOfLife:deletionDate:groupId:openingDate:closingDate:descr:location:externalId:encounterType:encounterLocation:subContacts:services:participants:healthcarePartyId:modifiedContactId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:notes:)")));
- (CDSSLCardinal_sdkDecryptedContact *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) CDSSLCardinal_sdkDecryptedAddress * _Nullable encounterLocation __attribute__((swift_name("encounterLocation")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable encounterType __attribute__((swift_name("encounterType")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable externalId __attribute__((swift_name("externalId")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSString * _Nullable location __attribute__((swift_name("location")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable modifiedContactId __attribute__((swift_name("modifiedContactId")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkParticipantType *, NSString *> *participants __attribute__((swift_name("participants")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedService *> *services __attribute__((swift_name("services")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedSubContact *> *subContacts __attribute__((swift_name("subContacts")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedContact")))
@interface CDSSLCardinal_sdkEncryptedContact : CDSSLBase <CDSSLCardinal_sdkContact>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate groupId:(NSString * _Nullable)groupId openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate descr:(NSString * _Nullable)descr location:(NSString * _Nullable)location externalId:(NSString * _Nullable)externalId encounterType:(CDSSLCardinal_sdkCodeStub * _Nullable)encounterType encounterLocation:(CDSSLCardinal_sdkEncryptedAddress * _Nullable)encounterLocation subContacts:(NSSet<CDSSLCardinal_sdkEncryptedSubContact *> *)subContacts services:(NSSet<CDSSLCardinal_sdkEncryptedService *> *)services participants:(NSDictionary<CDSSLCardinal_sdkParticipantType *, NSString *> *)participants healthcarePartyId:(NSString * _Nullable)healthcarePartyId modifiedContactId:(NSString * _Nullable)modifiedContactId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:identifier:endOfLife:deletionDate:groupId:openingDate:closingDate:descr:location:externalId:encounterType:encounterLocation:subContacts:services:participants:healthcarePartyId:modifiedContactId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:notes:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedContactCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedContact *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate groupId:(NSString * _Nullable)groupId openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate descr:(NSString * _Nullable)descr location:(NSString * _Nullable)location externalId:(NSString * _Nullable)externalId encounterType:(CDSSLCardinal_sdkCodeStub * _Nullable)encounterType encounterLocation:(CDSSLCardinal_sdkEncryptedAddress * _Nullable)encounterLocation subContacts:(NSSet<CDSSLCardinal_sdkEncryptedSubContact *> *)subContacts services:(NSSet<CDSSLCardinal_sdkEncryptedService *> *)services participants:(NSDictionary<CDSSLCardinal_sdkParticipantType *, NSString *> *)participants healthcarePartyId:(NSString * _Nullable)healthcarePartyId modifiedContactId:(NSString * _Nullable)modifiedContactId secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:identifier:endOfLife:deletionDate:groupId:openingDate:closingDate:descr:location:externalId:encounterType:encounterLocation:subContacts:services:participants:healthcarePartyId:modifiedContactId:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:notes:)")));
- (CDSSLCardinal_sdkEncryptedContact *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) CDSSLCardinal_sdkEncryptedAddress * _Nullable encounterLocation __attribute__((swift_name("encounterLocation")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable encounterType __attribute__((swift_name("encounterType")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable externalId __attribute__((swift_name("externalId")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSString * _Nullable location __attribute__((swift_name("location")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable modifiedContactId __attribute__((swift_name("modifiedContactId")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkParticipantType *, NSString *> *participants __attribute__((swift_name("participants")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkEncryptedService *> *services __attribute__((swift_name("services")));
@property (readonly) NSSet<CDSSLCardinal_sdkEncryptedSubContact *> *subContacts __attribute__((swift_name("subContacts")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end

__attribute__((swift_name("Cardinal_sdkService")))
@protocol CDSSLCardinal_sdkService <CDSSLCardinal_sdkEncryptable, CDSSLCardinal_sdkICureDocument>
@required
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) NSDictionary<NSString *, id<CDSSLCardinal_sdkContent>> *content __attribute__((swift_name("content")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) NSString * _Nullable encryptedContent __attribute__((swift_name("encryptedContent")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSSet<NSString *> * _Nullable formIds __attribute__((swift_name("formIds")));
@property (readonly) NSSet<NSString *> * _Nullable healthElementsIds __attribute__((swift_name("healthElementsIds")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) CDSSLLong * _Nullable index __attribute__((swift_name("index")));
@property (readonly) NSSet<NSString *> *invoicingCodes __attribute__((swift_name("invoicingCodes")));
@property (readonly) NSString * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSSet<NSString *> * _Nullable plansOfActionIds __attribute__((swift_name("plansOfActionIds")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSDictionary<NSString *, NSString *> *> *qualifiedLinks __attribute__((swift_name("qualifiedLinks")));
@property (readonly) NSSet<NSString *> * _Nullable secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSSet<NSString *> * _Nullable subContactIds __attribute__((swift_name("subContactIds")));
@property (readonly) NSDictionary<NSString *, NSString *> *textIndexes __attribute__((swift_name("textIndexes")));
@property (readonly) NSString * _Nullable transactionId __attribute__((swift_name("transactionId")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedService")))
@interface CDSSLCardinal_sdkEncryptedService : CDSSLBase <CDSSLCardinal_sdkService>
- (instancetype)initWithId:(NSString *)id transactionId:(NSString * _Nullable)transactionId identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier contactId:(NSString * _Nullable)contactId subContactIds:(NSSet<NSString *> * _Nullable)subContactIds plansOfActionIds:(NSSet<NSString *> * _Nullable)plansOfActionIds healthElementsIds:(NSSet<NSString *> * _Nullable)healthElementsIds formIds:(NSSet<NSString *> * _Nullable)formIds secretForeignKeys:(NSSet<NSString *> * _Nullable)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys label:(NSString * _Nullable)label index:(CDSSLLong * _Nullable)index content:(NSDictionary<NSString *, CDSSLCardinal_sdkEncryptedContent *> *)content encryptedContent:(NSString * _Nullable)encryptedContent textIndexes:(NSDictionary<NSString *, NSString *> *)textIndexes valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate formId:(NSString * _Nullable)formId created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified endOfLife:(CDSSLLong * _Nullable)endOfLife author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId comment:(NSString * _Nullable)comment status:(CDSSLInt * _Nullable)status invoicingCodes:(NSSet<NSString *> *)invoicingCodes notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes qualifiedLinks:(NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSDictionary<NSString *, NSString *> *> *)qualifiedLinks codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:transactionId:identifier:contactId:subContactIds:plansOfActionIds:healthElementsIds:formIds:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:label:index:content:encryptedContent:textIndexes:valueDate:openingDate:closingDate:formId:created:modified:endOfLife:author:responsible:medicalLocationId:comment:status:invoicingCodes:notes:qualifiedLinks:codes:tags:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedServiceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedService *)doCopyId:(NSString *)id transactionId:(NSString * _Nullable)transactionId identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier contactId:(NSString * _Nullable)contactId subContactIds:(NSSet<NSString *> * _Nullable)subContactIds plansOfActionIds:(NSSet<NSString *> * _Nullable)plansOfActionIds healthElementsIds:(NSSet<NSString *> * _Nullable)healthElementsIds formIds:(NSSet<NSString *> * _Nullable)formIds secretForeignKeys:(NSSet<NSString *> * _Nullable)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys label:(NSString * _Nullable)label index:(CDSSLLong * _Nullable)index content:(NSDictionary<NSString *, CDSSLCardinal_sdkEncryptedContent *> *)content encryptedContent:(NSString * _Nullable)encryptedContent textIndexes:(NSDictionary<NSString *, NSString *> *)textIndexes valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate formId:(NSString * _Nullable)formId created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified endOfLife:(CDSSLLong * _Nullable)endOfLife author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId comment:(NSString * _Nullable)comment status:(CDSSLInt * _Nullable)status invoicingCodes:(NSSet<NSString *> *)invoicingCodes notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes qualifiedLinks:(NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSDictionary<NSString *, NSString *> *> *)qualifiedLinks codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:transactionId:identifier:contactId:subContactIds:plansOfActionIds:healthElementsIds:formIds:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:label:index:content:encryptedContent:textIndexes:valueDate:openingDate:closingDate:formId:created:modified:endOfLife:author:responsible:medicalLocationId:comment:status:invoicingCodes:notes:qualifiedLinks:codes:tags:encryptedSelf:securityMetadata:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkEncryptedContent *> *content __attribute__((swift_name("content")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) NSString * _Nullable encryptedContent __attribute__((swift_name("encryptedContent")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSSet<NSString *> * _Nullable formIds __attribute__((swift_name("formIds")));
@property (readonly) NSSet<NSString *> * _Nullable healthElementsIds __attribute__((swift_name("healthElementsIds")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) CDSSLLong * _Nullable index __attribute__((swift_name("index")));
@property (readonly) NSSet<NSString *> *invoicingCodes __attribute__((swift_name("invoicingCodes")));
@property (readonly) NSString * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSSet<NSString *> * _Nullable plansOfActionIds __attribute__((swift_name("plansOfActionIds")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSDictionary<NSString *, NSString *> *> *qualifiedLinks __attribute__((swift_name("qualifiedLinks")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSSet<NSString *> * _Nullable secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSSet<NSString *> * _Nullable subContactIds __attribute__((swift_name("subContactIds")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSDictionary<NSString *, NSString *> *textIndexes __attribute__((swift_name("textIndexes")));
@property (readonly) NSString * _Nullable transactionId __attribute__((swift_name("transactionId")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedService")))
@interface CDSSLCardinal_sdkDecryptedService : CDSSLBase <CDSSLCardinal_sdkService>
- (instancetype)initWithId:(NSString *)id transactionId:(NSString * _Nullable)transactionId identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier contactId:(NSString * _Nullable)contactId subContactIds:(NSSet<NSString *> * _Nullable)subContactIds plansOfActionIds:(NSSet<NSString *> * _Nullable)plansOfActionIds healthElementsIds:(NSSet<NSString *> * _Nullable)healthElementsIds formIds:(NSSet<NSString *> * _Nullable)formIds secretForeignKeys:(NSSet<NSString *> * _Nullable)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys label:(NSString * _Nullable)label index:(CDSSLLong * _Nullable)index content:(NSDictionary<NSString *, CDSSLCardinal_sdkDecryptedContent *> *)content encryptedContent:(NSString * _Nullable)encryptedContent textIndexes:(NSDictionary<NSString *, NSString *> *)textIndexes valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate formId:(NSString * _Nullable)formId created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified endOfLife:(CDSSLLong * _Nullable)endOfLife author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId comment:(NSString * _Nullable)comment status:(CDSSLInt * _Nullable)status invoicingCodes:(NSSet<NSString *> *)invoicingCodes notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes qualifiedLinks:(NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSDictionary<NSString *, NSString *> *> *)qualifiedLinks codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:transactionId:identifier:contactId:subContactIds:plansOfActionIds:healthElementsIds:formIds:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:label:index:content:encryptedContent:textIndexes:valueDate:openingDate:closingDate:formId:created:modified:endOfLife:author:responsible:medicalLocationId:comment:status:invoicingCodes:notes:qualifiedLinks:codes:tags:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedServiceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedService *)doCopyId:(NSString *)id transactionId:(NSString * _Nullable)transactionId identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier contactId:(NSString * _Nullable)contactId subContactIds:(NSSet<NSString *> * _Nullable)subContactIds plansOfActionIds:(NSSet<NSString *> * _Nullable)plansOfActionIds healthElementsIds:(NSSet<NSString *> * _Nullable)healthElementsIds formIds:(NSSet<NSString *> * _Nullable)formIds secretForeignKeys:(NSSet<NSString *> * _Nullable)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys label:(NSString * _Nullable)label index:(CDSSLLong * _Nullable)index content:(NSDictionary<NSString *, CDSSLCardinal_sdkDecryptedContent *> *)content encryptedContent:(NSString * _Nullable)encryptedContent textIndexes:(NSDictionary<NSString *, NSString *> *)textIndexes valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate formId:(NSString * _Nullable)formId created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified endOfLife:(CDSSLLong * _Nullable)endOfLife author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId comment:(NSString * _Nullable)comment status:(CDSSLInt * _Nullable)status invoicingCodes:(NSSet<NSString *> *)invoicingCodes notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes qualifiedLinks:(NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSDictionary<NSString *, NSString *> *> *)qualifiedLinks codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:transactionId:identifier:contactId:subContactIds:plansOfActionIds:healthElementsIds:formIds:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:label:index:content:encryptedContent:textIndexes:valueDate:openingDate:closingDate:formId:created:modified:endOfLife:author:responsible:medicalLocationId:comment:status:invoicingCodes:notes:qualifiedLinks:codes:tags:encryptedSelf:securityMetadata:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkDecryptedContent *> *content __attribute__((swift_name("content")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) NSString * _Nullable encryptedContent __attribute__((swift_name("encryptedContent")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSSet<NSString *> * _Nullable formIds __attribute__((swift_name("formIds")));
@property (readonly) NSSet<NSString *> * _Nullable healthElementsIds __attribute__((swift_name("healthElementsIds")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) CDSSLLong * _Nullable index __attribute__((swift_name("index")));
@property (readonly) NSSet<NSString *> *invoicingCodes __attribute__((swift_name("invoicingCodes")));
@property (readonly) NSString * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSSet<NSString *> * _Nullable plansOfActionIds __attribute__((swift_name("plansOfActionIds")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSDictionary<NSString *, NSString *> *> *qualifiedLinks __attribute__((swift_name("qualifiedLinks")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSSet<NSString *> * _Nullable secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSSet<NSString *> * _Nullable subContactIds __attribute__((swift_name("subContactIds")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSDictionary<NSString *, NSString *> *textIndexes __attribute__((swift_name("textIndexes")));
@property (readonly) NSString * _Nullable transactionId __attribute__((swift_name("transactionId")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIcureStub")))
@interface CDSSLCardinal_sdkIcureStub : CDSSLBase <CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkVersionable, CDSSLCardinal_sdkHasEncryptionMetadata>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkIcureStubCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkIcureStub *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:securityMetadata:)")));
- (CDSSLCardinal_sdkIcureStub *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLabelledOccurence")))
@interface CDSSLCardinal_sdkLabelledOccurence : CDSSLBase
- (instancetype)initWithLabel:(NSString *)label occurence:(int64_t)occurence __attribute__((swift_name("init(label:occurence:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkLabelledOccurenceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkLabelledOccurence *)doCopyLabel:(NSString *)label occurence:(int64_t)occurence __attribute__((swift_name("doCopy(label:occurence:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *label __attribute__((swift_name("label")));
@property (readonly) int64_t occurence __attribute__((swift_name("occurence")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkContactShareOptions")))
@interface CDSSLCardinal_sdkContactShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkContactShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkContactShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end

__attribute__((swift_name("Cardinal_sdkShamirKeysManagerApi")))
@protocol CDSSLCardinal_sdkShamirKeysManagerApi
@required
- (NSDictionary<id, NSSet<NSString *> *> *)getExistingSplitsInfoDataOwner:(id<CDSSLCardinal_sdkCryptoActor>)dataOwner __attribute__((swift_name("getExistingSplitsInfo(dataOwner:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)updateSelfSplitsKeySplitsToUpdate:(NSDictionary<id, CDSSLCardinal_sdkShamirUpdateRequest *> *)keySplitsToUpdate keySplitsToDelete:(NSSet<id> *)keySplitsToDelete completionHandler:(void (^)(CDSSLCardinal_sdkCryptoActorStubWithType * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("updateSelfSplits(keySplitsToUpdate:keySplitsToDelete:completionHandler:)")));
@end

__attribute__((swift_name("Cardinal_sdkDocument")))
@protocol CDSSLCardinal_sdkDocument <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString * _Nullable attachmentId __attribute__((swift_name("attachmentId")));
@property (readonly) CDSSLKotlinByteArray * _Nullable decryptedAttachment __attribute__((swift_name("decryptedAttachment")));
@property (readonly) NSArray<CDSSLCardinal_sdkDeletedAttachment *> *deletedAttachments __attribute__((swift_name("deletedAttachments")));
@property (readonly) CDSSLCardinal_sdkDocumentLocation * _Nullable documentLocation __attribute__((swift_name("documentLocation")));
@property (readonly) CDSSLCardinal_sdkDocumentStatus * _Nullable documentStatus __attribute__((swift_name("documentStatus")));
@property (readonly) CDSSLCardinal_sdkDocumentType * _Nullable documentType __attribute__((swift_name("documentType")));
@property (readonly) CDSSLKotlinByteArray * _Nullable encryptedAttachment __attribute__((swift_name("encryptedAttachment")));
@property (readonly) NSString * _Nullable externalUri __attribute__((swift_name("externalUri")));
@property (readonly) NSString * _Nullable externalUuid __attribute__((swift_name("externalUuid")));
@property (readonly, getter=hash_) NSString * _Nullable hash __attribute__((swift_name("hash")));
@property (readonly) NSString * _Nullable mainUti __attribute__((swift_name("mainUti")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable objectStoreReference __attribute__((swift_name("objectStoreReference")));
@property (readonly) NSString * _Nullable openingContactId __attribute__((swift_name("openingContactId")));
@property (readonly) NSSet<NSString *> *otherUtis __attribute__((swift_name("otherUtis")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkDataAttachment *> *secondaryAttachments __attribute__((swift_name("secondaryAttachments")));
@property (readonly) CDSSLLong * _Nullable size __attribute__((swift_name("size")));
@property (readonly) NSString * _Nullable storedICureDocumentId __attribute__((swift_name("storedICureDocumentId")));
@property (readonly) NSString * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedDocument")))
@interface CDSSLCardinal_sdkDecryptedDocument : CDSSLBase <CDSSLCardinal_sdkDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate documentLocation:(CDSSLCardinal_sdkDocumentLocation * _Nullable)documentLocation documentType:(CDSSLCardinal_sdkDocumentType * _Nullable)documentType documentStatus:(CDSSLCardinal_sdkDocumentStatus * _Nullable)documentStatus externalUri:(NSString * _Nullable)externalUri name:(NSString * _Nullable)name version:(NSString * _Nullable)version storedICureDocumentId:(NSString * _Nullable)storedICureDocumentId externalUuid:(NSString * _Nullable)externalUuid size:(CDSSLLong * _Nullable)size hash:(NSString * _Nullable)hash openingContactId:(NSString * _Nullable)openingContactId attachmentId:(NSString * _Nullable)attachmentId objectStoreReference:(NSString * _Nullable)objectStoreReference mainUti:(NSString * _Nullable)mainUti otherUtis:(NSSet<NSString *> *)otherUtis secondaryAttachments:(NSDictionary<NSString *, CDSSLCardinal_sdkDataAttachment *> *)secondaryAttachments deletedAttachments:(NSArray<CDSSLCardinal_sdkDeletedAttachment *> *)deletedAttachments encryptedAttachment:(CDSSLKotlinByteArray * _Nullable)encryptedAttachment decryptedAttachment:(CDSSLKotlinByteArray * _Nullable)decryptedAttachment secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:documentLocation:documentType:documentStatus:externalUri:name:version:storedICureDocumentId:externalUuid:size:hash:openingContactId:attachmentId:objectStoreReference:mainUti:otherUtis:secondaryAttachments:deletedAttachments:encryptedAttachment:decryptedAttachment:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedDocumentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedDocument *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate documentLocation:(CDSSLCardinal_sdkDocumentLocation * _Nullable)documentLocation documentType:(CDSSLCardinal_sdkDocumentType * _Nullable)documentType documentStatus:(CDSSLCardinal_sdkDocumentStatus * _Nullable)documentStatus externalUri:(NSString * _Nullable)externalUri name:(NSString * _Nullable)name version:(NSString * _Nullable)version storedICureDocumentId:(NSString * _Nullable)storedICureDocumentId externalUuid:(NSString * _Nullable)externalUuid size:(CDSSLLong * _Nullable)size hash:(NSString * _Nullable)hash openingContactId:(NSString * _Nullable)openingContactId attachmentId:(NSString * _Nullable)attachmentId objectStoreReference:(NSString * _Nullable)objectStoreReference mainUti:(NSString * _Nullable)mainUti otherUtis:(NSSet<NSString *> *)otherUtis secondaryAttachments:(NSDictionary<NSString *, CDSSLCardinal_sdkDataAttachment *> *)secondaryAttachments deletedAttachments:(NSArray<CDSSLCardinal_sdkDeletedAttachment *> *)deletedAttachments encryptedAttachment:(CDSSLKotlinByteArray * _Nullable)encryptedAttachment decryptedAttachment:(CDSSLKotlinByteArray * _Nullable)decryptedAttachment secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:documentLocation:documentType:documentStatus:externalUri:name:version:storedICureDocumentId:externalUuid:size:hash:openingContactId:attachmentId:objectStoreReference:mainUti:otherUtis:secondaryAttachments:deletedAttachments:encryptedAttachment:decryptedAttachment:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedDocument *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable attachmentId __attribute__((swift_name("attachmentId")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable decryptedAttachment __attribute__((swift_name("decryptedAttachment")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) NSArray<CDSSLCardinal_sdkDeletedAttachment *> *deletedAttachments __attribute__((swift_name("deletedAttachments")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) CDSSLCardinal_sdkDocumentLocation * _Nullable documentLocation __attribute__((swift_name("documentLocation")));
@property (readonly) CDSSLCardinal_sdkDocumentStatus * _Nullable documentStatus __attribute__((swift_name("documentStatus")));
@property (readonly) CDSSLCardinal_sdkDocumentType * _Nullable documentType __attribute__((swift_name("documentType")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable encryptedAttachment __attribute__((swift_name("encryptedAttachment")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable externalUri __attribute__((swift_name("externalUri")));
@property (readonly) NSString * _Nullable externalUuid __attribute__((swift_name("externalUuid")));
@property (readonly, getter=hash_) NSString * _Nullable hash __attribute__((swift_name("hash")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable mainUti __attribute__((swift_name("mainUti")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable objectStoreReference __attribute__((swift_name("objectStoreReference")));
@property (readonly) NSString * _Nullable openingContactId __attribute__((swift_name("openingContactId")));
@property (readonly) NSSet<NSString *> *otherUtis __attribute__((swift_name("otherUtis")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkDataAttachment *> *secondaryAttachments __attribute__((swift_name("secondaryAttachments")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLLong * _Nullable size __attribute__((swift_name("size")));
@property (readonly) NSString * _Nullable storedICureDocumentId __attribute__((swift_name("storedICureDocumentId")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedDocument")))
@interface CDSSLCardinal_sdkEncryptedDocument : CDSSLBase <CDSSLCardinal_sdkDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate documentLocation:(CDSSLCardinal_sdkDocumentLocation * _Nullable)documentLocation documentType:(CDSSLCardinal_sdkDocumentType * _Nullable)documentType documentStatus:(CDSSLCardinal_sdkDocumentStatus * _Nullable)documentStatus externalUri:(NSString * _Nullable)externalUri name:(NSString * _Nullable)name version:(NSString * _Nullable)version storedICureDocumentId:(NSString * _Nullable)storedICureDocumentId externalUuid:(NSString * _Nullable)externalUuid size:(CDSSLLong * _Nullable)size hash:(NSString * _Nullable)hash openingContactId:(NSString * _Nullable)openingContactId attachmentId:(NSString * _Nullable)attachmentId objectStoreReference:(NSString * _Nullable)objectStoreReference mainUti:(NSString * _Nullable)mainUti otherUtis:(NSSet<NSString *> *)otherUtis secondaryAttachments:(NSDictionary<NSString *, CDSSLCardinal_sdkDataAttachment *> *)secondaryAttachments deletedAttachments:(NSArray<CDSSLCardinal_sdkDeletedAttachment *> *)deletedAttachments encryptedAttachment:(CDSSLKotlinByteArray * _Nullable)encryptedAttachment decryptedAttachment:(CDSSLKotlinByteArray * _Nullable)decryptedAttachment secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:documentLocation:documentType:documentStatus:externalUri:name:version:storedICureDocumentId:externalUuid:size:hash:openingContactId:attachmentId:objectStoreReference:mainUti:otherUtis:secondaryAttachments:deletedAttachments:encryptedAttachment:decryptedAttachment:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedDocumentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedDocument *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate documentLocation:(CDSSLCardinal_sdkDocumentLocation * _Nullable)documentLocation documentType:(CDSSLCardinal_sdkDocumentType * _Nullable)documentType documentStatus:(CDSSLCardinal_sdkDocumentStatus * _Nullable)documentStatus externalUri:(NSString * _Nullable)externalUri name:(NSString * _Nullable)name version:(NSString * _Nullable)version storedICureDocumentId:(NSString * _Nullable)storedICureDocumentId externalUuid:(NSString * _Nullable)externalUuid size:(CDSSLLong * _Nullable)size hash:(NSString * _Nullable)hash openingContactId:(NSString * _Nullable)openingContactId attachmentId:(NSString * _Nullable)attachmentId objectStoreReference:(NSString * _Nullable)objectStoreReference mainUti:(NSString * _Nullable)mainUti otherUtis:(NSSet<NSString *> *)otherUtis secondaryAttachments:(NSDictionary<NSString *, CDSSLCardinal_sdkDataAttachment *> *)secondaryAttachments deletedAttachments:(NSArray<CDSSLCardinal_sdkDeletedAttachment *> *)deletedAttachments encryptedAttachment:(CDSSLKotlinByteArray * _Nullable)encryptedAttachment decryptedAttachment:(CDSSLKotlinByteArray * _Nullable)decryptedAttachment secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:documentLocation:documentType:documentStatus:externalUri:name:version:storedICureDocumentId:externalUuid:size:hash:openingContactId:attachmentId:objectStoreReference:mainUti:otherUtis:secondaryAttachments:deletedAttachments:encryptedAttachment:decryptedAttachment:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedDocument *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable attachmentId __attribute__((swift_name("attachmentId")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable decryptedAttachment __attribute__((swift_name("decryptedAttachment")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) NSArray<CDSSLCardinal_sdkDeletedAttachment *> *deletedAttachments __attribute__((swift_name("deletedAttachments")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) CDSSLCardinal_sdkDocumentLocation * _Nullable documentLocation __attribute__((swift_name("documentLocation")));
@property (readonly) CDSSLCardinal_sdkDocumentStatus * _Nullable documentStatus __attribute__((swift_name("documentStatus")));
@property (readonly) CDSSLCardinal_sdkDocumentType * _Nullable documentType __attribute__((swift_name("documentType")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable encryptedAttachment __attribute__((swift_name("encryptedAttachment")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable externalUri __attribute__((swift_name("externalUri")));
@property (readonly) NSString * _Nullable externalUuid __attribute__((swift_name("externalUuid")));
@property (readonly, getter=hash_) NSString * _Nullable hash __attribute__((swift_name("hash")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable mainUti __attribute__((swift_name("mainUti")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable objectStoreReference __attribute__((swift_name("objectStoreReference")));
@property (readonly) NSString * _Nullable openingContactId __attribute__((swift_name("openingContactId")));
@property (readonly) NSSet<NSString *> *otherUtis __attribute__((swift_name("otherUtis")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkDataAttachment *> *secondaryAttachments __attribute__((swift_name("secondaryAttachments")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLLong * _Nullable size __attribute__((swift_name("size")));
@property (readonly) NSString * _Nullable storedICureDocumentId __attribute__((swift_name("storedICureDocumentId")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable version __attribute__((swift_name("version")));
@end

__attribute__((swift_name("Cardinal_sdkMessage")))
@protocol CDSSLCardinal_sdkMessage <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSDictionary<NSString *, NSString *> *assignedResults __attribute__((swift_name("assignedResults")));
@property (readonly) NSString * _Nullable conversationGuid __attribute__((swift_name("conversationGuid")));
@property (readonly) NSString * _Nullable externalRef __attribute__((swift_name("externalRef")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSString * _Nullable fromAddress __attribute__((swift_name("fromAddress")));
@property (readonly) NSString * _Nullable fromHealthcarePartyId __attribute__((swift_name("fromHealthcarePartyId")));
@property (readonly) NSSet<NSString *> *invoiceIds __attribute__((swift_name("invoiceIds")));
@property (readonly) NSArray<CDSSLCardinal_sdkMessageAttachment *> *messageAttachments __attribute__((swift_name("messageAttachments")));
@property (readonly) NSDictionary<NSString *, NSString *> *metas __attribute__((swift_name("metas")));
@property (readonly) NSString * _Nullable parentId __attribute__((swift_name("parentId")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkMessageReadStatus *> *readStatus __attribute__((swift_name("readStatus")));
@property (readonly) CDSSLLong * _Nullable received __attribute__((swift_name("received")));
@property (readonly) NSSet<NSString *> *recipients __attribute__((swift_name("recipients")));
@property (readonly) NSString * _Nullable recipientsType __attribute__((swift_name("recipientsType")));
@property (readonly) NSString * _Nullable remark __attribute__((swift_name("remark")));
@property (readonly) NSDictionary<NSString *, NSString *> *senderReferences __attribute__((swift_name("senderReferences")));
@property (readonly) CDSSLLong * _Nullable sent __attribute__((swift_name("sent")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable subject __attribute__((swift_name("subject")));
@property (readonly) NSSet<NSString *> *toAddresses __attribute__((swift_name("toAddresses")));
@property (readonly) NSString * _Nullable transportGuid __attribute__((swift_name("transportGuid")));
@property (readonly) NSSet<NSString *> *unassignedResults __attribute__((swift_name("unassignedResults")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentShareOptions")))
@interface CDSSLCardinal_sdkDocumentShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareMessageId:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareMessageId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:shareMessageId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDocumentShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDocumentShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareMessageId:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareMessageId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:shareMessageId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareMessageId __attribute__((swift_name("shareMessageId")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end

__attribute__((swift_name("Cardinal_sdkForm")))
@protocol CDSSLCardinal_sdkForm <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSString * _Nullable formTemplateId __attribute__((swift_name("formTemplateId")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString * _Nullable logicalUuid __attribute__((swift_name("logicalUuid")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSString * _Nullable parent __attribute__((swift_name("parent")));
@property (readonly) NSString * _Nullable planOfActionId __attribute__((swift_name("planOfActionId")));
@property (readonly) NSString * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable uniqueId __attribute__((swift_name("uniqueId")));
@property (readonly) CDSSLInt * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedForm")))
@interface CDSSLCardinal_sdkDecryptedForm : CDSSLBase <CDSSLCardinal_sdkForm>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate openingDate:(CDSSLLong * _Nullable)openingDate status:(NSString * _Nullable)status version:(CDSSLInt * _Nullable)version logicalUuid:(NSString * _Nullable)logicalUuid descr:(NSString * _Nullable)descr uniqueId:(NSString * _Nullable)uniqueId formTemplateId:(NSString * _Nullable)formTemplateId contactId:(NSString * _Nullable)contactId healthElementId:(NSString * _Nullable)healthElementId planOfActionId:(NSString * _Nullable)planOfActionId parent:(NSString * _Nullable)parent secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:openingDate:status:version:logicalUuid:descr:uniqueId:formTemplateId:contactId:healthElementId:planOfActionId:parent:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedFormCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedForm *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate openingDate:(CDSSLLong * _Nullable)openingDate status:(NSString * _Nullable)status version:(CDSSLInt * _Nullable)version logicalUuid:(NSString * _Nullable)logicalUuid descr:(NSString * _Nullable)descr uniqueId:(NSString * _Nullable)uniqueId formTemplateId:(NSString * _Nullable)formTemplateId contactId:(NSString * _Nullable)contactId healthElementId:(NSString * _Nullable)healthElementId planOfActionId:(NSString * _Nullable)planOfActionId parent:(NSString * _Nullable)parent secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:openingDate:status:version:logicalUuid:descr:uniqueId:formTemplateId:contactId:healthElementId:planOfActionId:parent:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedForm *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable formTemplateId __attribute__((swift_name("formTemplateId")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable logicalUuid __attribute__((swift_name("logicalUuid")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSString * _Nullable parent __attribute__((swift_name("parent")));
@property (readonly) NSString * _Nullable planOfActionId __attribute__((swift_name("planOfActionId")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSString * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable uniqueId __attribute__((swift_name("uniqueId")));
@property (readonly) CDSSLInt * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedForm")))
@interface CDSSLCardinal_sdkEncryptedForm : CDSSLBase <CDSSLCardinal_sdkForm>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate openingDate:(CDSSLLong * _Nullable)openingDate status:(NSString * _Nullable)status version:(CDSSLInt * _Nullable)version logicalUuid:(NSString * _Nullable)logicalUuid descr:(NSString * _Nullable)descr uniqueId:(NSString * _Nullable)uniqueId formTemplateId:(NSString * _Nullable)formTemplateId contactId:(NSString * _Nullable)contactId healthElementId:(NSString * _Nullable)healthElementId planOfActionId:(NSString * _Nullable)planOfActionId parent:(NSString * _Nullable)parent secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:openingDate:status:version:logicalUuid:descr:uniqueId:formTemplateId:contactId:healthElementId:planOfActionId:parent:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedFormCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedForm *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate openingDate:(CDSSLLong * _Nullable)openingDate status:(NSString * _Nullable)status version:(CDSSLInt * _Nullable)version logicalUuid:(NSString * _Nullable)logicalUuid descr:(NSString * _Nullable)descr uniqueId:(NSString * _Nullable)uniqueId formTemplateId:(NSString * _Nullable)formTemplateId contactId:(NSString * _Nullable)contactId healthElementId:(NSString * _Nullable)healthElementId planOfActionId:(NSString * _Nullable)planOfActionId parent:(NSString * _Nullable)parent secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:openingDate:status:version:logicalUuid:descr:uniqueId:formTemplateId:contactId:healthElementId:planOfActionId:parent:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedForm *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable formTemplateId __attribute__((swift_name("formTemplateId")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable logicalUuid __attribute__((swift_name("logicalUuid")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSString * _Nullable parent __attribute__((swift_name("parent")));
@property (readonly) NSString * _Nullable planOfActionId __attribute__((swift_name("planOfActionId")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSString * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable uniqueId __attribute__((swift_name("uniqueId")));
@property (readonly) CDSSLInt * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFormTemplate")))
@interface CDSSLCardinal_sdkFormTemplate : CDSSLBase <CDSSLCardinal_sdkStoredDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate templateLayout:(CDSSLCardinal_sdkFormTemplateLayout * _Nullable)templateLayout rawTemplateLayout:(CDSSLKotlinByteArray * _Nullable)rawTemplateLayout name:(NSString * _Nullable)name guid:(NSString * _Nullable)guid group:(CDSSLCardinal_sdkDocumentGroup * _Nullable)group descr:(NSString * _Nullable)descr disabled:(NSString * _Nullable)disabled specialty:(CDSSLCardinal_sdkCodeStub * _Nullable)specialty author:(NSString * _Nullable)author formInstancePreferredLocation:(NSString * _Nullable)formInstancePreferredLocation keyboardShortcut:(NSString * _Nullable)keyboardShortcut shortReport:(NSString * _Nullable)shortReport mediumReport:(NSString * _Nullable)mediumReport longReport:(NSString * _Nullable)longReport reports:(NSSet<NSString *> *)reports tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags layoutAttachmentId:(NSString * _Nullable)layoutAttachmentId templateLayoutAttachmentId:(NSString * _Nullable)templateLayoutAttachmentId __attribute__((swift_name("init(id:rev:deletionDate:templateLayout:rawTemplateLayout:name:guid:group:descr:disabled:specialty:author:formInstancePreferredLocation:keyboardShortcut:shortReport:mediumReport:longReport:reports:tags:layoutAttachmentId:templateLayoutAttachmentId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkFormTemplateCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkFormTemplate *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate templateLayout:(CDSSLCardinal_sdkFormTemplateLayout * _Nullable)templateLayout rawTemplateLayout:(CDSSLKotlinByteArray * _Nullable)rawTemplateLayout name:(NSString * _Nullable)name guid:(NSString * _Nullable)guid group:(CDSSLCardinal_sdkDocumentGroup * _Nullable)group descr:(NSString * _Nullable)descr disabled:(NSString * _Nullable)disabled specialty:(CDSSLCardinal_sdkCodeStub * _Nullable)specialty author:(NSString * _Nullable)author formInstancePreferredLocation:(NSString * _Nullable)formInstancePreferredLocation keyboardShortcut:(NSString * _Nullable)keyboardShortcut shortReport:(NSString * _Nullable)shortReport mediumReport:(NSString * _Nullable)mediumReport longReport:(NSString * _Nullable)longReport reports:(NSSet<NSString *> *)reports tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags layoutAttachmentId:(NSString * _Nullable)layoutAttachmentId templateLayoutAttachmentId:(NSString * _Nullable)templateLayoutAttachmentId __attribute__((swift_name("doCopy(id:rev:deletionDate:templateLayout:rawTemplateLayout:name:guid:group:descr:disabled:specialty:author:formInstancePreferredLocation:keyboardShortcut:shortReport:mediumReport:longReport:reports:tags:layoutAttachmentId:templateLayoutAttachmentId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSString * _Nullable disabled __attribute__((swift_name("disabled")));
@property (readonly) NSString * _Nullable formInstancePreferredLocation __attribute__((swift_name("formInstancePreferredLocation")));
@property (readonly) CDSSLCardinal_sdkDocumentGroup * _Nullable group __attribute__((swift_name("group")));
@property (readonly) NSString * _Nullable guid __attribute__((swift_name("guid")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable keyboardShortcut __attribute__((swift_name("keyboardShortcut")));
@property (readonly) NSString * _Nullable layoutAttachmentId __attribute__((swift_name("layoutAttachmentId")));
@property (readonly) NSString * _Nullable longReport __attribute__((swift_name("longReport")));
@property (readonly) NSString * _Nullable mediumReport __attribute__((swift_name("mediumReport")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable rawTemplateLayout __attribute__((swift_name("rawTemplateLayout")));
@property (readonly) NSSet<NSString *> *reports __attribute__((swift_name("reports")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSString * _Nullable shortReport __attribute__((swift_name("shortReport")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable specialty __attribute__((swift_name("specialty")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) CDSSLCardinal_sdkFormTemplateLayout * _Nullable templateLayout __attribute__((swift_name("templateLayout")));
@property (readonly) NSString * _Nullable templateLayoutAttachmentId __attribute__((swift_name("templateLayoutAttachmentId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFormShareOptions")))
@interface CDSSLCardinal_sdkFormShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkFormShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkFormShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end

__attribute__((swift_name("Cardinal_sdkHealthElement")))
@protocol CDSSLCardinal_sdkHealthElement <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSArray<id<CDSSLCardinal_sdkCareTeamMember>> *careTeam __attribute__((swift_name("careTeam")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkEpisode>> *episodes __attribute__((swift_name("episodes")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString * _Nullable idClosingContact __attribute__((swift_name("idClosingContact")));
@property (readonly) NSString * _Nullable idOpeningContact __attribute__((swift_name("idOpeningContact")));
@property (readonly) NSString * _Nullable idService __attribute__((swift_name("idService")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifiers __attribute__((swift_name("identifiers")));
@property (readonly) CDSSLCardinal_sdkLaterality * _Nullable laterality __attribute__((swift_name("laterality")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkPlanOfAction>> *plansOfAction __attribute__((swift_name("plansOfAction")));
@property (readonly) BOOL relevant __attribute__((swift_name("relevant")));
@property (readonly) int32_t status_ __attribute__((swift_name("status_")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedHealthElement")))
@interface CDSSLCardinal_sdkDecryptedHealthElement : CDSSLBase <CDSSLCardinal_sdkHealthElement>
- (instancetype)initWithId:(NSString *)id identifiers:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifiers rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate healthElementId:(NSString * _Nullable)healthElementId valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate descr:(NSString * _Nullable)descr note:(NSString * _Nullable)note notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes relevant:(BOOL)relevant idOpeningContact:(NSString * _Nullable)idOpeningContact idClosingContact:(NSString * _Nullable)idClosingContact idService:(NSString * _Nullable)idService status:(int32_t)status laterality:(CDSSLCardinal_sdkLaterality * _Nullable)laterality plansOfAction:(NSArray<CDSSLCardinal_sdkDecryptedPlanOfAction *> *)plansOfAction episodes:(NSArray<CDSSLCardinal_sdkDecryptedEpisode *> *)episodes careTeam:(NSArray<CDSSLCardinal_sdkDecryptedCareTeamMember *> *)careTeam secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:identifiers:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:healthElementId:valueDate:openingDate:closingDate:descr:note:notes:relevant:idOpeningContact:idClosingContact:idService:status:laterality:plansOfAction:episodes:careTeam:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedHealthElementCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedHealthElement *)doCopyId:(NSString *)id identifiers:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifiers rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate healthElementId:(NSString * _Nullable)healthElementId valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate descr:(NSString * _Nullable)descr note:(NSString * _Nullable)note notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes relevant:(BOOL)relevant idOpeningContact:(NSString * _Nullable)idOpeningContact idClosingContact:(NSString * _Nullable)idClosingContact idService:(NSString * _Nullable)idService status:(int32_t)status laterality:(CDSSLCardinal_sdkLaterality * _Nullable)laterality plansOfAction:(NSArray<CDSSLCardinal_sdkDecryptedPlanOfAction *> *)plansOfAction episodes:(NSArray<CDSSLCardinal_sdkDecryptedEpisode *> *)episodes careTeam:(NSArray<CDSSLCardinal_sdkDecryptedCareTeamMember *> *)careTeam secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:identifiers:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:healthElementId:valueDate:openingDate:closingDate:descr:note:notes:relevant:idOpeningContact:idClosingContact:idService:status:laterality:plansOfAction:episodes:careTeam:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedHealthElement *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedCareTeamMember *> *careTeam __attribute__((swift_name("careTeam")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedEpisode *> *episodes __attribute__((swift_name("episodes")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable idClosingContact __attribute__((swift_name("idClosingContact")));
@property (readonly) NSString * _Nullable idOpeningContact __attribute__((swift_name("idOpeningContact")));
@property (readonly) NSString * _Nullable idService __attribute__((swift_name("idService")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifiers __attribute__((swift_name("identifiers")));
@property (readonly) CDSSLCardinal_sdkLaterality * _Nullable laterality __attribute__((swift_name("laterality")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedPlanOfAction *> *plansOfAction __attribute__((swift_name("plansOfAction")));
@property (readonly) BOOL relevant __attribute__((swift_name("relevant")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) int32_t status_ __attribute__((swift_name("status_")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedHealthElement")))
@interface CDSSLCardinal_sdkEncryptedHealthElement : CDSSLBase <CDSSLCardinal_sdkHealthElement>
- (instancetype)initWithId:(NSString *)id identifiers:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifiers rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate healthElementId:(NSString * _Nullable)healthElementId valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate descr:(NSString * _Nullable)descr note:(NSString * _Nullable)note notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes relevant:(BOOL)relevant idOpeningContact:(NSString * _Nullable)idOpeningContact idClosingContact:(NSString * _Nullable)idClosingContact idService:(NSString * _Nullable)idService status:(int32_t)status laterality:(CDSSLCardinal_sdkLaterality * _Nullable)laterality plansOfAction:(NSArray<CDSSLCardinal_sdkEncryptedPlanOfAction *> *)plansOfAction episodes:(NSArray<CDSSLCardinal_sdkEncryptedEpisode *> *)episodes careTeam:(NSArray<CDSSLCardinal_sdkEncryptedCareTeamMember *> *)careTeam secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:identifiers:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:healthElementId:valueDate:openingDate:closingDate:descr:note:notes:relevant:idOpeningContact:idClosingContact:idService:status:laterality:plansOfAction:episodes:careTeam:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedHealthElementCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedHealthElement *)doCopyId:(NSString *)id identifiers:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifiers rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate healthElementId:(NSString * _Nullable)healthElementId valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate descr:(NSString * _Nullable)descr note:(NSString * _Nullable)note notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes relevant:(BOOL)relevant idOpeningContact:(NSString * _Nullable)idOpeningContact idClosingContact:(NSString * _Nullable)idClosingContact idService:(NSString * _Nullable)idService status:(int32_t)status laterality:(CDSSLCardinal_sdkLaterality * _Nullable)laterality plansOfAction:(NSArray<CDSSLCardinal_sdkEncryptedPlanOfAction *> *)plansOfAction episodes:(NSArray<CDSSLCardinal_sdkEncryptedEpisode *> *)episodes careTeam:(NSArray<CDSSLCardinal_sdkEncryptedCareTeamMember *> *)careTeam secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:identifiers:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:healthElementId:valueDate:openingDate:closingDate:descr:note:notes:relevant:idOpeningContact:idClosingContact:idService:status:laterality:plansOfAction:episodes:careTeam:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedHealthElement *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedCareTeamMember *> *careTeam __attribute__((swift_name("careTeam")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedEpisode *> *episodes __attribute__((swift_name("episodes")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable idClosingContact __attribute__((swift_name("idClosingContact")));
@property (readonly) NSString * _Nullable idOpeningContact __attribute__((swift_name("idOpeningContact")));
@property (readonly) NSString * _Nullable idService __attribute__((swift_name("idService")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifiers __attribute__((swift_name("identifiers")));
@property (readonly) CDSSLCardinal_sdkLaterality * _Nullable laterality __attribute__((swift_name("laterality")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedPlanOfAction *> *plansOfAction __attribute__((swift_name("plansOfAction")));
@property (readonly) BOOL relevant __attribute__((swift_name("relevant")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) int32_t status_ __attribute__((swift_name("status_")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkHealthElementShareOptions")))
@interface CDSSLCardinal_sdkHealthElementShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkHealthElementShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkHealthElementShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end

__attribute__((swift_name("Cardinal_sdkInvoice")))
@protocol CDSSLCardinal_sdkInvoice <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLLong * _Nullable admissionDate __attribute__((swift_name("admissionDate")));
@property (readonly) CDSSLLong * _Nullable cancelDate __attribute__((swift_name("cancelDate")));
@property (readonly) NSString * _Nullable cancelReason __attribute__((swift_name("cancelReason")));
@property (readonly) NSString * _Nullable careProviderType __attribute__((swift_name("careProviderType")));
@property (readonly) NSString * _Nullable correctedInvoiceId __attribute__((swift_name("correctedInvoiceId")));
@property (readonly) NSString * _Nullable correctiveInvoiceId __attribute__((swift_name("correctiveInvoiceId")));
@property (readonly) CDSSLBoolean * _Nullable creditNote __attribute__((swift_name("creditNote")));
@property (readonly) NSString * _Nullable creditNoteRelatedInvoiceId __attribute__((swift_name("creditNoteRelatedInvoiceId")));
@property (readonly) NSString * _Nullable encounterLocationName __attribute__((swift_name("encounterLocationName")));
@property (readonly) NSString * _Nullable encounterLocationNihii __attribute__((swift_name("encounterLocationNihii")));
@property (readonly) CDSSLInt * _Nullable encounterLocationNorm __attribute__((swift_name("encounterLocationNorm")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable gnotionCdHcParty __attribute__((swift_name("gnotionCdHcParty")));
@property (readonly) NSString * _Nullable gnotionFirstName __attribute__((swift_name("gnotionFirstName")));
@property (readonly) NSString * _Nullable gnotionLastName __attribute__((swift_name("gnotionLastName")));
@property (readonly) NSString * _Nullable gnotionNihii __attribute__((swift_name("gnotionNihii")));
@property (readonly) NSString * _Nullable gnotionSsin __attribute__((swift_name("gnotionSsin")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) CDSSLCardinal_sdkIdentityDocumentReader * _Nullable idDocument __attribute__((swift_name("idDocument")));
@property (readonly) NSString * _Nullable internshipCbe __attribute__((swift_name("internshipCbe")));
@property (readonly) NSString * _Nullable internshipCdHcParty __attribute__((swift_name("internshipCdHcParty")));
@property (readonly) NSString * _Nullable internshipFirstName __attribute__((swift_name("internshipFirstName")));
@property (readonly) NSString * _Nullable internshipLastName __attribute__((swift_name("internshipLastName")));
@property (readonly) NSString * _Nullable internshipNihii __attribute__((swift_name("internshipNihii")));
@property (readonly) NSString * _Nullable internshipSsin __attribute__((swift_name("internshipSsin")));
@property (readonly) CDSSLCardinal_sdkInvoiceInterventionType * _Nullable interventionType __attribute__((swift_name("interventionType")));
@property (readonly) CDSSLLong * _Nullable invoiceDate __attribute__((swift_name("invoiceDate")));
@property (readonly) CDSSLInt * _Nullable invoicePeriod __attribute__((swift_name("invoicePeriod")));
@property (readonly) NSString * _Nullable invoiceReference __attribute__((swift_name("invoiceReference")));
@property (readonly) CDSSLCardinal_sdkInvoiceType * _Nullable invoiceType __attribute__((swift_name("invoiceType")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkInvoicingCode>> *invoicingCodes __attribute__((swift_name("invoicingCodes")));
@property (readonly) NSString * _Nullable locationNihii __attribute__((swift_name("locationNihii")));
@property (readonly) CDSSLInt * _Nullable locationService __attribute__((swift_name("locationService")));
@property (readonly) CDSSLInt * _Nullable longDelayJustification __attribute__((swift_name("longDelayJustification")));
@property (readonly) NSDictionary<NSString *, NSString *> *options __attribute__((swift_name("options")));
@property (readonly) CDSSLDouble * _Nullable paid __attribute__((swift_name("paid")));
@property (readonly) CDSSLCardinal_sdkPaymentType * _Nullable paymentType __attribute__((swift_name("paymentType")));
@property (readonly) NSArray<CDSSLCardinal_sdkPayment *> * _Nullable payments __attribute__((swift_name("payments")));
@property (readonly) CDSSLLong * _Nullable printedDate __attribute__((swift_name("printedDate")));
@property (readonly) NSString * _Nullable reason __attribute__((swift_name("reason")));
@property (readonly) NSDictionary<NSString *, NSString *> *receipts __attribute__((swift_name("receipts")));
@property (readonly) NSString * _Nullable recipientId __attribute__((swift_name("recipientId")));
@property (readonly) NSString * _Nullable recipientType __attribute__((swift_name("recipientType")));
@property (readonly) CDSSLLong * _Nullable sentDate __attribute__((swift_name("sentDate")));
@property (readonly) CDSSLCardinal_sdkMediumType * _Nullable sentMediumType __attribute__((swift_name("sentMediumType")));
@property (readonly) NSString * _Nullable supervisorCbe __attribute__((swift_name("supervisorCbe")));
@property (readonly) NSString * _Nullable supervisorCdHcParty __attribute__((swift_name("supervisorCdHcParty")));
@property (readonly) NSString * _Nullable supervisorFirstName __attribute__((swift_name("supervisorFirstName")));
@property (readonly) NSString * _Nullable supervisorLastName __attribute__((swift_name("supervisorLastName")));
@property (readonly) NSString * _Nullable supervisorNihii __attribute__((swift_name("supervisorNihii")));
@property (readonly) NSString * _Nullable supervisorSsin __attribute__((swift_name("supervisorSsin")));
@property (readonly) NSString * _Nullable thirdPartyPaymentJustification __attribute__((swift_name("thirdPartyPaymentJustification")));
@property (readonly) NSString * _Nullable thirdPartyPaymentReason __attribute__((swift_name("thirdPartyPaymentReason")));
@property (readonly) NSString * _Nullable thirdPartyReference __attribute__((swift_name("thirdPartyReference")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedInvoice")))
@interface CDSSLCardinal_sdkDecryptedInvoice : CDSSLBase <CDSSLCardinal_sdkInvoice>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate invoiceDate:(CDSSLLong * _Nullable)invoiceDate sentDate:(CDSSLLong * _Nullable)sentDate printedDate:(CDSSLLong * _Nullable)printedDate invoicingCodes:(NSArray<CDSSLCardinal_sdkDecryptedInvoicingCode *> *)invoicingCodes receipts:(NSDictionary<NSString *, NSString *> *)receipts recipientType:(NSString * _Nullable)recipientType recipientId:(NSString * _Nullable)recipientId invoiceReference:(NSString * _Nullable)invoiceReference thirdPartyReference:(NSString * _Nullable)thirdPartyReference thirdPartyPaymentJustification:(NSString * _Nullable)thirdPartyPaymentJustification thirdPartyPaymentReason:(NSString * _Nullable)thirdPartyPaymentReason reason:(NSString * _Nullable)reason invoiceType:(CDSSLCardinal_sdkInvoiceType * _Nullable)invoiceType sentMediumType:(CDSSLCardinal_sdkMediumType * _Nullable)sentMediumType interventionType:(CDSSLCardinal_sdkInvoiceInterventionType * _Nullable)interventionType groupId:(NSString * _Nullable)groupId paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid payments:(NSArray<CDSSLCardinal_sdkPayment *> * _Nullable)payments gnotionNihii:(NSString * _Nullable)gnotionNihii gnotionSsin:(NSString * _Nullable)gnotionSsin gnotionLastName:(NSString * _Nullable)gnotionLastName gnotionFirstName:(NSString * _Nullable)gnotionFirstName gnotionCdHcParty:(NSString * _Nullable)gnotionCdHcParty invoicePeriod:(CDSSLInt * _Nullable)invoicePeriod careProviderType:(NSString * _Nullable)careProviderType internshipNihii:(NSString * _Nullable)internshipNihii internshipSsin:(NSString * _Nullable)internshipSsin internshipLastName:(NSString * _Nullable)internshipLastName internshipFirstName:(NSString * _Nullable)internshipFirstName internshipCdHcParty:(NSString * _Nullable)internshipCdHcParty internshipCbe:(NSString * _Nullable)internshipCbe supervisorNihii:(NSString * _Nullable)supervisorNihii supervisorSsin:(NSString * _Nullable)supervisorSsin supervisorLastName:(NSString * _Nullable)supervisorLastName supervisorFirstName:(NSString * _Nullable)supervisorFirstName supervisorCdHcParty:(NSString * _Nullable)supervisorCdHcParty supervisorCbe:(NSString * _Nullable)supervisorCbe error:(NSString * _Nullable)error encounterLocationName:(NSString * _Nullable)encounterLocationName encounterLocationNihii:(NSString * _Nullable)encounterLocationNihii encounterLocationNorm:(CDSSLInt * _Nullable)encounterLocationNorm longDelayJustification:(CDSSLInt * _Nullable)longDelayJustification correctiveInvoiceId:(NSString * _Nullable)correctiveInvoiceId correctedInvoiceId:(NSString * _Nullable)correctedInvoiceId creditNote:(CDSSLBoolean * _Nullable)creditNote creditNoteRelatedInvoiceId:(NSString * _Nullable)creditNoteRelatedInvoiceId idDocument:(CDSSLCardinal_sdkIdentityDocumentReader * _Nullable)idDocument admissionDate:(CDSSLLong * _Nullable)admissionDate locationNihii:(NSString * _Nullable)locationNihii locationService:(CDSSLInt * _Nullable)locationService cancelReason:(NSString * _Nullable)cancelReason cancelDate:(CDSSLLong * _Nullable)cancelDate options:(NSDictionary<NSString *, NSString *> *)options secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:invoiceDate:sentDate:printedDate:invoicingCodes:receipts:recipientType:recipientId:invoiceReference:thirdPartyReference:thirdPartyPaymentJustification:thirdPartyPaymentReason:reason:invoiceType:sentMediumType:interventionType:groupId:paymentType:paid:payments:gnotionNihii:gnotionSsin:gnotionLastName:gnotionFirstName:gnotionCdHcParty:invoicePeriod:careProviderType:internshipNihii:internshipSsin:internshipLastName:internshipFirstName:internshipCdHcParty:internshipCbe:supervisorNihii:supervisorSsin:supervisorLastName:supervisorFirstName:supervisorCdHcParty:supervisorCbe:error:encounterLocationName:encounterLocationNihii:encounterLocationNorm:longDelayJustification:correctiveInvoiceId:correctedInvoiceId:creditNote:creditNoteRelatedInvoiceId:idDocument:admissionDate:locationNihii:locationService:cancelReason:cancelDate:options:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedInvoiceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedInvoice *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate invoiceDate:(CDSSLLong * _Nullable)invoiceDate sentDate:(CDSSLLong * _Nullable)sentDate printedDate:(CDSSLLong * _Nullable)printedDate invoicingCodes:(NSArray<CDSSLCardinal_sdkDecryptedInvoicingCode *> *)invoicingCodes receipts:(NSDictionary<NSString *, NSString *> *)receipts recipientType:(NSString * _Nullable)recipientType recipientId:(NSString * _Nullable)recipientId invoiceReference:(NSString * _Nullable)invoiceReference thirdPartyReference:(NSString * _Nullable)thirdPartyReference thirdPartyPaymentJustification:(NSString * _Nullable)thirdPartyPaymentJustification thirdPartyPaymentReason:(NSString * _Nullable)thirdPartyPaymentReason reason:(NSString * _Nullable)reason invoiceType:(CDSSLCardinal_sdkInvoiceType * _Nullable)invoiceType sentMediumType:(CDSSLCardinal_sdkMediumType * _Nullable)sentMediumType interventionType:(CDSSLCardinal_sdkInvoiceInterventionType * _Nullable)interventionType groupId:(NSString * _Nullable)groupId paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid payments:(NSArray<CDSSLCardinal_sdkPayment *> * _Nullable)payments gnotionNihii:(NSString * _Nullable)gnotionNihii gnotionSsin:(NSString * _Nullable)gnotionSsin gnotionLastName:(NSString * _Nullable)gnotionLastName gnotionFirstName:(NSString * _Nullable)gnotionFirstName gnotionCdHcParty:(NSString * _Nullable)gnotionCdHcParty invoicePeriod:(CDSSLInt * _Nullable)invoicePeriod careProviderType:(NSString * _Nullable)careProviderType internshipNihii:(NSString * _Nullable)internshipNihii internshipSsin:(NSString * _Nullable)internshipSsin internshipLastName:(NSString * _Nullable)internshipLastName internshipFirstName:(NSString * _Nullable)internshipFirstName internshipCdHcParty:(NSString * _Nullable)internshipCdHcParty internshipCbe:(NSString * _Nullable)internshipCbe supervisorNihii:(NSString * _Nullable)supervisorNihii supervisorSsin:(NSString * _Nullable)supervisorSsin supervisorLastName:(NSString * _Nullable)supervisorLastName supervisorFirstName:(NSString * _Nullable)supervisorFirstName supervisorCdHcParty:(NSString * _Nullable)supervisorCdHcParty supervisorCbe:(NSString * _Nullable)supervisorCbe error:(NSString * _Nullable)error encounterLocationName:(NSString * _Nullable)encounterLocationName encounterLocationNihii:(NSString * _Nullable)encounterLocationNihii encounterLocationNorm:(CDSSLInt * _Nullable)encounterLocationNorm longDelayJustification:(CDSSLInt * _Nullable)longDelayJustification correctiveInvoiceId:(NSString * _Nullable)correctiveInvoiceId correctedInvoiceId:(NSString * _Nullable)correctedInvoiceId creditNote:(CDSSLBoolean * _Nullable)creditNote creditNoteRelatedInvoiceId:(NSString * _Nullable)creditNoteRelatedInvoiceId idDocument:(CDSSLCardinal_sdkIdentityDocumentReader * _Nullable)idDocument admissionDate:(CDSSLLong * _Nullable)admissionDate locationNihii:(NSString * _Nullable)locationNihii locationService:(CDSSLInt * _Nullable)locationService cancelReason:(NSString * _Nullable)cancelReason cancelDate:(CDSSLLong * _Nullable)cancelDate options:(NSDictionary<NSString *, NSString *> *)options secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:invoiceDate:sentDate:printedDate:invoicingCodes:receipts:recipientType:recipientId:invoiceReference:thirdPartyReference:thirdPartyPaymentJustification:thirdPartyPaymentReason:reason:invoiceType:sentMediumType:interventionType:groupId:paymentType:paid:payments:gnotionNihii:gnotionSsin:gnotionLastName:gnotionFirstName:gnotionCdHcParty:invoicePeriod:careProviderType:internshipNihii:internshipSsin:internshipLastName:internshipFirstName:internshipCdHcParty:internshipCbe:supervisorNihii:supervisorSsin:supervisorLastName:supervisorFirstName:supervisorCdHcParty:supervisorCbe:error:encounterLocationName:encounterLocationNihii:encounterLocationNorm:longDelayJustification:correctiveInvoiceId:correctedInvoiceId:creditNote:creditNoteRelatedInvoiceId:idDocument:admissionDate:locationNihii:locationService:cancelReason:cancelDate:options:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedInvoice *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable admissionDate __attribute__((swift_name("admissionDate")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLLong * _Nullable cancelDate __attribute__((swift_name("cancelDate")));
@property (readonly) NSString * _Nullable cancelReason __attribute__((swift_name("cancelReason")));
@property (readonly) NSString * _Nullable careProviderType __attribute__((swift_name("careProviderType")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable correctedInvoiceId __attribute__((swift_name("correctedInvoiceId")));
@property (readonly) NSString * _Nullable correctiveInvoiceId __attribute__((swift_name("correctiveInvoiceId")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLBoolean * _Nullable creditNote __attribute__((swift_name("creditNote")));
@property (readonly) NSString * _Nullable creditNoteRelatedInvoiceId __attribute__((swift_name("creditNoteRelatedInvoiceId")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable encounterLocationName __attribute__((swift_name("encounterLocationName")));
@property (readonly) NSString * _Nullable encounterLocationNihii __attribute__((swift_name("encounterLocationNihii")));
@property (readonly) CDSSLInt * _Nullable encounterLocationNorm __attribute__((swift_name("encounterLocationNorm")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable gnotionCdHcParty __attribute__((swift_name("gnotionCdHcParty")));
@property (readonly) NSString * _Nullable gnotionFirstName __attribute__((swift_name("gnotionFirstName")));
@property (readonly) NSString * _Nullable gnotionLastName __attribute__((swift_name("gnotionLastName")));
@property (readonly) NSString * _Nullable gnotionNihii __attribute__((swift_name("gnotionNihii")));
@property (readonly) NSString * _Nullable gnotionSsin __attribute__((swift_name("gnotionSsin")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLCardinal_sdkIdentityDocumentReader * _Nullable idDocument __attribute__((swift_name("idDocument")));
@property (readonly) NSString * _Nullable internshipCbe __attribute__((swift_name("internshipCbe")));
@property (readonly) NSString * _Nullable internshipCdHcParty __attribute__((swift_name("internshipCdHcParty")));
@property (readonly) NSString * _Nullable internshipFirstName __attribute__((swift_name("internshipFirstName")));
@property (readonly) NSString * _Nullable internshipLastName __attribute__((swift_name("internshipLastName")));
@property (readonly) NSString * _Nullable internshipNihii __attribute__((swift_name("internshipNihii")));
@property (readonly) NSString * _Nullable internshipSsin __attribute__((swift_name("internshipSsin")));
@property (readonly) CDSSLCardinal_sdkInvoiceInterventionType * _Nullable interventionType __attribute__((swift_name("interventionType")));
@property (readonly) CDSSLLong * _Nullable invoiceDate __attribute__((swift_name("invoiceDate")));
@property (readonly) CDSSLInt * _Nullable invoicePeriod __attribute__((swift_name("invoicePeriod")));
@property (readonly) NSString * _Nullable invoiceReference __attribute__((swift_name("invoiceReference")));
@property (readonly) CDSSLCardinal_sdkInvoiceType * _Nullable invoiceType __attribute__((swift_name("invoiceType")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedInvoicingCode *> *invoicingCodes __attribute__((swift_name("invoicingCodes")));
@property (readonly) NSString * _Nullable locationNihii __attribute__((swift_name("locationNihii")));
@property (readonly) CDSSLInt * _Nullable locationService __attribute__((swift_name("locationService")));
@property (readonly) CDSSLInt * _Nullable longDelayJustification __attribute__((swift_name("longDelayJustification")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSDictionary<NSString *, NSString *> *options __attribute__((swift_name("options")));
@property (readonly) CDSSLDouble * _Nullable paid __attribute__((swift_name("paid")));
@property (readonly) CDSSLCardinal_sdkPaymentType * _Nullable paymentType __attribute__((swift_name("paymentType")));
@property (readonly) NSArray<CDSSLCardinal_sdkPayment *> * _Nullable payments __attribute__((swift_name("payments")));
@property (readonly) CDSSLLong * _Nullable printedDate __attribute__((swift_name("printedDate")));
@property (readonly) NSString * _Nullable reason __attribute__((swift_name("reason")));
@property (readonly) NSDictionary<NSString *, NSString *> *receipts __attribute__((swift_name("receipts")));
@property (readonly) NSString * _Nullable recipientId __attribute__((swift_name("recipientId")));
@property (readonly) NSString * _Nullable recipientType __attribute__((swift_name("recipientType")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLLong * _Nullable sentDate __attribute__((swift_name("sentDate")));
@property (readonly) CDSSLCardinal_sdkMediumType * _Nullable sentMediumType __attribute__((swift_name("sentMediumType")));
@property (readonly) NSString * _Nullable supervisorCbe __attribute__((swift_name("supervisorCbe")));
@property (readonly) NSString * _Nullable supervisorCdHcParty __attribute__((swift_name("supervisorCdHcParty")));
@property (readonly) NSString * _Nullable supervisorFirstName __attribute__((swift_name("supervisorFirstName")));
@property (readonly) NSString * _Nullable supervisorLastName __attribute__((swift_name("supervisorLastName")));
@property (readonly) NSString * _Nullable supervisorNihii __attribute__((swift_name("supervisorNihii")));
@property (readonly) NSString * _Nullable supervisorSsin __attribute__((swift_name("supervisorSsin")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable thirdPartyPaymentJustification __attribute__((swift_name("thirdPartyPaymentJustification")));
@property (readonly) NSString * _Nullable thirdPartyPaymentReason __attribute__((swift_name("thirdPartyPaymentReason")));
@property (readonly) NSString * _Nullable thirdPartyReference __attribute__((swift_name("thirdPartyReference")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedInvoice")))
@interface CDSSLCardinal_sdkEncryptedInvoice : CDSSLBase <CDSSLCardinal_sdkInvoice>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate invoiceDate:(CDSSLLong * _Nullable)invoiceDate sentDate:(CDSSLLong * _Nullable)sentDate printedDate:(CDSSLLong * _Nullable)printedDate invoicingCodes:(NSArray<CDSSLCardinal_sdkEncryptedInvoicingCode *> *)invoicingCodes receipts:(NSDictionary<NSString *, NSString *> *)receipts recipientType:(NSString * _Nullable)recipientType recipientId:(NSString * _Nullable)recipientId invoiceReference:(NSString * _Nullable)invoiceReference thirdPartyReference:(NSString * _Nullable)thirdPartyReference thirdPartyPaymentJustification:(NSString * _Nullable)thirdPartyPaymentJustification thirdPartyPaymentReason:(NSString * _Nullable)thirdPartyPaymentReason reason:(NSString * _Nullable)reason invoiceType:(CDSSLCardinal_sdkInvoiceType * _Nullable)invoiceType sentMediumType:(CDSSLCardinal_sdkMediumType * _Nullable)sentMediumType interventionType:(CDSSLCardinal_sdkInvoiceInterventionType * _Nullable)interventionType groupId:(NSString * _Nullable)groupId paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid payments:(NSArray<CDSSLCardinal_sdkPayment *> * _Nullable)payments gnotionNihii:(NSString * _Nullable)gnotionNihii gnotionSsin:(NSString * _Nullable)gnotionSsin gnotionLastName:(NSString * _Nullable)gnotionLastName gnotionFirstName:(NSString * _Nullable)gnotionFirstName gnotionCdHcParty:(NSString * _Nullable)gnotionCdHcParty invoicePeriod:(CDSSLInt * _Nullable)invoicePeriod careProviderType:(NSString * _Nullable)careProviderType internshipNihii:(NSString * _Nullable)internshipNihii internshipSsin:(NSString * _Nullable)internshipSsin internshipLastName:(NSString * _Nullable)internshipLastName internshipFirstName:(NSString * _Nullable)internshipFirstName internshipCdHcParty:(NSString * _Nullable)internshipCdHcParty internshipCbe:(NSString * _Nullable)internshipCbe supervisorNihii:(NSString * _Nullable)supervisorNihii supervisorSsin:(NSString * _Nullable)supervisorSsin supervisorLastName:(NSString * _Nullable)supervisorLastName supervisorFirstName:(NSString * _Nullable)supervisorFirstName supervisorCdHcParty:(NSString * _Nullable)supervisorCdHcParty supervisorCbe:(NSString * _Nullable)supervisorCbe error:(NSString * _Nullable)error encounterLocationName:(NSString * _Nullable)encounterLocationName encounterLocationNihii:(NSString * _Nullable)encounterLocationNihii encounterLocationNorm:(CDSSLInt * _Nullable)encounterLocationNorm longDelayJustification:(CDSSLInt * _Nullable)longDelayJustification correctiveInvoiceId:(NSString * _Nullable)correctiveInvoiceId correctedInvoiceId:(NSString * _Nullable)correctedInvoiceId creditNote:(CDSSLBoolean * _Nullable)creditNote creditNoteRelatedInvoiceId:(NSString * _Nullable)creditNoteRelatedInvoiceId idDocument:(CDSSLCardinal_sdkIdentityDocumentReader * _Nullable)idDocument admissionDate:(CDSSLLong * _Nullable)admissionDate locationNihii:(NSString * _Nullable)locationNihii locationService:(CDSSLInt * _Nullable)locationService cancelReason:(NSString * _Nullable)cancelReason cancelDate:(CDSSLLong * _Nullable)cancelDate options:(NSDictionary<NSString *, NSString *> *)options secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:invoiceDate:sentDate:printedDate:invoicingCodes:receipts:recipientType:recipientId:invoiceReference:thirdPartyReference:thirdPartyPaymentJustification:thirdPartyPaymentReason:reason:invoiceType:sentMediumType:interventionType:groupId:paymentType:paid:payments:gnotionNihii:gnotionSsin:gnotionLastName:gnotionFirstName:gnotionCdHcParty:invoicePeriod:careProviderType:internshipNihii:internshipSsin:internshipLastName:internshipFirstName:internshipCdHcParty:internshipCbe:supervisorNihii:supervisorSsin:supervisorLastName:supervisorFirstName:supervisorCdHcParty:supervisorCbe:error:encounterLocationName:encounterLocationNihii:encounterLocationNorm:longDelayJustification:correctiveInvoiceId:correctedInvoiceId:creditNote:creditNoteRelatedInvoiceId:idDocument:admissionDate:locationNihii:locationService:cancelReason:cancelDate:options:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedInvoiceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedInvoice *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate invoiceDate:(CDSSLLong * _Nullable)invoiceDate sentDate:(CDSSLLong * _Nullable)sentDate printedDate:(CDSSLLong * _Nullable)printedDate invoicingCodes:(NSArray<CDSSLCardinal_sdkEncryptedInvoicingCode *> *)invoicingCodes receipts:(NSDictionary<NSString *, NSString *> *)receipts recipientType:(NSString * _Nullable)recipientType recipientId:(NSString * _Nullable)recipientId invoiceReference:(NSString * _Nullable)invoiceReference thirdPartyReference:(NSString * _Nullable)thirdPartyReference thirdPartyPaymentJustification:(NSString * _Nullable)thirdPartyPaymentJustification thirdPartyPaymentReason:(NSString * _Nullable)thirdPartyPaymentReason reason:(NSString * _Nullable)reason invoiceType:(CDSSLCardinal_sdkInvoiceType * _Nullable)invoiceType sentMediumType:(CDSSLCardinal_sdkMediumType * _Nullable)sentMediumType interventionType:(CDSSLCardinal_sdkInvoiceInterventionType * _Nullable)interventionType groupId:(NSString * _Nullable)groupId paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid payments:(NSArray<CDSSLCardinal_sdkPayment *> * _Nullable)payments gnotionNihii:(NSString * _Nullable)gnotionNihii gnotionSsin:(NSString * _Nullable)gnotionSsin gnotionLastName:(NSString * _Nullable)gnotionLastName gnotionFirstName:(NSString * _Nullable)gnotionFirstName gnotionCdHcParty:(NSString * _Nullable)gnotionCdHcParty invoicePeriod:(CDSSLInt * _Nullable)invoicePeriod careProviderType:(NSString * _Nullable)careProviderType internshipNihii:(NSString * _Nullable)internshipNihii internshipSsin:(NSString * _Nullable)internshipSsin internshipLastName:(NSString * _Nullable)internshipLastName internshipFirstName:(NSString * _Nullable)internshipFirstName internshipCdHcParty:(NSString * _Nullable)internshipCdHcParty internshipCbe:(NSString * _Nullable)internshipCbe supervisorNihii:(NSString * _Nullable)supervisorNihii supervisorSsin:(NSString * _Nullable)supervisorSsin supervisorLastName:(NSString * _Nullable)supervisorLastName supervisorFirstName:(NSString * _Nullable)supervisorFirstName supervisorCdHcParty:(NSString * _Nullable)supervisorCdHcParty supervisorCbe:(NSString * _Nullable)supervisorCbe error:(NSString * _Nullable)error encounterLocationName:(NSString * _Nullable)encounterLocationName encounterLocationNihii:(NSString * _Nullable)encounterLocationNihii encounterLocationNorm:(CDSSLInt * _Nullable)encounterLocationNorm longDelayJustification:(CDSSLInt * _Nullable)longDelayJustification correctiveInvoiceId:(NSString * _Nullable)correctiveInvoiceId correctedInvoiceId:(NSString * _Nullable)correctedInvoiceId creditNote:(CDSSLBoolean * _Nullable)creditNote creditNoteRelatedInvoiceId:(NSString * _Nullable)creditNoteRelatedInvoiceId idDocument:(CDSSLCardinal_sdkIdentityDocumentReader * _Nullable)idDocument admissionDate:(CDSSLLong * _Nullable)admissionDate locationNihii:(NSString * _Nullable)locationNihii locationService:(CDSSLInt * _Nullable)locationService cancelReason:(NSString * _Nullable)cancelReason cancelDate:(CDSSLLong * _Nullable)cancelDate options:(NSDictionary<NSString *, NSString *> *)options secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:invoiceDate:sentDate:printedDate:invoicingCodes:receipts:recipientType:recipientId:invoiceReference:thirdPartyReference:thirdPartyPaymentJustification:thirdPartyPaymentReason:reason:invoiceType:sentMediumType:interventionType:groupId:paymentType:paid:payments:gnotionNihii:gnotionSsin:gnotionLastName:gnotionFirstName:gnotionCdHcParty:invoicePeriod:careProviderType:internshipNihii:internshipSsin:internshipLastName:internshipFirstName:internshipCdHcParty:internshipCbe:supervisorNihii:supervisorSsin:supervisorLastName:supervisorFirstName:supervisorCdHcParty:supervisorCbe:error:encounterLocationName:encounterLocationNihii:encounterLocationNorm:longDelayJustification:correctiveInvoiceId:correctedInvoiceId:creditNote:creditNoteRelatedInvoiceId:idDocument:admissionDate:locationNihii:locationService:cancelReason:cancelDate:options:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedInvoice *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable admissionDate __attribute__((swift_name("admissionDate")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLLong * _Nullable cancelDate __attribute__((swift_name("cancelDate")));
@property (readonly) NSString * _Nullable cancelReason __attribute__((swift_name("cancelReason")));
@property (readonly) NSString * _Nullable careProviderType __attribute__((swift_name("careProviderType")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable correctedInvoiceId __attribute__((swift_name("correctedInvoiceId")));
@property (readonly) NSString * _Nullable correctiveInvoiceId __attribute__((swift_name("correctiveInvoiceId")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLBoolean * _Nullable creditNote __attribute__((swift_name("creditNote")));
@property (readonly) NSString * _Nullable creditNoteRelatedInvoiceId __attribute__((swift_name("creditNoteRelatedInvoiceId")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable encounterLocationName __attribute__((swift_name("encounterLocationName")));
@property (readonly) NSString * _Nullable encounterLocationNihii __attribute__((swift_name("encounterLocationNihii")));
@property (readonly) CDSSLInt * _Nullable encounterLocationNorm __attribute__((swift_name("encounterLocationNorm")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable gnotionCdHcParty __attribute__((swift_name("gnotionCdHcParty")));
@property (readonly) NSString * _Nullable gnotionFirstName __attribute__((swift_name("gnotionFirstName")));
@property (readonly) NSString * _Nullable gnotionLastName __attribute__((swift_name("gnotionLastName")));
@property (readonly) NSString * _Nullable gnotionNihii __attribute__((swift_name("gnotionNihii")));
@property (readonly) NSString * _Nullable gnotionSsin __attribute__((swift_name("gnotionSsin")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLCardinal_sdkIdentityDocumentReader * _Nullable idDocument __attribute__((swift_name("idDocument")));
@property (readonly) NSString * _Nullable internshipCbe __attribute__((swift_name("internshipCbe")));
@property (readonly) NSString * _Nullable internshipCdHcParty __attribute__((swift_name("internshipCdHcParty")));
@property (readonly) NSString * _Nullable internshipFirstName __attribute__((swift_name("internshipFirstName")));
@property (readonly) NSString * _Nullable internshipLastName __attribute__((swift_name("internshipLastName")));
@property (readonly) NSString * _Nullable internshipNihii __attribute__((swift_name("internshipNihii")));
@property (readonly) NSString * _Nullable internshipSsin __attribute__((swift_name("internshipSsin")));
@property (readonly) CDSSLCardinal_sdkInvoiceInterventionType * _Nullable interventionType __attribute__((swift_name("interventionType")));
@property (readonly) CDSSLLong * _Nullable invoiceDate __attribute__((swift_name("invoiceDate")));
@property (readonly) CDSSLInt * _Nullable invoicePeriod __attribute__((swift_name("invoicePeriod")));
@property (readonly) NSString * _Nullable invoiceReference __attribute__((swift_name("invoiceReference")));
@property (readonly) CDSSLCardinal_sdkInvoiceType * _Nullable invoiceType __attribute__((swift_name("invoiceType")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedInvoicingCode *> *invoicingCodes __attribute__((swift_name("invoicingCodes")));
@property (readonly) NSString * _Nullable locationNihii __attribute__((swift_name("locationNihii")));
@property (readonly) CDSSLInt * _Nullable locationService __attribute__((swift_name("locationService")));
@property (readonly) CDSSLInt * _Nullable longDelayJustification __attribute__((swift_name("longDelayJustification")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSDictionary<NSString *, NSString *> *options __attribute__((swift_name("options")));
@property (readonly) CDSSLDouble * _Nullable paid __attribute__((swift_name("paid")));
@property (readonly) CDSSLCardinal_sdkPaymentType * _Nullable paymentType __attribute__((swift_name("paymentType")));
@property (readonly) NSArray<CDSSLCardinal_sdkPayment *> * _Nullable payments __attribute__((swift_name("payments")));
@property (readonly) CDSSLLong * _Nullable printedDate __attribute__((swift_name("printedDate")));
@property (readonly) NSString * _Nullable reason __attribute__((swift_name("reason")));
@property (readonly) NSDictionary<NSString *, NSString *> *receipts __attribute__((swift_name("receipts")));
@property (readonly) NSString * _Nullable recipientId __attribute__((swift_name("recipientId")));
@property (readonly) NSString * _Nullable recipientType __attribute__((swift_name("recipientType")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLLong * _Nullable sentDate __attribute__((swift_name("sentDate")));
@property (readonly) CDSSLCardinal_sdkMediumType * _Nullable sentMediumType __attribute__((swift_name("sentMediumType")));
@property (readonly) NSString * _Nullable supervisorCbe __attribute__((swift_name("supervisorCbe")));
@property (readonly) NSString * _Nullable supervisorCdHcParty __attribute__((swift_name("supervisorCdHcParty")));
@property (readonly) NSString * _Nullable supervisorFirstName __attribute__((swift_name("supervisorFirstName")));
@property (readonly) NSString * _Nullable supervisorLastName __attribute__((swift_name("supervisorLastName")));
@property (readonly) NSString * _Nullable supervisorNihii __attribute__((swift_name("supervisorNihii")));
@property (readonly) NSString * _Nullable supervisorSsin __attribute__((swift_name("supervisorSsin")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable thirdPartyPaymentJustification __attribute__((swift_name("thirdPartyPaymentJustification")));
@property (readonly) NSString * _Nullable thirdPartyPaymentReason __attribute__((swift_name("thirdPartyPaymentReason")));
@property (readonly) NSString * _Nullable thirdPartyReference __attribute__((swift_name("thirdPartyReference")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkInvoiceShareOptions")))
@interface CDSSLCardinal_sdkInvoiceShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkInvoiceShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkInvoiceShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end

__attribute__((swift_name("Cardinal_sdkInvoicingCode")))
@protocol CDSSLCardinal_sdkInvoicingCode <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLBoolean * _Nullable accepted __attribute__((swift_name("accepted")));
@property (readonly) CDSSLLong * _Nullable admissionDate __attribute__((swift_name("admissionDate")));
@property (readonly) CDSSLBoolean * _Nullable archived __attribute__((swift_name("archived")));
@property (readonly) CDSSLInt * _Nullable cancelPatientInterventionReason __attribute__((swift_name("cancelPatientInterventionReason")));
@property (readonly) CDSSLBoolean * _Nullable canceled __attribute__((swift_name("canceled")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) NSString * _Nullable contract __attribute__((swift_name("contract")));
@property (readonly) CDSSLLong * _Nullable contractDate __attribute__((swift_name("contractDate")));
@property (readonly) CDSSLDouble * _Nullable conventionAmount __attribute__((swift_name("conventionAmount")));
@property (readonly) CDSSLLong * _Nullable dateCode __attribute__((swift_name("dateCode")));
@property (readonly) CDSSLInt * _Nullable derogationMaxNumber __attribute__((swift_name("derogationMaxNumber")));
@property (readonly) CDSSLDouble * _Nullable doctorSupplement __attribute__((swift_name("doctorSupplement")));
@property (readonly) CDSSLInt * _Nullable eidReadingHour __attribute__((swift_name("eidReadingHour")));
@property (readonly) NSString * _Nullable eidReadingValue __attribute__((swift_name("eidReadingValue")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) CDSSLInt * _Nullable insuranceJustification __attribute__((swift_name("insuranceJustification")));
@property (readonly) NSString * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable locationCdHcParty __attribute__((swift_name("locationCdHcParty")));
@property (readonly) NSString * _Nullable locationNihii __attribute__((swift_name("locationNihii")));
@property (readonly) CDSSLInt * _Nullable locationService __attribute__((swift_name("locationService")));
@property (readonly) NSString * _Nullable logicalId __attribute__((swift_name("logicalId")));
@property (readonly) CDSSLBoolean * _Nullable lost __attribute__((swift_name("lost")));
@property (readonly) CDSSLInt * _Nullable override3rdPayerCode __attribute__((swift_name("override3rdPayerCode")));
@property (readonly) NSString * _Nullable override3rdPayerReason __attribute__((swift_name("override3rdPayerReason")));
@property (readonly) CDSSLDouble * _Nullable paid __attribute__((swift_name("paid")));
@property (readonly) CDSSLDouble * _Nullable patientIntervention __attribute__((swift_name("patientIntervention")));
@property (readonly) CDSSLCardinal_sdkPaymentType * _Nullable paymentType __attribute__((swift_name("paymentType")));
@property (readonly) CDSSLBoolean * _Nullable pending __attribute__((swift_name("pending")));
@property (readonly) CDSSLInt * _Nullable percentNorm __attribute__((swift_name("percentNorm")));
@property (readonly) NSString * _Nullable prescriberCdHcParty __attribute__((swift_name("prescriberCdHcParty")));
@property (readonly) NSString * _Nullable prescriberFirstName __attribute__((swift_name("prescriberFirstName")));
@property (readonly) NSString * _Nullable prescriberLastName __attribute__((swift_name("prescriberLastName")));
@property (readonly) NSString * _Nullable prescriberNihii __attribute__((swift_name("prescriberNihii")));
@property (readonly) CDSSLInt * _Nullable prescriberNorm __attribute__((swift_name("prescriberNorm")));
@property (readonly) NSString * _Nullable prescriberSsin __attribute__((swift_name("prescriberSsin")));
@property (readonly) CDSSLLong * _Nullable prescriptionDate __attribute__((swift_name("prescriptionDate")));
@property (readonly) CDSSLDouble * _Nullable reimbursement __attribute__((swift_name("reimbursement")));
@property (readonly) NSString * _Nullable relatedCode __attribute__((swift_name("relatedCode")));
@property (readonly) CDSSLBoolean * _Nullable resent __attribute__((swift_name("resent")));
@property (readonly) NSString * _Nullable serviceId __attribute__((swift_name("serviceId")));
@property (readonly) CDSSLInt * _Nullable side __attribute__((swift_name("side")));
@property (readonly) CDSSLLong * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable tarificationId __attribute__((swift_name("tarificationId")));
@property (readonly) CDSSLInt * _Nullable timeOfDay __attribute__((swift_name("timeOfDay")));
@property (readonly) CDSSLDouble * _Nullable totalAmount __attribute__((swift_name("totalAmount")));
@property (readonly) CDSSLInt * _Nullable transplantationCode __attribute__((swift_name("transplantationCode")));
@property (readonly) CDSSLInt * _Nullable units __attribute__((swift_name("units")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@property (readonly) CDSSLDouble * _Nullable vat __attribute__((swift_name("vat")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedInvoicingCode")))
@interface CDSSLCardinal_sdkEncryptedInvoicingCode : CDSSLBase <CDSSLCardinal_sdkInvoicingCode>
- (instancetype)initWithId:(NSString * _Nullable)id dateCode:(CDSSLLong * _Nullable)dateCode logicalId:(NSString * _Nullable)logicalId label:(NSString * _Nullable)label userId:(NSString * _Nullable)userId contactId:(NSString * _Nullable)contactId serviceId:(NSString * _Nullable)serviceId tarificationId:(NSString * _Nullable)tarificationId code:(NSString * _Nullable)code paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid totalAmount:(CDSSLDouble * _Nullable)totalAmount reimbursement:(CDSSLDouble * _Nullable)reimbursement patientIntervention:(CDSSLDouble * _Nullable)patientIntervention doctorSupplement:(CDSSLDouble * _Nullable)doctorSupplement conventionAmount:(CDSSLDouble * _Nullable)conventionAmount vat:(CDSSLDouble * _Nullable)vat error:(NSString * _Nullable)error contract:(NSString * _Nullable)contract contractDate:(CDSSLLong * _Nullable)contractDate units:(CDSSLInt * _Nullable)units side:(CDSSLInt * _Nullable)side timeOfDay:(CDSSLInt * _Nullable)timeOfDay eidReadingHour:(CDSSLInt * _Nullable)eidReadingHour eidReadingValue:(NSString * _Nullable)eidReadingValue override3rdPayerCode:(CDSSLInt * _Nullable)override3rdPayerCode override3rdPayerReason:(NSString * _Nullable)override3rdPayerReason transplantationCode:(CDSSLInt * _Nullable)transplantationCode prescriberNorm:(CDSSLInt * _Nullable)prescriberNorm percentNorm:(CDSSLInt * _Nullable)percentNorm prescriberNihii:(NSString * _Nullable)prescriberNihii relatedCode:(NSString * _Nullable)relatedCode prescriptionDate:(CDSSLLong * _Nullable)prescriptionDate derogationMaxNumber:(CDSSLInt * _Nullable)derogationMaxNumber prescriberSsin:(NSString * _Nullable)prescriberSsin prescriberLastName:(NSString * _Nullable)prescriberLastName prescriberFirstName:(NSString * _Nullable)prescriberFirstName prescriberCdHcParty:(NSString * _Nullable)prescriberCdHcParty locationNihii:(NSString * _Nullable)locationNihii locationCdHcParty:(NSString * _Nullable)locationCdHcParty locationService:(CDSSLInt * _Nullable)locationService admissionDate:(CDSSLLong * _Nullable)admissionDate canceled:(CDSSLBoolean * _Nullable)canceled accepted:(CDSSLBoolean * _Nullable)accepted pending:(CDSSLBoolean * _Nullable)pending resent:(CDSSLBoolean * _Nullable)resent archived:(CDSSLBoolean * _Nullable)archived lost:(CDSSLBoolean * _Nullable)lost insuranceJustification:(CDSSLInt * _Nullable)insuranceJustification cancelPatientInterventionReason:(CDSSLInt * _Nullable)cancelPatientInterventionReason status:(CDSSLLong * _Nullable)status encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:dateCode:logicalId:label:userId:contactId:serviceId:tarificationId:code:paymentType:paid:totalAmount:reimbursement:patientIntervention:doctorSupplement:conventionAmount:vat:error:contract:contractDate:units:side:timeOfDay:eidReadingHour:eidReadingValue:override3rdPayerCode:override3rdPayerReason:transplantationCode:prescriberNorm:percentNorm:prescriberNihii:relatedCode:prescriptionDate:derogationMaxNumber:prescriberSsin:prescriberLastName:prescriberFirstName:prescriberCdHcParty:locationNihii:locationCdHcParty:locationService:admissionDate:canceled:accepted:pending:resent:archived:lost:insuranceJustification:cancelPatientInterventionReason:status:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedInvoicingCodeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedInvoicingCode *)doCopyId:(NSString * _Nullable)id dateCode:(CDSSLLong * _Nullable)dateCode logicalId:(NSString * _Nullable)logicalId label:(NSString * _Nullable)label userId:(NSString * _Nullable)userId contactId:(NSString * _Nullable)contactId serviceId:(NSString * _Nullable)serviceId tarificationId:(NSString * _Nullable)tarificationId code:(NSString * _Nullable)code paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid totalAmount:(CDSSLDouble * _Nullable)totalAmount reimbursement:(CDSSLDouble * _Nullable)reimbursement patientIntervention:(CDSSLDouble * _Nullable)patientIntervention doctorSupplement:(CDSSLDouble * _Nullable)doctorSupplement conventionAmount:(CDSSLDouble * _Nullable)conventionAmount vat:(CDSSLDouble * _Nullable)vat error:(NSString * _Nullable)error contract:(NSString * _Nullable)contract contractDate:(CDSSLLong * _Nullable)contractDate units:(CDSSLInt * _Nullable)units side:(CDSSLInt * _Nullable)side timeOfDay:(CDSSLInt * _Nullable)timeOfDay eidReadingHour:(CDSSLInt * _Nullable)eidReadingHour eidReadingValue:(NSString * _Nullable)eidReadingValue override3rdPayerCode:(CDSSLInt * _Nullable)override3rdPayerCode override3rdPayerReason:(NSString * _Nullable)override3rdPayerReason transplantationCode:(CDSSLInt * _Nullable)transplantationCode prescriberNorm:(CDSSLInt * _Nullable)prescriberNorm percentNorm:(CDSSLInt * _Nullable)percentNorm prescriberNihii:(NSString * _Nullable)prescriberNihii relatedCode:(NSString * _Nullable)relatedCode prescriptionDate:(CDSSLLong * _Nullable)prescriptionDate derogationMaxNumber:(CDSSLInt * _Nullable)derogationMaxNumber prescriberSsin:(NSString * _Nullable)prescriberSsin prescriberLastName:(NSString * _Nullable)prescriberLastName prescriberFirstName:(NSString * _Nullable)prescriberFirstName prescriberCdHcParty:(NSString * _Nullable)prescriberCdHcParty locationNihii:(NSString * _Nullable)locationNihii locationCdHcParty:(NSString * _Nullable)locationCdHcParty locationService:(CDSSLInt * _Nullable)locationService admissionDate:(CDSSLLong * _Nullable)admissionDate canceled:(CDSSLBoolean * _Nullable)canceled accepted:(CDSSLBoolean * _Nullable)accepted pending:(CDSSLBoolean * _Nullable)pending resent:(CDSSLBoolean * _Nullable)resent archived:(CDSSLBoolean * _Nullable)archived lost:(CDSSLBoolean * _Nullable)lost insuranceJustification:(CDSSLInt * _Nullable)insuranceJustification cancelPatientInterventionReason:(CDSSLInt * _Nullable)cancelPatientInterventionReason status:(CDSSLLong * _Nullable)status encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:dateCode:logicalId:label:userId:contactId:serviceId:tarificationId:code:paymentType:paid:totalAmount:reimbursement:patientIntervention:doctorSupplement:conventionAmount:vat:error:contract:contractDate:units:side:timeOfDay:eidReadingHour:eidReadingValue:override3rdPayerCode:override3rdPayerReason:transplantationCode:prescriberNorm:percentNorm:prescriberNihii:relatedCode:prescriptionDate:derogationMaxNumber:prescriberSsin:prescriberLastName:prescriberFirstName:prescriberCdHcParty:locationNihii:locationCdHcParty:locationService:admissionDate:canceled:accepted:pending:resent:archived:lost:insuranceJustification:cancelPatientInterventionReason:status:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable accepted __attribute__((swift_name("accepted")));
@property (readonly) CDSSLLong * _Nullable admissionDate __attribute__((swift_name("admissionDate")));
@property (readonly) CDSSLBoolean * _Nullable archived __attribute__((swift_name("archived")));
@property (readonly) CDSSLInt * _Nullable cancelPatientInterventionReason __attribute__((swift_name("cancelPatientInterventionReason")));
@property (readonly) CDSSLBoolean * _Nullable canceled __attribute__((swift_name("canceled")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) NSString * _Nullable contract __attribute__((swift_name("contract")));
@property (readonly) CDSSLLong * _Nullable contractDate __attribute__((swift_name("contractDate")));
@property (readonly) CDSSLDouble * _Nullable conventionAmount __attribute__((swift_name("conventionAmount")));
@property (readonly) CDSSLLong * _Nullable dateCode __attribute__((swift_name("dateCode")));
@property (readonly) CDSSLInt * _Nullable derogationMaxNumber __attribute__((swift_name("derogationMaxNumber")));
@property (readonly) CDSSLDouble * _Nullable doctorSupplement __attribute__((swift_name("doctorSupplement")));
@property (readonly) CDSSLInt * _Nullable eidReadingHour __attribute__((swift_name("eidReadingHour")));
@property (readonly) NSString * _Nullable eidReadingValue __attribute__((swift_name("eidReadingValue")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) CDSSLInt * _Nullable insuranceJustification __attribute__((swift_name("insuranceJustification")));
@property (readonly) NSString * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable locationCdHcParty __attribute__((swift_name("locationCdHcParty")));
@property (readonly) NSString * _Nullable locationNihii __attribute__((swift_name("locationNihii")));
@property (readonly) CDSSLInt * _Nullable locationService __attribute__((swift_name("locationService")));
@property (readonly) NSString * _Nullable logicalId __attribute__((swift_name("logicalId")));
@property (readonly) CDSSLBoolean * _Nullable lost __attribute__((swift_name("lost")));
@property (readonly) CDSSLInt * _Nullable override3rdPayerCode __attribute__((swift_name("override3rdPayerCode")));
@property (readonly) NSString * _Nullable override3rdPayerReason __attribute__((swift_name("override3rdPayerReason")));
@property (readonly) CDSSLDouble * _Nullable paid __attribute__((swift_name("paid")));
@property (readonly) CDSSLDouble * _Nullable patientIntervention __attribute__((swift_name("patientIntervention")));
@property (readonly) CDSSLCardinal_sdkPaymentType * _Nullable paymentType __attribute__((swift_name("paymentType")));
@property (readonly) CDSSLBoolean * _Nullable pending __attribute__((swift_name("pending")));
@property (readonly) CDSSLInt * _Nullable percentNorm __attribute__((swift_name("percentNorm")));
@property (readonly) NSString * _Nullable prescriberCdHcParty __attribute__((swift_name("prescriberCdHcParty")));
@property (readonly) NSString * _Nullable prescriberFirstName __attribute__((swift_name("prescriberFirstName")));
@property (readonly) NSString * _Nullable prescriberLastName __attribute__((swift_name("prescriberLastName")));
@property (readonly) NSString * _Nullable prescriberNihii __attribute__((swift_name("prescriberNihii")));
@property (readonly) CDSSLInt * _Nullable prescriberNorm __attribute__((swift_name("prescriberNorm")));
@property (readonly) NSString * _Nullable prescriberSsin __attribute__((swift_name("prescriberSsin")));
@property (readonly) CDSSLLong * _Nullable prescriptionDate __attribute__((swift_name("prescriptionDate")));
@property (readonly) CDSSLDouble * _Nullable reimbursement __attribute__((swift_name("reimbursement")));
@property (readonly) NSString * _Nullable relatedCode __attribute__((swift_name("relatedCode")));
@property (readonly) CDSSLBoolean * _Nullable resent __attribute__((swift_name("resent")));
@property (readonly) NSString * _Nullable serviceId __attribute__((swift_name("serviceId")));
@property (readonly) CDSSLInt * _Nullable side __attribute__((swift_name("side")));
@property (readonly) CDSSLLong * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable tarificationId __attribute__((swift_name("tarificationId")));
@property (readonly) CDSSLInt * _Nullable timeOfDay __attribute__((swift_name("timeOfDay")));
@property (readonly) CDSSLDouble * _Nullable totalAmount __attribute__((swift_name("totalAmount")));
@property (readonly) CDSSLInt * _Nullable transplantationCode __attribute__((swift_name("transplantationCode")));
@property (readonly) CDSSLInt * _Nullable units __attribute__((swift_name("units")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@property (readonly) CDSSLDouble * _Nullable vat __attribute__((swift_name("vat")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMediumType")))
@interface CDSSLCardinal_sdkMediumType : CDSSLKotlinEnum<CDSSLCardinal_sdkMediumType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMediumTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkMediumType *cdrom __attribute__((swift_name("cdrom")));
@property (class, readonly) CDSSLCardinal_sdkMediumType *eattest __attribute__((swift_name("eattest")));
@property (class, readonly) CDSSLCardinal_sdkMediumType *efact __attribute__((swift_name("efact")));
@property (class, readonly) CDSSLCardinal_sdkMediumType *email __attribute__((swift_name("email")));
@property (class, readonly) CDSSLCardinal_sdkMediumType *mediprima __attribute__((swift_name("mediprima")));
@property (class, readonly) CDSSLCardinal_sdkMediumType *paper __attribute__((swift_name("paper")));
@property (class, readonly) CDSSLCardinal_sdkMediumType *stat __attribute__((swift_name("stat")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkMediumType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkMediumType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkInvoiceType")))
@interface CDSSLCardinal_sdkInvoiceType : CDSSLKotlinEnum<CDSSLCardinal_sdkInvoiceType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkInvoiceTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkInvoiceType *patient __attribute__((swift_name("patient")));
@property (class, readonly) CDSSLCardinal_sdkInvoiceType *mutualfund __attribute__((swift_name("mutualfund")));
@property (class, readonly) CDSSLCardinal_sdkInvoiceType *payingagency __attribute__((swift_name("payingagency")));
@property (class, readonly) CDSSLCardinal_sdkInvoiceType *insurance __attribute__((swift_name("insurance")));
@property (class, readonly) CDSSLCardinal_sdkInvoiceType *efact __attribute__((swift_name("efact")));
@property (class, readonly) CDSSLCardinal_sdkInvoiceType *other __attribute__((swift_name("other")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkInvoiceType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkInvoiceType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Cardinal_sdkMaintenanceTask")))
@protocol CDSSLCardinal_sdkMaintenanceTask <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSSet<id<CDSSLCardinal_sdkPropertyStub>> *properties __attribute__((swift_name("properties")));
@property (readonly) CDSSLCardinal_sdkTaskStatus *status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable taskType __attribute__((swift_name("taskType")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedMaintenanceTask")))
@interface CDSSLCardinal_sdkDecryptedMaintenanceTask : CDSSLBase <CDSSLCardinal_sdkMaintenanceTask>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate taskType:(NSString * _Nullable)taskType properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties status:(CDSSLCardinal_sdkTaskStatus *)status secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:identifier:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:taskType:properties:status:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedMaintenanceTaskCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedMaintenanceTask *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate taskType:(NSString * _Nullable)taskType properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties status:(CDSSLCardinal_sdkTaskStatus *)status secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:identifier:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:taskType:properties:status:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedMaintenanceTask *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLCardinal_sdkTaskStatus *status __attribute__((swift_name("status")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable taskType __attribute__((swift_name("taskType")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedMaintenanceTask")))
@interface CDSSLCardinal_sdkEncryptedMaintenanceTask : CDSSLBase <CDSSLCardinal_sdkMaintenanceTask>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate taskType:(NSString * _Nullable)taskType properties:(NSSet<CDSSLCardinal_sdkEncryptedPropertyStub *> *)properties status:(CDSSLCardinal_sdkTaskStatus *)status secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:identifier:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:taskType:properties:status:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedMaintenanceTaskCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedMaintenanceTask *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate taskType:(NSString * _Nullable)taskType properties:(NSSet<CDSSLCardinal_sdkEncryptedPropertyStub *> *)properties status:(CDSSLCardinal_sdkTaskStatus *)status secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:identifier:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:taskType:properties:status:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedMaintenanceTask *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSSet<CDSSLCardinal_sdkEncryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLCardinal_sdkTaskStatus *status __attribute__((swift_name("status")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable taskType __attribute__((swift_name("taskType")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMaintenanceTaskShareOptions")))
@interface CDSSLCardinal_sdkMaintenanceTaskShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMaintenanceTaskShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkMaintenanceTaskShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedMessage")))
@interface CDSSLCardinal_sdkDecryptedMessage : CDSSLBase <CDSSLCardinal_sdkMessage>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate fromAddress:(NSString * _Nullable)fromAddress fromHealthcarePartyId:(NSString * _Nullable)fromHealthcarePartyId formId:(NSString * _Nullable)formId status:(CDSSLInt * _Nullable)status recipientsType:(NSString * _Nullable)recipientsType recipients:(NSSet<NSString *> *)recipients toAddresses:(NSSet<NSString *> *)toAddresses received:(CDSSLLong * _Nullable)received sent:(CDSSLLong * _Nullable)sent metas:(NSDictionary<NSString *, NSString *> *)metas readStatus:(NSDictionary<NSString *, CDSSLCardinal_sdkMessageReadStatus *> *)readStatus messageAttachments:(NSArray<CDSSLCardinal_sdkMessageAttachment *> *)messageAttachments transportGuid:(NSString * _Nullable)transportGuid remark:(NSString * _Nullable)remark conversationGuid:(NSString * _Nullable)conversationGuid subject:(NSString * _Nullable)subject invoiceIds:(NSSet<NSString *> *)invoiceIds parentId:(NSString * _Nullable)parentId externalRef:(NSString * _Nullable)externalRef unassignedResults:(NSSet<NSString *> *)unassignedResults assignedResults:(NSDictionary<NSString *, NSString *> *)assignedResults senderReferences:(NSDictionary<NSString *, NSString *> *)senderReferences secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:fromAddress:fromHealthcarePartyId:formId:status:recipientsType:recipients:toAddresses:received:sent:metas:readStatus:messageAttachments:transportGuid:remark:conversationGuid:subject:invoiceIds:parentId:externalRef:unassignedResults:assignedResults:senderReferences:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedMessageCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedMessage *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate fromAddress:(NSString * _Nullable)fromAddress fromHealthcarePartyId:(NSString * _Nullable)fromHealthcarePartyId formId:(NSString * _Nullable)formId status:(CDSSLInt * _Nullable)status recipientsType:(NSString * _Nullable)recipientsType recipients:(NSSet<NSString *> *)recipients toAddresses:(NSSet<NSString *> *)toAddresses received:(CDSSLLong * _Nullable)received sent:(CDSSLLong * _Nullable)sent metas:(NSDictionary<NSString *, NSString *> *)metas readStatus:(NSDictionary<NSString *, CDSSLCardinal_sdkMessageReadStatus *> *)readStatus messageAttachments:(NSArray<CDSSLCardinal_sdkMessageAttachment *> *)messageAttachments transportGuid:(NSString * _Nullable)transportGuid remark:(NSString * _Nullable)remark conversationGuid:(NSString * _Nullable)conversationGuid subject:(NSString * _Nullable)subject invoiceIds:(NSSet<NSString *> *)invoiceIds parentId:(NSString * _Nullable)parentId externalRef:(NSString * _Nullable)externalRef unassignedResults:(NSSet<NSString *> *)unassignedResults assignedResults:(NSDictionary<NSString *, NSString *> *)assignedResults senderReferences:(NSDictionary<NSString *, NSString *> *)senderReferences secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:fromAddress:fromHealthcarePartyId:formId:status:recipientsType:recipients:toAddresses:received:sent:metas:readStatus:messageAttachments:transportGuid:remark:conversationGuid:subject:invoiceIds:parentId:externalRef:unassignedResults:assignedResults:senderReferences:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedMessage *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, NSString *> *assignedResults __attribute__((swift_name("assignedResults")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable conversationGuid __attribute__((swift_name("conversationGuid")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable externalRef __attribute__((swift_name("externalRef")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSString * _Nullable fromAddress __attribute__((swift_name("fromAddress")));
@property (readonly) NSString * _Nullable fromHealthcarePartyId __attribute__((swift_name("fromHealthcarePartyId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSSet<NSString *> *invoiceIds __attribute__((swift_name("invoiceIds")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) NSArray<CDSSLCardinal_sdkMessageAttachment *> *messageAttachments __attribute__((swift_name("messageAttachments")));
@property (readonly) NSDictionary<NSString *, NSString *> *metas __attribute__((swift_name("metas")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable parentId __attribute__((swift_name("parentId")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkMessageReadStatus *> *readStatus __attribute__((swift_name("readStatus")));
@property (readonly) CDSSLLong * _Nullable received __attribute__((swift_name("received")));
@property (readonly) NSSet<NSString *> *recipients __attribute__((swift_name("recipients")));
@property (readonly) NSString * _Nullable recipientsType __attribute__((swift_name("recipientsType")));
@property (readonly) NSString * _Nullable remark __attribute__((swift_name("remark")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSDictionary<NSString *, NSString *> *senderReferences __attribute__((swift_name("senderReferences")));
@property (readonly) CDSSLLong * _Nullable sent __attribute__((swift_name("sent")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable subject __attribute__((swift_name("subject")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSSet<NSString *> *toAddresses __attribute__((swift_name("toAddresses")));
@property (readonly) NSString * _Nullable transportGuid __attribute__((swift_name("transportGuid")));
@property (readonly) NSSet<NSString *> *unassignedResults __attribute__((swift_name("unassignedResults")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedMessage")))
@interface CDSSLCardinal_sdkEncryptedMessage : CDSSLBase <CDSSLCardinal_sdkMessage>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate fromAddress:(NSString * _Nullable)fromAddress fromHealthcarePartyId:(NSString * _Nullable)fromHealthcarePartyId formId:(NSString * _Nullable)formId status:(CDSSLInt * _Nullable)status recipientsType:(NSString * _Nullable)recipientsType recipients:(NSSet<NSString *> *)recipients toAddresses:(NSSet<NSString *> *)toAddresses received:(CDSSLLong * _Nullable)received sent:(CDSSLLong * _Nullable)sent metas:(NSDictionary<NSString *, NSString *> *)metas readStatus:(NSDictionary<NSString *, CDSSLCardinal_sdkMessageReadStatus *> *)readStatus messageAttachments:(NSArray<CDSSLCardinal_sdkMessageAttachment *> *)messageAttachments transportGuid:(NSString * _Nullable)transportGuid remark:(NSString * _Nullable)remark conversationGuid:(NSString * _Nullable)conversationGuid subject:(NSString * _Nullable)subject invoiceIds:(NSSet<NSString *> *)invoiceIds parentId:(NSString * _Nullable)parentId externalRef:(NSString * _Nullable)externalRef unassignedResults:(NSSet<NSString *> *)unassignedResults assignedResults:(NSDictionary<NSString *, NSString *> *)assignedResults senderReferences:(NSDictionary<NSString *, NSString *> *)senderReferences secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:fromAddress:fromHealthcarePartyId:formId:status:recipientsType:recipients:toAddresses:received:sent:metas:readStatus:messageAttachments:transportGuid:remark:conversationGuid:subject:invoiceIds:parentId:externalRef:unassignedResults:assignedResults:senderReferences:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedMessageCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedMessage *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate fromAddress:(NSString * _Nullable)fromAddress fromHealthcarePartyId:(NSString * _Nullable)fromHealthcarePartyId formId:(NSString * _Nullable)formId status:(CDSSLInt * _Nullable)status recipientsType:(NSString * _Nullable)recipientsType recipients:(NSSet<NSString *> *)recipients toAddresses:(NSSet<NSString *> *)toAddresses received:(CDSSLLong * _Nullable)received sent:(CDSSLLong * _Nullable)sent metas:(NSDictionary<NSString *, NSString *> *)metas readStatus:(NSDictionary<NSString *, CDSSLCardinal_sdkMessageReadStatus *> *)readStatus messageAttachments:(NSArray<CDSSLCardinal_sdkMessageAttachment *> *)messageAttachments transportGuid:(NSString * _Nullable)transportGuid remark:(NSString * _Nullable)remark conversationGuid:(NSString * _Nullable)conversationGuid subject:(NSString * _Nullable)subject invoiceIds:(NSSet<NSString *> *)invoiceIds parentId:(NSString * _Nullable)parentId externalRef:(NSString * _Nullable)externalRef unassignedResults:(NSSet<NSString *> *)unassignedResults assignedResults:(NSDictionary<NSString *, NSString *> *)assignedResults senderReferences:(NSDictionary<NSString *, NSString *> *)senderReferences secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:fromAddress:fromHealthcarePartyId:formId:status:recipientsType:recipients:toAddresses:received:sent:metas:readStatus:messageAttachments:transportGuid:remark:conversationGuid:subject:invoiceIds:parentId:externalRef:unassignedResults:assignedResults:senderReferences:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedMessage *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, NSString *> *assignedResults __attribute__((swift_name("assignedResults")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable conversationGuid __attribute__((swift_name("conversationGuid")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable externalRef __attribute__((swift_name("externalRef")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSString * _Nullable fromAddress __attribute__((swift_name("fromAddress")));
@property (readonly) NSString * _Nullable fromHealthcarePartyId __attribute__((swift_name("fromHealthcarePartyId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSSet<NSString *> *invoiceIds __attribute__((swift_name("invoiceIds")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) NSArray<CDSSLCardinal_sdkMessageAttachment *> *messageAttachments __attribute__((swift_name("messageAttachments")));
@property (readonly) NSDictionary<NSString *, NSString *> *metas __attribute__((swift_name("metas")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable parentId __attribute__((swift_name("parentId")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkMessageReadStatus *> *readStatus __attribute__((swift_name("readStatus")));
@property (readonly) CDSSLLong * _Nullable received __attribute__((swift_name("received")));
@property (readonly) NSSet<NSString *> *recipients __attribute__((swift_name("recipients")));
@property (readonly) NSString * _Nullable recipientsType __attribute__((swift_name("recipientsType")));
@property (readonly) NSString * _Nullable remark __attribute__((swift_name("remark")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSDictionary<NSString *, NSString *> *senderReferences __attribute__((swift_name("senderReferences")));
@property (readonly) CDSSLLong * _Nullable sent __attribute__((swift_name("sent")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable subject __attribute__((swift_name("subject")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSSet<NSString *> *toAddresses __attribute__((swift_name("toAddresses")));
@property (readonly) NSString * _Nullable transportGuid __attribute__((swift_name("transportGuid")));
@property (readonly) NSSet<NSString *> *unassignedResults __attribute__((swift_name("unassignedResults")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMessageShareOptions")))
@interface CDSSLCardinal_sdkMessageShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMessageShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkMessageShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedPatient")))
@interface CDSSLCardinal_sdkDecryptedPatient : CDSSLBase <CDSSLCardinal_sdkPatient>
- (instancetype)initWithId:(NSString *)id identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName names:(NSArray<CDSSLCardinal_sdkPersonName *> *)names companyName:(NSString * _Nullable)companyName languages:(NSArray<NSString *> *)languages addresses:(NSArray<CDSSLCardinal_sdkDecryptedAddress *> *)addresses civility:(NSString * _Nullable)civility gender:(CDSSLCardinal_sdkGender * _Nullable)gender birthSex:(CDSSLCardinal_sdkGender * _Nullable)birthSex mergeToPatientId:(NSString * _Nullable)mergeToPatientId mergedIds:(NSSet<NSString *> *)mergedIds alias:(NSString * _Nullable)alias active:(BOOL)active deactivationReason:(CDSSLCardinal_sdkDeactivationReason *)deactivationReason deactivationDate:(CDSSLInt * _Nullable)deactivationDate ssin:(NSString * _Nullable)ssin maidenName:(NSString * _Nullable)maidenName spouseName:(NSString * _Nullable)spouseName partnerName:(NSString * _Nullable)partnerName personalStatus:(CDSSLCardinal_sdkPersonalStatus * _Nullable)personalStatus dateOfBirth:(CDSSLInt * _Nullable)dateOfBirth dateOfDeath:(CDSSLInt * _Nullable)dateOfDeath timestampOfLatestEidReading:(CDSSLLong * _Nullable)timestampOfLatestEidReading placeOfBirth:(NSString * _Nullable)placeOfBirth placeOfDeath:(NSString * _Nullable)placeOfDeath deceased:(CDSSLBoolean * _Nullable)deceased education:(NSString * _Nullable)education profession:(NSString * _Nullable)profession notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes note:(NSString * _Nullable)note administrativeNote:(NSString * _Nullable)administrativeNote nationality:(NSString * _Nullable)nationality race:(NSString * _Nullable)race ethnicity:(NSString * _Nullable)ethnicity preferredUserId:(NSString * _Nullable)preferredUserId picture:(CDSSLKotlinByteArray * _Nullable)picture externalId:(NSString * _Nullable)externalId insurabilities:(NSArray<CDSSLCardinal_sdkDecryptedInsurability *> *)insurabilities partnerships:(NSArray<CDSSLCardinal_sdkPartnership *> *)partnerships patientHealthCareParties:(NSArray<CDSSLCardinal_sdkDecryptedPatientHealthCareParty *> *)patientHealthCareParties financialInstitutionInformation:(NSArray<CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation *> *)financialInstitutionInformation medicalHouseContracts:(NSArray<CDSSLCardinal_sdkDecryptedMedicalHouseContract *> *)medicalHouseContracts patientProfessions:(NSArray<CDSSLCardinal_sdkCodeStub *> *)patientProfessions parameters:(NSDictionary<NSString *, NSArray<NSString *> *> *)parameters properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata medicalLocationId:(NSString * _Nullable)medicalLocationId nonDuplicateIds:(NSSet<NSString *> *)nonDuplicateIds encryptedAdministrativesDocuments:(NSSet<NSString *> *)encryptedAdministrativesDocuments comment:(NSString * _Nullable)comment warning:(NSString * _Nullable)warning fatherBirthCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)fatherBirthCountry birthCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)birthCountry nativeCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)nativeCountry socialStatus:(CDSSLCardinal_sdkCodeStub * _Nullable)socialStatus mainSourceOfIncome:(CDSSLCardinal_sdkCodeStub * _Nullable)mainSourceOfIncome schoolingInfos:(NSArray<CDSSLCardinal_sdkSchoolingInfo *> *)schoolingInfos employementInfos:(NSArray<CDSSLCardinal_sdkEmploymentInfo *> *)employementInfos __attribute__((swift_name("init(id:identifier:rev:created:modified:author:responsible:tags:codes:endOfLife:deletionDate:firstName:lastName:names:companyName:languages:addresses:civility:gender:birthSex:mergeToPatientId:mergedIds:alias:active:deactivationReason:deactivationDate:ssin:maidenName:spouseName:partnerName:personalStatus:dateOfBirth:dateOfDeath:timestampOfLatestEidReading:placeOfBirth:placeOfDeath:deceased:education:profession:notes:note:administrativeNote:nationality:race:ethnicity:preferredUserId:picture:externalId:insurabilities:partnerships:patientHealthCareParties:financialInstitutionInformation:medicalHouseContracts:patientProfessions:parameters:properties:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:medicalLocationId:nonDuplicateIds:encryptedAdministrativesDocuments:comment:warning:fatherBirthCountry:birthCountry:nativeCountry:socialStatus:mainSourceOfIncome:schoolingInfos:employementInfos:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedPatientCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedPatient *)doCopyId:(NSString *)id identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName names:(NSArray<CDSSLCardinal_sdkPersonName *> *)names companyName:(NSString * _Nullable)companyName languages:(NSArray<NSString *> *)languages addresses:(NSArray<CDSSLCardinal_sdkDecryptedAddress *> *)addresses civility:(NSString * _Nullable)civility gender:(CDSSLCardinal_sdkGender * _Nullable)gender birthSex:(CDSSLCardinal_sdkGender * _Nullable)birthSex mergeToPatientId:(NSString * _Nullable)mergeToPatientId mergedIds:(NSSet<NSString *> *)mergedIds alias:(NSString * _Nullable)alias active:(BOOL)active deactivationReason:(CDSSLCardinal_sdkDeactivationReason *)deactivationReason deactivationDate:(CDSSLInt * _Nullable)deactivationDate ssin:(NSString * _Nullable)ssin maidenName:(NSString * _Nullable)maidenName spouseName:(NSString * _Nullable)spouseName partnerName:(NSString * _Nullable)partnerName personalStatus:(CDSSLCardinal_sdkPersonalStatus * _Nullable)personalStatus dateOfBirth:(CDSSLInt * _Nullable)dateOfBirth dateOfDeath:(CDSSLInt * _Nullable)dateOfDeath timestampOfLatestEidReading:(CDSSLLong * _Nullable)timestampOfLatestEidReading placeOfBirth:(NSString * _Nullable)placeOfBirth placeOfDeath:(NSString * _Nullable)placeOfDeath deceased:(CDSSLBoolean * _Nullable)deceased education:(NSString * _Nullable)education profession:(NSString * _Nullable)profession notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes note:(NSString * _Nullable)note administrativeNote:(NSString * _Nullable)administrativeNote nationality:(NSString * _Nullable)nationality race:(NSString * _Nullable)race ethnicity:(NSString * _Nullable)ethnicity preferredUserId:(NSString * _Nullable)preferredUserId picture:(CDSSLKotlinByteArray * _Nullable)picture externalId:(NSString * _Nullable)externalId insurabilities:(NSArray<CDSSLCardinal_sdkDecryptedInsurability *> *)insurabilities partnerships:(NSArray<CDSSLCardinal_sdkPartnership *> *)partnerships patientHealthCareParties:(NSArray<CDSSLCardinal_sdkDecryptedPatientHealthCareParty *> *)patientHealthCareParties financialInstitutionInformation:(NSArray<CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation *> *)financialInstitutionInformation medicalHouseContracts:(NSArray<CDSSLCardinal_sdkDecryptedMedicalHouseContract *> *)medicalHouseContracts patientProfessions:(NSArray<CDSSLCardinal_sdkCodeStub *> *)patientProfessions parameters:(NSDictionary<NSString *, NSArray<NSString *> *> *)parameters properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata medicalLocationId:(NSString * _Nullable)medicalLocationId nonDuplicateIds:(NSSet<NSString *> *)nonDuplicateIds encryptedAdministrativesDocuments:(NSSet<NSString *> *)encryptedAdministrativesDocuments comment:(NSString * _Nullable)comment warning:(NSString * _Nullable)warning fatherBirthCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)fatherBirthCountry birthCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)birthCountry nativeCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)nativeCountry socialStatus:(CDSSLCardinal_sdkCodeStub * _Nullable)socialStatus mainSourceOfIncome:(CDSSLCardinal_sdkCodeStub * _Nullable)mainSourceOfIncome schoolingInfos:(NSArray<CDSSLCardinal_sdkSchoolingInfo *> *)schoolingInfos employementInfos:(NSArray<CDSSLCardinal_sdkEmploymentInfo *> *)employementInfos __attribute__((swift_name("doCopy(id:identifier:rev:created:modified:author:responsible:tags:codes:endOfLife:deletionDate:firstName:lastName:names:companyName:languages:addresses:civility:gender:birthSex:mergeToPatientId:mergedIds:alias:active:deactivationReason:deactivationDate:ssin:maidenName:spouseName:partnerName:personalStatus:dateOfBirth:dateOfDeath:timestampOfLatestEidReading:placeOfBirth:placeOfDeath:deceased:education:profession:notes:note:administrativeNote:nationality:race:ethnicity:preferredUserId:picture:externalId:insurabilities:partnerships:patientHealthCareParties:financialInstitutionInformation:medicalHouseContracts:patientProfessions:parameters:properties:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:medicalLocationId:nonDuplicateIds:encryptedAdministrativesDocuments:comment:warning:fatherBirthCountry:birthCountry:nativeCountry:socialStatus:mainSourceOfIncome:schoolingInfos:employementInfos:)")));
- (CDSSLCardinal_sdkDecryptedPatient *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL active __attribute__((swift_name("active")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedAddress *> *addresses __attribute__((swift_name("addresses")));
@property (readonly) NSString * _Nullable administrativeNote __attribute__((swift_name("administrativeNote")));
@property (readonly) NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *aesExchangeKeys __attribute__((swift_name("aesExchangeKeys")));
@property (readonly) NSString * _Nullable alias __attribute__((swift_name("alias")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable birthCountry __attribute__((swift_name("birthCountry")));
@property (readonly) CDSSLCardinal_sdkGender * _Nullable birthSex __attribute__((swift_name("birthSex")));
@property (readonly) NSString * _Nullable civility __attribute__((swift_name("civility")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) NSString * _Nullable companyName __attribute__((swift_name("companyName")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) CDSSLInt * _Nullable dateOfBirth __attribute__((swift_name("dateOfBirth")));
@property (readonly) CDSSLInt * _Nullable dateOfDeath __attribute__((swift_name("dateOfDeath")));
@property (readonly) CDSSLInt * _Nullable deactivationDate __attribute__((swift_name("deactivationDate")));
@property (readonly) CDSSLCardinal_sdkDeactivationReason *deactivationReason __attribute__((swift_name("deactivationReason")));
@property (readonly) CDSSLBoolean * _Nullable deceased __attribute__((swift_name("deceased")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable education __attribute__((swift_name("education")));
@property (readonly) NSArray<CDSSLCardinal_sdkEmploymentInfo *> *employementInfos __attribute__((swift_name("employementInfos")));
@property (readonly) NSSet<NSString *> *encryptedAdministrativesDocuments __attribute__((swift_name("encryptedAdministrativesDocuments")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable ethnicity __attribute__((swift_name("ethnicity")));
@property (readonly) NSString * _Nullable externalId __attribute__((swift_name("externalId")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable fatherBirthCountry __attribute__((swift_name("fatherBirthCountry")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation *> *financialInstitutionInformation __attribute__((swift_name("financialInstitutionInformation")));
@property (readonly) NSString * _Nullable firstName __attribute__((swift_name("firstName")));
@property (readonly) CDSSLCardinal_sdkGender * _Nullable gender __attribute__((swift_name("gender")));
@property (readonly) NSDictionary<NSString *, NSArray<id> *> *hcPartyKeys __attribute__((swift_name("hcPartyKeys")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedInsurability *> *insurabilities __attribute__((swift_name("insurabilities")));
@property (readonly) NSArray<NSString *> *languages __attribute__((swift_name("languages")));
@property (readonly) NSString * _Nullable lastName __attribute__((swift_name("lastName")));
@property (readonly) NSString * _Nullable maidenName __attribute__((swift_name("maidenName")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable mainSourceOfIncome __attribute__((swift_name("mainSourceOfIncome")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedMedicalHouseContract *> *medicalHouseContracts __attribute__((swift_name("medicalHouseContracts")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) NSString * _Nullable mergeToPatientId __attribute__((swift_name("mergeToPatientId")));
@property (readonly) NSSet<NSString *> *mergedIds __attribute__((swift_name("mergedIds")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly, getter=names_) NSArray<CDSSLCardinal_sdkPersonName *> *names __attribute__((swift_name("names")));
@property (readonly) NSString * _Nullable nationality __attribute__((swift_name("nationality")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable nativeCountry __attribute__((swift_name("nativeCountry")));
@property (readonly) NSSet<NSString *> *nonDuplicateIds __attribute__((swift_name("nonDuplicateIds")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSDictionary<NSString *, NSArray<NSString *> *> *parameters __attribute__((swift_name("parameters")));
@property (readonly) NSString * _Nullable partnerName __attribute__((swift_name("partnerName")));
@property (readonly) NSArray<CDSSLCardinal_sdkPartnership *> *partnerships __attribute__((swift_name("partnerships")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedPatientHealthCareParty *> *patientHealthCareParties __attribute__((swift_name("patientHealthCareParties")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *patientProfessions __attribute__((swift_name("patientProfessions")));
@property (readonly) CDSSLCardinal_sdkPersonalStatus * _Nullable personalStatus __attribute__((swift_name("personalStatus")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable picture __attribute__((swift_name("picture")));
@property (readonly) NSString * _Nullable placeOfBirth __attribute__((swift_name("placeOfBirth")));
@property (readonly) NSString * _Nullable placeOfDeath __attribute__((swift_name("placeOfDeath")));
@property (readonly) NSString * _Nullable preferredUserId __attribute__((swift_name("preferredUserId")));
@property (readonly) NSDictionary<NSString *, id> *privateKeyShamirPartitions __attribute__((swift_name("privateKeyShamirPartitions")));
@property (readonly) NSString * _Nullable profession __attribute__((swift_name("profession")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) id _Nullable publicKey __attribute__((swift_name("publicKey")));
@property (readonly) NSSet<id> *publicKeysForOaepWithSha256 __attribute__((swift_name("publicKeysForOaepWithSha256")));
@property (readonly) NSString * _Nullable race __attribute__((swift_name("race")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSArray<CDSSLCardinal_sdkSchoolingInfo *> *schoolingInfos __attribute__((swift_name("schoolingInfos")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable socialStatus __attribute__((swift_name("socialStatus")));
@property (readonly) NSString * _Nullable spouseName __attribute__((swift_name("spouseName")));
@property (readonly) NSString * _Nullable ssin __attribute__((swift_name("ssin")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) CDSSLLong * _Nullable timestampOfLatestEidReading __attribute__((swift_name("timestampOfLatestEidReading")));
@property (readonly) NSDictionary<id, NSDictionary<id, id> *> *transferKeys __attribute__((swift_name("transferKeys")));
@property (readonly) NSString * _Nullable warning __attribute__((swift_name("warning")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIdWithRev")))
@interface CDSSLCardinal_sdkIdWithRev : CDSSLBase
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev __attribute__((swift_name("init(id:rev:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkIdWithRevCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkIdWithRev *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev __attribute__((swift_name("doCopy(id:rev:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedPatient")))
@interface CDSSLCardinal_sdkEncryptedPatient : CDSSLBase <CDSSLCardinal_sdkPatient>
- (instancetype)initWithId:(NSString *)id identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName names:(NSArray<CDSSLCardinal_sdkPersonName *> *)names companyName:(NSString * _Nullable)companyName languages:(NSArray<NSString *> *)languages addresses:(NSArray<CDSSLCardinal_sdkEncryptedAddress *> *)addresses civility:(NSString * _Nullable)civility gender:(CDSSLCardinal_sdkGender * _Nullable)gender birthSex:(CDSSLCardinal_sdkGender * _Nullable)birthSex mergeToPatientId:(NSString * _Nullable)mergeToPatientId mergedIds:(NSSet<NSString *> *)mergedIds alias:(NSString * _Nullable)alias active:(BOOL)active deactivationReason:(CDSSLCardinal_sdkDeactivationReason *)deactivationReason deactivationDate:(CDSSLInt * _Nullable)deactivationDate ssin:(NSString * _Nullable)ssin maidenName:(NSString * _Nullable)maidenName spouseName:(NSString * _Nullable)spouseName partnerName:(NSString * _Nullable)partnerName personalStatus:(CDSSLCardinal_sdkPersonalStatus * _Nullable)personalStatus dateOfBirth:(CDSSLInt * _Nullable)dateOfBirth dateOfDeath:(CDSSLInt * _Nullable)dateOfDeath timestampOfLatestEidReading:(CDSSLLong * _Nullable)timestampOfLatestEidReading placeOfBirth:(NSString * _Nullable)placeOfBirth placeOfDeath:(NSString * _Nullable)placeOfDeath deceased:(CDSSLBoolean * _Nullable)deceased education:(NSString * _Nullable)education profession:(NSString * _Nullable)profession notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes note:(NSString * _Nullable)note administrativeNote:(NSString * _Nullable)administrativeNote nationality:(NSString * _Nullable)nationality race:(NSString * _Nullable)race ethnicity:(NSString * _Nullable)ethnicity preferredUserId:(NSString * _Nullable)preferredUserId picture:(CDSSLKotlinByteArray * _Nullable)picture externalId:(NSString * _Nullable)externalId insurabilities:(NSArray<CDSSLCardinal_sdkEncryptedInsurability *> *)insurabilities partnerships:(NSArray<CDSSLCardinal_sdkPartnership *> *)partnerships patientHealthCareParties:(NSArray<CDSSLCardinal_sdkEncryptedPatientHealthCareParty *> *)patientHealthCareParties financialInstitutionInformation:(NSArray<CDSSLCardinal_sdkEncryptedFinancialInstitutionInformation *> *)financialInstitutionInformation medicalHouseContracts:(NSArray<CDSSLCardinal_sdkEncryptedMedicalHouseContract *> *)medicalHouseContracts patientProfessions:(NSArray<CDSSLCardinal_sdkCodeStub *> *)patientProfessions parameters:(NSDictionary<NSString *, NSArray<NSString *> *> *)parameters properties:(NSSet<CDSSLCardinal_sdkEncryptedPropertyStub *> *)properties hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata medicalLocationId:(NSString * _Nullable)medicalLocationId nonDuplicateIds:(NSSet<NSString *> *)nonDuplicateIds encryptedAdministrativesDocuments:(NSSet<NSString *> *)encryptedAdministrativesDocuments comment:(NSString * _Nullable)comment warning:(NSString * _Nullable)warning fatherBirthCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)fatherBirthCountry birthCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)birthCountry nativeCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)nativeCountry socialStatus:(CDSSLCardinal_sdkCodeStub * _Nullable)socialStatus mainSourceOfIncome:(CDSSLCardinal_sdkCodeStub * _Nullable)mainSourceOfIncome schoolingInfos:(NSArray<CDSSLCardinal_sdkSchoolingInfo *> *)schoolingInfos employementInfos:(NSArray<CDSSLCardinal_sdkEmploymentInfo *> *)employementInfos __attribute__((swift_name("init(id:identifier:rev:created:modified:author:responsible:tags:codes:endOfLife:deletionDate:firstName:lastName:names:companyName:languages:addresses:civility:gender:birthSex:mergeToPatientId:mergedIds:alias:active:deactivationReason:deactivationDate:ssin:maidenName:spouseName:partnerName:personalStatus:dateOfBirth:dateOfDeath:timestampOfLatestEidReading:placeOfBirth:placeOfDeath:deceased:education:profession:notes:note:administrativeNote:nationality:race:ethnicity:preferredUserId:picture:externalId:insurabilities:partnerships:patientHealthCareParties:financialInstitutionInformation:medicalHouseContracts:patientProfessions:parameters:properties:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:medicalLocationId:nonDuplicateIds:encryptedAdministrativesDocuments:comment:warning:fatherBirthCountry:birthCountry:nativeCountry:socialStatus:mainSourceOfIncome:schoolingInfos:employementInfos:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedPatientCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedPatient *)doCopyId:(NSString *)id identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate firstName:(NSString * _Nullable)firstName lastName:(NSString * _Nullable)lastName names:(NSArray<CDSSLCardinal_sdkPersonName *> *)names companyName:(NSString * _Nullable)companyName languages:(NSArray<NSString *> *)languages addresses:(NSArray<CDSSLCardinal_sdkEncryptedAddress *> *)addresses civility:(NSString * _Nullable)civility gender:(CDSSLCardinal_sdkGender * _Nullable)gender birthSex:(CDSSLCardinal_sdkGender * _Nullable)birthSex mergeToPatientId:(NSString * _Nullable)mergeToPatientId mergedIds:(NSSet<NSString *> *)mergedIds alias:(NSString * _Nullable)alias active:(BOOL)active deactivationReason:(CDSSLCardinal_sdkDeactivationReason *)deactivationReason deactivationDate:(CDSSLInt * _Nullable)deactivationDate ssin:(NSString * _Nullable)ssin maidenName:(NSString * _Nullable)maidenName spouseName:(NSString * _Nullable)spouseName partnerName:(NSString * _Nullable)partnerName personalStatus:(CDSSLCardinal_sdkPersonalStatus * _Nullable)personalStatus dateOfBirth:(CDSSLInt * _Nullable)dateOfBirth dateOfDeath:(CDSSLInt * _Nullable)dateOfDeath timestampOfLatestEidReading:(CDSSLLong * _Nullable)timestampOfLatestEidReading placeOfBirth:(NSString * _Nullable)placeOfBirth placeOfDeath:(NSString * _Nullable)placeOfDeath deceased:(CDSSLBoolean * _Nullable)deceased education:(NSString * _Nullable)education profession:(NSString * _Nullable)profession notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes note:(NSString * _Nullable)note administrativeNote:(NSString * _Nullable)administrativeNote nationality:(NSString * _Nullable)nationality race:(NSString * _Nullable)race ethnicity:(NSString * _Nullable)ethnicity preferredUserId:(NSString * _Nullable)preferredUserId picture:(CDSSLKotlinByteArray * _Nullable)picture externalId:(NSString * _Nullable)externalId insurabilities:(NSArray<CDSSLCardinal_sdkEncryptedInsurability *> *)insurabilities partnerships:(NSArray<CDSSLCardinal_sdkPartnership *> *)partnerships patientHealthCareParties:(NSArray<CDSSLCardinal_sdkEncryptedPatientHealthCareParty *> *)patientHealthCareParties financialInstitutionInformation:(NSArray<CDSSLCardinal_sdkEncryptedFinancialInstitutionInformation *> *)financialInstitutionInformation medicalHouseContracts:(NSArray<CDSSLCardinal_sdkEncryptedMedicalHouseContract *> *)medicalHouseContracts patientProfessions:(NSArray<CDSSLCardinal_sdkCodeStub *> *)patientProfessions parameters:(NSDictionary<NSString *, NSArray<NSString *> *> *)parameters properties:(NSSet<CDSSLCardinal_sdkEncryptedPropertyStub *> *)properties hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata medicalLocationId:(NSString * _Nullable)medicalLocationId nonDuplicateIds:(NSSet<NSString *> *)nonDuplicateIds encryptedAdministrativesDocuments:(NSSet<NSString *> *)encryptedAdministrativesDocuments comment:(NSString * _Nullable)comment warning:(NSString * _Nullable)warning fatherBirthCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)fatherBirthCountry birthCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)birthCountry nativeCountry:(CDSSLCardinal_sdkCodeStub * _Nullable)nativeCountry socialStatus:(CDSSLCardinal_sdkCodeStub * _Nullable)socialStatus mainSourceOfIncome:(CDSSLCardinal_sdkCodeStub * _Nullable)mainSourceOfIncome schoolingInfos:(NSArray<CDSSLCardinal_sdkSchoolingInfo *> *)schoolingInfos employementInfos:(NSArray<CDSSLCardinal_sdkEmploymentInfo *> *)employementInfos __attribute__((swift_name("doCopy(id:identifier:rev:created:modified:author:responsible:tags:codes:endOfLife:deletionDate:firstName:lastName:names:companyName:languages:addresses:civility:gender:birthSex:mergeToPatientId:mergedIds:alias:active:deactivationReason:deactivationDate:ssin:maidenName:spouseName:partnerName:personalStatus:dateOfBirth:dateOfDeath:timestampOfLatestEidReading:placeOfBirth:placeOfDeath:deceased:education:profession:notes:note:administrativeNote:nationality:race:ethnicity:preferredUserId:picture:externalId:insurabilities:partnerships:patientHealthCareParties:financialInstitutionInformation:medicalHouseContracts:patientProfessions:parameters:properties:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:medicalLocationId:nonDuplicateIds:encryptedAdministrativesDocuments:comment:warning:fatherBirthCountry:birthCountry:nativeCountry:socialStatus:mainSourceOfIncome:schoolingInfos:employementInfos:)")));
- (CDSSLCardinal_sdkEncryptedPatient *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL active __attribute__((swift_name("active")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedAddress *> *addresses __attribute__((swift_name("addresses")));
@property (readonly) NSString * _Nullable administrativeNote __attribute__((swift_name("administrativeNote")));
@property (readonly) NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *aesExchangeKeys __attribute__((swift_name("aesExchangeKeys")));
@property (readonly) NSString * _Nullable alias __attribute__((swift_name("alias")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable birthCountry __attribute__((swift_name("birthCountry")));
@property (readonly) CDSSLCardinal_sdkGender * _Nullable birthSex __attribute__((swift_name("birthSex")));
@property (readonly) NSString * _Nullable civility __attribute__((swift_name("civility")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) NSString * _Nullable companyName __attribute__((swift_name("companyName")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) CDSSLInt * _Nullable dateOfBirth __attribute__((swift_name("dateOfBirth")));
@property (readonly) CDSSLInt * _Nullable dateOfDeath __attribute__((swift_name("dateOfDeath")));
@property (readonly) CDSSLInt * _Nullable deactivationDate __attribute__((swift_name("deactivationDate")));
@property (readonly) CDSSLCardinal_sdkDeactivationReason *deactivationReason __attribute__((swift_name("deactivationReason")));
@property (readonly) CDSSLBoolean * _Nullable deceased __attribute__((swift_name("deceased")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable education __attribute__((swift_name("education")));
@property (readonly) NSArray<CDSSLCardinal_sdkEmploymentInfo *> *employementInfos __attribute__((swift_name("employementInfos")));
@property (readonly) NSSet<NSString *> *encryptedAdministrativesDocuments __attribute__((swift_name("encryptedAdministrativesDocuments")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable ethnicity __attribute__((swift_name("ethnicity")));
@property (readonly) NSString * _Nullable externalId __attribute__((swift_name("externalId")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable fatherBirthCountry __attribute__((swift_name("fatherBirthCountry")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedFinancialInstitutionInformation *> *financialInstitutionInformation __attribute__((swift_name("financialInstitutionInformation")));
@property (readonly) NSString * _Nullable firstName __attribute__((swift_name("firstName")));
@property (readonly) CDSSLCardinal_sdkGender * _Nullable gender __attribute__((swift_name("gender")));
@property (readonly) NSDictionary<NSString *, NSArray<id> *> *hcPartyKeys __attribute__((swift_name("hcPartyKeys")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedInsurability *> *insurabilities __attribute__((swift_name("insurabilities")));
@property (readonly) NSArray<NSString *> *languages __attribute__((swift_name("languages")));
@property (readonly) NSString * _Nullable lastName __attribute__((swift_name("lastName")));
@property (readonly) NSString * _Nullable maidenName __attribute__((swift_name("maidenName")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable mainSourceOfIncome __attribute__((swift_name("mainSourceOfIncome")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedMedicalHouseContract *> *medicalHouseContracts __attribute__((swift_name("medicalHouseContracts")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) NSString * _Nullable mergeToPatientId __attribute__((swift_name("mergeToPatientId")));
@property (readonly) NSSet<NSString *> *mergedIds __attribute__((swift_name("mergedIds")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly, getter=names_) NSArray<CDSSLCardinal_sdkPersonName *> *names __attribute__((swift_name("names")));
@property (readonly) NSString * _Nullable nationality __attribute__((swift_name("nationality")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable nativeCountry __attribute__((swift_name("nativeCountry")));
@property (readonly) NSSet<NSString *> *nonDuplicateIds __attribute__((swift_name("nonDuplicateIds")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSDictionary<NSString *, NSArray<NSString *> *> *parameters __attribute__((swift_name("parameters")));
@property (readonly) NSString * _Nullable partnerName __attribute__((swift_name("partnerName")));
@property (readonly) NSArray<CDSSLCardinal_sdkPartnership *> *partnerships __attribute__((swift_name("partnerships")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedPatientHealthCareParty *> *patientHealthCareParties __attribute__((swift_name("patientHealthCareParties")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *patientProfessions __attribute__((swift_name("patientProfessions")));
@property (readonly) CDSSLCardinal_sdkPersonalStatus * _Nullable personalStatus __attribute__((swift_name("personalStatus")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable picture __attribute__((swift_name("picture")));
@property (readonly) NSString * _Nullable placeOfBirth __attribute__((swift_name("placeOfBirth")));
@property (readonly) NSString * _Nullable placeOfDeath __attribute__((swift_name("placeOfDeath")));
@property (readonly) NSString * _Nullable preferredUserId __attribute__((swift_name("preferredUserId")));
@property (readonly) NSDictionary<NSString *, id> *privateKeyShamirPartitions __attribute__((swift_name("privateKeyShamirPartitions")));
@property (readonly) NSString * _Nullable profession __attribute__((swift_name("profession")));
@property (readonly) NSSet<CDSSLCardinal_sdkEncryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) id _Nullable publicKey __attribute__((swift_name("publicKey")));
@property (readonly) NSSet<id> *publicKeysForOaepWithSha256 __attribute__((swift_name("publicKeysForOaepWithSha256")));
@property (readonly) NSString * _Nullable race __attribute__((swift_name("race")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSArray<CDSSLCardinal_sdkSchoolingInfo *> *schoolingInfos __attribute__((swift_name("schoolingInfos")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable socialStatus __attribute__((swift_name("socialStatus")));
@property (readonly) NSString * _Nullable spouseName __attribute__((swift_name("spouseName")));
@property (readonly) NSString * _Nullable ssin __attribute__((swift_name("ssin")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) CDSSLLong * _Nullable timestampOfLatestEidReading __attribute__((swift_name("timestampOfLatestEidReading")));
@property (readonly) NSDictionary<id, NSDictionary<id, id> *> *transferKeys __attribute__((swift_name("transferKeys")));
@property (readonly) NSString * _Nullable warning __attribute__((swift_name("warning")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityWithTypeInfo")))
@interface CDSSLCardinal_sdkEntityWithTypeInfo<T> : CDSSLBase
- (instancetype)initWithEntity:(T)entity type:(CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *)type __attribute__((swift_name("init(entity:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEntityWithTypeInfoCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEntityWithTypeInfo<T> *)doCopyEntity:(T)entity type:(CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *)type __attribute__((swift_name("doCopy(entity:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) T entity __attribute__((swift_name("entity")));
@property (readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptions.Tag")))
@interface CDSSLCardinal_sdkShareAllPatientDataOptionsTag : CDSSLKotlinEnum<CDSSLCardinal_sdkShareAllPatientDataOptionsTag *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkShareAllPatientDataOptionsTagCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsTag *all __attribute__((swift_name("all")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsTag *medicalinformation __attribute__((swift_name("medicalinformation")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsTag *financialinformation __attribute__((swift_name("financialinformation")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkShareAllPatientDataOptionsTag *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkShareAllPatientDataOptionsTag *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptions.Result")))
@interface CDSSLCardinal_sdkShareAllPatientDataOptionsResult : CDSSLBase
- (instancetype)initWithPatient:(CDSSLCardinal_sdkEncryptedPatient *)patient statuses:(NSDictionary<CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *, CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResult *> *)statuses __attribute__((swift_name("init(patient:statuses:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkShareAllPatientDataOptionsResultCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkShareAllPatientDataOptionsResult *)doCopyPatient:(CDSSLCardinal_sdkEncryptedPatient *)patient statuses:(NSDictionary<CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *, CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResult *> *)statuses __attribute__((swift_name("doCopy(patient:statuses:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkEncryptedPatient *patient __attribute__((swift_name("patient")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *, CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResult *> *statuses __attribute__((swift_name("statuses")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityAccessInformation")))
@interface CDSSLCardinal_sdkEntityAccessInformation : CDSSLBase
- (instancetype)initWithPermissionsByDataOwnerId:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)permissionsByDataOwnerId hasUnknownAnonymousDataOwners:(BOOL)hasUnknownAnonymousDataOwners __attribute__((swift_name("init(permissionsByDataOwnerId:hasUnknownAnonymousDataOwners:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEntityAccessInformationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEntityAccessInformation *)doCopyPermissionsByDataOwnerId:(NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *)permissionsByDataOwnerId hasUnknownAnonymousDataOwners:(BOOL)hasUnknownAnonymousDataOwners __attribute__((swift_name("doCopy(permissionsByDataOwnerId:hasUnknownAnonymousDataOwners:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL hasUnknownAnonymousDataOwners __attribute__((swift_name("hasUnknownAnonymousDataOwners")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkAccessLevel *> *permissionsByDataOwnerId __attribute__((swift_name("permissionsByDataOwnerId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPatientShareOptions")))
@interface CDSSLCardinal_sdkPatientShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPatientShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPatientShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSortDirection")))
@interface CDSSLCardinal_sdkSortDirection : CDSSLKotlinEnum<CDSSLCardinal_sdkSortDirection *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSortDirectionCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkSortDirection *asc __attribute__((swift_name("asc")));
@property (class, readonly) CDSSLCardinal_sdkSortDirection *desc __attribute__((swift_name("desc")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkSortDirection *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkSortDirection *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Cardinal_sdkReceipt")))
@protocol CDSSLCardinal_sdkReceipt <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSDictionary<CDSSLCardinal_sdkReceiptBlobType *, NSString *> *attachmentIds __attribute__((swift_name("attachmentIds")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSString * _Nullable documentId __attribute__((swift_name("documentId")));
@property (readonly) NSArray<NSString *> *references __attribute__((swift_name("references")));
@property (readonly) NSString * _Nullable subCategory __attribute__((swift_name("subCategory")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedReceipt")))
@interface CDSSLCardinal_sdkDecryptedReceipt : CDSSLBase <CDSSLCardinal_sdkReceipt>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate attachmentIds:(NSDictionary<CDSSLCardinal_sdkReceiptBlobType *, NSString *> *)attachmentIds references:(NSArray<NSString *> *)references documentId:(NSString * _Nullable)documentId category:(NSString * _Nullable)category subCategory:(NSString * _Nullable)subCategory secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:attachmentIds:references:documentId:category:subCategory:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedReceiptCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedReceipt *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate attachmentIds:(NSDictionary<CDSSLCardinal_sdkReceiptBlobType *, NSString *> *)attachmentIds references:(NSArray<NSString *> *)references documentId:(NSString * _Nullable)documentId category:(NSString * _Nullable)category subCategory:(NSString * _Nullable)subCategory secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:attachmentIds:references:documentId:category:subCategory:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedReceipt *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkReceiptBlobType *, NSString *> *attachmentIds __attribute__((swift_name("attachmentIds")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable documentId __attribute__((swift_name("documentId")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSArray<NSString *> *references __attribute__((swift_name("references")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSString * _Nullable subCategory __attribute__((swift_name("subCategory")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedReceipt")))
@interface CDSSLCardinal_sdkEncryptedReceipt : CDSSLBase <CDSSLCardinal_sdkReceipt>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate attachmentIds:(NSDictionary<CDSSLCardinal_sdkReceiptBlobType *, NSString *> *)attachmentIds references:(NSArray<NSString *> *)references documentId:(NSString * _Nullable)documentId category:(NSString * _Nullable)category subCategory:(NSString * _Nullable)subCategory secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:attachmentIds:references:documentId:category:subCategory:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedReceiptCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedReceipt *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate attachmentIds:(NSDictionary<CDSSLCardinal_sdkReceiptBlobType *, NSString *> *)attachmentIds references:(NSArray<NSString *> *)references documentId:(NSString * _Nullable)documentId category:(NSString * _Nullable)category subCategory:(NSString * _Nullable)subCategory secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:attachmentIds:references:documentId:category:subCategory:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedReceipt *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkReceiptBlobType *, NSString *> *attachmentIds __attribute__((swift_name("attachmentIds")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSString * _Nullable category __attribute__((swift_name("category")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable documentId __attribute__((swift_name("documentId")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSArray<NSString *> *references __attribute__((swift_name("references")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSString * _Nullable subCategory __attribute__((swift_name("subCategory")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReceiptShareOptions")))
@interface CDSSLCardinal_sdkReceiptShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReceiptShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkReceiptShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRecoveryKeySize")))
@interface CDSSLCardinal_sdkRecoveryKeySize : CDSSLKotlinEnum<CDSSLCardinal_sdkRecoveryKeySize *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) CDSSLCardinal_sdkRecoveryKeySize *bytes16 __attribute__((swift_name("bytes16")));
@property (class, readonly) CDSSLCardinal_sdkRecoveryKeySize *bytes32 __attribute__((swift_name("bytes32")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkRecoveryKeySize *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkRecoveryKeySize *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRecoveryDataUseFailureReason")))
@interface CDSSLCardinal_sdkRecoveryDataUseFailureReason : CDSSLKotlinEnum<CDSSLCardinal_sdkRecoveryDataUseFailureReason *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRecoveryDataUseFailureReasonCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkRecoveryDataUseFailureReason *missing __attribute__((swift_name("missing")));
@property (class, readonly) CDSSLCardinal_sdkRecoveryDataUseFailureReason *unauthorized __attribute__((swift_name("unauthorized")));
@property (class, readonly) CDSSLCardinal_sdkRecoveryDataUseFailureReason *invalidtype __attribute__((swift_name("invalidtype")));
@property (class, readonly) CDSSLCardinal_sdkRecoveryDataUseFailureReason *invalidcontent __attribute__((swift_name("invalidcontent")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkRecoveryDataUseFailureReason *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkRecoveryDataUseFailureReason *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Cardinal_sdkTimeTable")))
@protocol CDSSLCardinal_sdkTimeTable <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString * _Nullable agendaId __attribute__((swift_name("agendaId")));
@property (readonly) CDSSLLong * _Nullable endTime __attribute__((swift_name("endTime")));
@property (readonly) NSArray<CDSSLCardinal_sdkTimeTableItem *> *items __attribute__((swift_name("items")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) CDSSLLong * _Nullable startTime __attribute__((swift_name("startTime")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedTimeTable")))
@interface CDSSLCardinal_sdkDecryptedTimeTable : CDSSLBase <CDSSLCardinal_sdkTimeTable>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name agendaId:(NSString * _Nullable)agendaId startTime:(CDSSLLong * _Nullable)startTime endTime:(CDSSLLong * _Nullable)endTime items:(NSArray<CDSSLCardinal_sdkTimeTableItem *> *)items secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:name:agendaId:startTime:endTime:items:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedTimeTableCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedTimeTable *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name agendaId:(NSString * _Nullable)agendaId startTime:(CDSSLLong * _Nullable)startTime endTime:(CDSSLLong * _Nullable)endTime items:(NSArray<CDSSLCardinal_sdkTimeTableItem *> *)items secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:name:agendaId:startTime:endTime:items:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkDecryptedTimeTable *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable agendaId __attribute__((swift_name("agendaId")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) CDSSLLong * _Nullable endTime __attribute__((swift_name("endTime")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkTimeTableItem *> *items __attribute__((swift_name("items")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLLong * _Nullable startTime __attribute__((swift_name("startTime")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedTimeTable")))
@interface CDSSLCardinal_sdkEncryptedTimeTable : CDSSLBase <CDSSLCardinal_sdkTimeTable>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name agendaId:(NSString * _Nullable)agendaId startTime:(CDSSLLong * _Nullable)startTime endTime:(CDSSLLong * _Nullable)endTime items:(NSArray<CDSSLCardinal_sdkTimeTableItem *> *)items secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:name:agendaId:startTime:endTime:items:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedTimeTableCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedTimeTable *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name agendaId:(NSString * _Nullable)agendaId startTime:(CDSSLLong * _Nullable)startTime endTime:(CDSSLLong * _Nullable)endTime items:(NSArray<CDSSLCardinal_sdkTimeTableItem *> *)items secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:name:agendaId:startTime:endTime:items:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:securityMetadata:)")));
- (CDSSLCardinal_sdkEncryptedTimeTable *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable agendaId __attribute__((swift_name("agendaId")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) CDSSLLong * _Nullable endTime __attribute__((swift_name("endTime")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkTimeTableItem *> *items __attribute__((swift_name("items")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) CDSSLLong * _Nullable startTime __attribute__((swift_name("startTime")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTimeTableShareOptions")))
@interface CDSSLCardinal_sdkTimeTableShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTimeTableShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkTimeTableShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end

__attribute__((swift_name("Cardinal_sdkTopic")))
@protocol CDSSLCardinal_sdkTopic <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkHasEncryptionMetadata, CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkTopicRole *> *activeParticipants __attribute__((swift_name("activeParticipants")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSSet<NSString *> *linkedHealthElements __attribute__((swift_name("linkedHealthElements")));
@property (readonly) NSSet<NSString *> *linkedServices __attribute__((swift_name("linkedServices")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedTopic")))
@interface CDSSLCardinal_sdkDecryptedTopic : CDSSLBase <CDSSLCardinal_sdkTopic>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified healthElementId:(NSString * _Nullable)healthElementId contactId:(NSString * _Nullable)contactId description:(NSString * _Nullable)description codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate activeParticipants:(NSDictionary<NSString *, CDSSLCardinal_sdkTopicRole *> *)activeParticipants securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf linkedHealthElements:(NSSet<NSString *> *)linkedHealthElements linkedServices:(NSSet<NSString *> *)linkedServices __attribute__((swift_name("init(id:rev:created:modified:healthElementId:contactId:description:codes:tags:author:responsible:medicalLocationId:endOfLife:deletionDate:activeParticipants:securityMetadata:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:linkedHealthElements:linkedServices:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedTopicCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedTopic *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified healthElementId:(NSString * _Nullable)healthElementId contactId:(NSString * _Nullable)contactId description:(NSString * _Nullable)description codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate activeParticipants:(NSDictionary<NSString *, CDSSLCardinal_sdkTopicRole *> *)activeParticipants securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf linkedHealthElements:(NSSet<NSString *> *)linkedHealthElements linkedServices:(NSSet<NSString *> *)linkedServices __attribute__((swift_name("doCopy(id:rev:created:modified:healthElementId:contactId:description:codes:tags:author:responsible:medicalLocationId:endOfLife:deletionDate:activeParticipants:securityMetadata:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:linkedHealthElements:linkedServices:)")));
- (CDSSLCardinal_sdkDecryptedTopic *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkTopicRole *> *activeParticipants __attribute__((swift_name("activeParticipants")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSSet<NSString *> *linkedHealthElements __attribute__((swift_name("linkedHealthElements")));
@property (readonly) NSSet<NSString *> *linkedServices __attribute__((swift_name("linkedServices")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedTopic")))
@interface CDSSLCardinal_sdkEncryptedTopic : CDSSLBase <CDSSLCardinal_sdkTopic>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified healthElementId:(NSString * _Nullable)healthElementId contactId:(NSString * _Nullable)contactId description:(NSString * _Nullable)description codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate activeParticipants:(NSDictionary<NSString *, CDSSLCardinal_sdkTopicRole *> *)activeParticipants securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf linkedHealthElements:(NSSet<NSString *> *)linkedHealthElements linkedServices:(NSSet<NSString *> *)linkedServices __attribute__((swift_name("init(id:rev:created:modified:healthElementId:contactId:description:codes:tags:author:responsible:medicalLocationId:endOfLife:deletionDate:activeParticipants:securityMetadata:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:linkedHealthElements:linkedServices:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedTopicCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedTopic *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified healthElementId:(NSString * _Nullable)healthElementId contactId:(NSString * _Nullable)contactId description:(NSString * _Nullable)description codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate activeParticipants:(NSDictionary<NSString *, CDSSLCardinal_sdkTopicRole *> *)activeParticipants securityMetadata:(CDSSLCardinal_sdkSecurityMetadata * _Nullable)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys cryptedForeignKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)cryptedForeignKeys delegations:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)delegations encryptionKeys:(NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *)encryptionKeys encryptedSelf:(id _Nullable)encryptedSelf linkedHealthElements:(NSSet<NSString *> *)linkedHealthElements linkedServices:(NSSet<NSString *> *)linkedServices __attribute__((swift_name("doCopy(id:rev:created:modified:healthElementId:contactId:description:codes:tags:author:responsible:medicalLocationId:endOfLife:deletionDate:activeParticipants:securityMetadata:secretForeignKeys:cryptedForeignKeys:delegations:encryptionKeys:encryptedSelf:linkedHealthElements:linkedServices:)")));
- (CDSSLCardinal_sdkEncryptedTopic *)doCopyWithSecurityMetadataSecurityMetadata:(CDSSLCardinal_sdkSecurityMetadata *)securityMetadata secretForeignKeys:(NSSet<NSString *> *)secretForeignKeys __attribute__((swift_name("doCopyWithSecurityMetadata(securityMetadata:secretForeignKeys:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkTopicRole *> *activeParticipants __attribute__((swift_name("activeParticipants")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *cryptedForeignKeys __attribute__((swift_name("cryptedForeignKeys")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *delegations __attribute__((swift_name("delegations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSDictionary<NSString *, NSSet<CDSSLCardinal_sdkDelegation *> *> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSSet<NSString *> *linkedHealthElements __attribute__((swift_name("linkedHealthElements")));
@property (readonly) NSSet<NSString *> *linkedServices __attribute__((swift_name("linkedServices")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<NSString *> *secretForeignKeys __attribute__((swift_name("secretForeignKeys")));
@property (readonly) CDSSLCardinal_sdkSecurityMetadata * _Nullable securityMetadata __attribute__((swift_name("securityMetadata")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTopicShareOptions")))
@interface CDSSLCardinal_sdkTopicShareOptions : CDSSLBase <CDSSLCardinal_sdkSimpleDelegateShareOptions>
- (instancetype)initWithRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("init(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTopicShareOptionsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkTopicShareOptions *)doCopyRequestedPermissions:(CDSSLCardinal_sdkRequestedPermission *)requestedPermissions shareEncryptionKey:(CDSSLCardinal_sdkShareMetadataBehaviour *)shareEncryptionKey sharePatientId:(CDSSLCardinal_sdkShareMetadataBehaviour *)sharePatientId shareSecretIds:(id<CDSSLCardinal_sdkSecretIdShareOptions>)shareSecretIds __attribute__((swift_name("doCopy(requestedPermissions:shareEncryptionKey:sharePatientId:shareSecretIds:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRequestedPermission *requestedPermissions __attribute__((swift_name("requestedPermissions")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareEncryptionKey __attribute__((swift_name("shareEncryptionKey")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *shareOwningEntityIds __attribute__((swift_name("shareOwningEntityIds")));
@property (readonly) CDSSLCardinal_sdkShareMetadataBehaviour *sharePatientId __attribute__((swift_name("sharePatientId")));
@property (readonly) id<CDSSLCardinal_sdkSecretIdShareOptions> shareSecretIds __attribute__((swift_name("shareSecretIds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTopicRole")))
@interface CDSSLCardinal_sdkTopicRole : CDSSLKotlinEnum<CDSSLCardinal_sdkTopicRole *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTopicRoleCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkTopicRole *participant __attribute__((swift_name("participant")));
@property (class, readonly) CDSSLCardinal_sdkTopicRole *admin __attribute__((swift_name("admin")));
@property (class, readonly) CDSSLCardinal_sdkTopicRole *owner __attribute__((swift_name("owner")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkTopicRole *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkTopicRole *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAgenda")))
@interface CDSSLCardinal_sdkAgenda : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name userId:(NSString * _Nullable)userId rights:(NSArray<CDSSLCardinal_sdkRight *> *)rights __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:name:userId:rights:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAgendaCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkAgenda *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name userId:(NSString * _Nullable)userId rights:(NSArray<CDSSLCardinal_sdkRight *> *)rights __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:name:userId:rights:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSArray<CDSSLCardinal_sdkRight *> *rights __attribute__((swift_name("rights")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkBaseFilterOptions")))
@protocol CDSSLCardinal_sdkBaseFilterOptions <CDSSLCardinal_sdkFilterOptions>
@required
- (id<CDSSLCardinal_sdkBaseFilterOptions>)andOther_:(id<CDSSLCardinal_sdkBaseFilterOptions>)other __attribute__((swift_name("and(other_:)")));
- (id<CDSSLCardinal_sdkBaseFilterOptions>)minusOther_:(id<CDSSLCardinal_sdkBaseFilterOptions>)other __attribute__((swift_name("minus(other_:)")));
- (id<CDSSLCardinal_sdkBaseFilterOptions>)orOther_:(id<CDSSLCardinal_sdkBaseFilterOptions>)other __attribute__((swift_name("or(other_:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkBaseSortableFilterOptions")))
@protocol CDSSLCardinal_sdkBaseSortableFilterOptions <CDSSLCardinal_sdkBaseFilterOptions, CDSSLCardinal_sdkSortableFilterOptions>
@required
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkApplicationSettings")))
@interface CDSSLCardinal_sdkApplicationSettings : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate settings:(NSDictionary<NSString *, NSString *> *)settings __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:settings:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkApplicationSettingsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkApplicationSettings *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate settings:(NSDictionary<NSString *, NSString *> *)settings __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:settings:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSDictionary<NSString *, NSString *> *settings __attribute__((swift_name("settings")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCode")))
@interface CDSSLCardinal_sdkCode : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkCodeIdentification>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate context:(NSString * _Nullable)context type:(NSString * _Nullable)type code:(NSString * _Nullable)code version:(NSString * _Nullable)version label:(NSDictionary<NSString *, NSString *> * _Nullable)label author:(NSString * _Nullable)author regions:(NSSet<NSString *> *)regions periodicity:(NSSet<CDSSLCardinal_sdkPeriodicity *> *)periodicity level:(CDSSLInt * _Nullable)level links:(NSSet<NSString *> *)links qualifiedLinks:(NSDictionary<NSString *, NSArray<NSString *> *> *)qualifiedLinks flags:(NSSet<CDSSLCardinal_sdkCodeFlag *> *)flags searchTerms:(NSDictionary<NSString *, NSSet<NSString *> *> *)searchTerms data:(NSString * _Nullable)data appendices:(NSDictionary<CDSSLCardinal_sdkAppendixType *, NSString *> *)appendices disabled:(BOOL)disabled __attribute__((swift_name("init(id:rev:deletionDate:context:type:code:version:label:author:regions:periodicity:level:links:qualifiedLinks:flags:searchTerms:data:appendices:disabled:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCodeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkCode *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate context:(NSString * _Nullable)context type:(NSString * _Nullable)type code:(NSString * _Nullable)code version:(NSString * _Nullable)version label:(NSDictionary<NSString *, NSString *> * _Nullable)label author:(NSString * _Nullable)author regions:(NSSet<NSString *> *)regions periodicity:(NSSet<CDSSLCardinal_sdkPeriodicity *> *)periodicity level:(CDSSLInt * _Nullable)level links:(NSSet<NSString *> *)links qualifiedLinks:(NSDictionary<NSString *, NSArray<NSString *> *> *)qualifiedLinks flags:(NSSet<CDSSLCardinal_sdkCodeFlag *> *)flags searchTerms:(NSDictionary<NSString *, NSSet<NSString *> *> *)searchTerms data:(NSString * _Nullable)data appendices:(NSDictionary<CDSSLCardinal_sdkAppendixType *, NSString *> *)appendices disabled:(BOOL)disabled __attribute__((swift_name("doCopy(id:rev:deletionDate:context:type:code:version:label:author:regions:periodicity:level:links:qualifiedLinks:flags:searchTerms:data:appendices:disabled:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkAppendixType *, NSString *> *appendices __attribute__((swift_name("appendices")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) NSString * _Nullable context __attribute__((swift_name("context")));
@property (readonly) NSString * _Nullable data __attribute__((swift_name("data")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) BOOL disabled __attribute__((swift_name("disabled")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeFlag *> *flags __attribute__((swift_name("flags")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable label __attribute__((swift_name("label")));
@property (readonly) CDSSLInt * _Nullable level __attribute__((swift_name("level")));
@property (readonly) NSSet<NSString *> *links __attribute__((swift_name("links")));
@property (readonly) NSSet<CDSSLCardinal_sdkPeriodicity *> *periodicity __attribute__((swift_name("periodicity")));
@property (readonly) NSDictionary<NSString *, NSArray<NSString *> *> *qualifiedLinks __attribute__((swift_name("qualifiedLinks")));
@property (readonly) NSSet<NSString *> *regions __attribute__((swift_name("regions")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSDictionary<NSString *, NSSet<NSString *> *> *searchTerms __attribute__((swift_name("searchTerms")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkBooleanResponse")))
@interface CDSSLCardinal_sdkBooleanResponse : CDSSLBase
- (instancetype)initWithResponse:(BOOL)response __attribute__((swift_name("init(response:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkBooleanResponseCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkBooleanResponse *)doCopyResponse:(BOOL)response __attribute__((swift_name("doCopy(response:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL response __attribute__((swift_name("response")));
@end

__attribute__((swift_name("Cardinal_sdkNamed")))
@protocol CDSSLCardinal_sdkNamed
@required
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((swift_name("Cardinal_sdkDataOwner")))
@protocol CDSSLCardinal_sdkDataOwner
@required
@property (readonly) NSSet<id<CDSSLCardinal_sdkPropertyStub>> *properties __attribute__((swift_name("properties")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDevice")))
@interface CDSSLCardinal_sdkDevice : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkNamed, CDSSLCardinal_sdkCryptoActor, CDSSLCardinal_sdkDataOwner>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate identifiers:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifiers created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife medicalLocationId:(NSString * _Nullable)medicalLocationId externalId:(NSString * _Nullable)externalId name:(NSString * _Nullable)name type:(NSString * _Nullable)type brand:(NSString * _Nullable)brand model:(NSString * _Nullable)model serialNumber:(NSString * _Nullable)serialNumber parentId:(NSString * _Nullable)parentId picture:(CDSSLKotlinByteArray * _Nullable)picture properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 __attribute__((swift_name("init(id:rev:deletionDate:identifiers:created:modified:author:responsible:tags:codes:endOfLife:medicalLocationId:externalId:name:type:brand:model:serialNumber:parentId:picture:properties:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDeviceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDevice *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate identifiers:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifiers created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife medicalLocationId:(NSString * _Nullable)medicalLocationId externalId:(NSString * _Nullable)externalId name:(NSString * _Nullable)name type:(NSString * _Nullable)type brand:(NSString * _Nullable)brand model:(NSString * _Nullable)model serialNumber:(NSString * _Nullable)serialNumber parentId:(NSString * _Nullable)parentId picture:(CDSSLKotlinByteArray * _Nullable)picture properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 __attribute__((swift_name("doCopy(id:rev:deletionDate:identifiers:created:modified:author:responsible:tags:codes:endOfLife:medicalLocationId:externalId:name:type:brand:model:serialNumber:parentId:picture:properties:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *aesExchangeKeys __attribute__((swift_name("aesExchangeKeys")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSString * _Nullable brand __attribute__((swift_name("brand")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable externalId __attribute__((swift_name("externalId")));
@property (readonly) NSDictionary<NSString *, NSArray<id> *> *hcPartyKeys __attribute__((swift_name("hcPartyKeys")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifiers __attribute__((swift_name("identifiers")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) NSString * _Nullable model __attribute__((swift_name("model")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable parentId __attribute__((swift_name("parentId")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable picture __attribute__((swift_name("picture")));
@property (readonly) NSDictionary<NSString *, id> *privateKeyShamirPartitions __attribute__((swift_name("privateKeyShamirPartitions")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) id _Nullable publicKey __attribute__((swift_name("publicKey")));
@property (readonly) NSSet<id> *publicKeysForOaepWithSha256 __attribute__((swift_name("publicKeysForOaepWithSha256")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSString * _Nullable serialNumber __attribute__((swift_name("serialNumber")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSDictionary<id, NSDictionary<id, id> *> *transferKeys __attribute__((swift_name("transferKeys")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentTemplate")))
@interface CDSSLCardinal_sdkDocumentTemplate : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate attachment:(CDSSLKotlinByteArray * _Nullable)attachment documentType:(CDSSLCardinal_sdkDocumentType * _Nullable)documentType mainUti:(NSString * _Nullable)mainUti name:(NSString * _Nullable)name otherUtis:(NSSet<NSString *> *)otherUtis attachmentId:(NSString * _Nullable)attachmentId version:(CDSSLCardinal_sdkReportVersion * _Nullable)version owner:(NSString * _Nullable)owner guid:(NSString * _Nullable)guid group:(CDSSLCardinal_sdkDocumentGroup * _Nullable)group descr:(NSString * _Nullable)descr disabled:(NSString * _Nullable)disabled specialty:(CDSSLCardinal_sdkCodeStub * _Nullable)specialty __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:attachment:documentType:mainUti:name:otherUtis:attachmentId:version:owner:guid:group:descr:disabled:specialty:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDocumentTemplateCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDocumentTemplate *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate attachment:(CDSSLKotlinByteArray * _Nullable)attachment documentType:(CDSSLCardinal_sdkDocumentType * _Nullable)documentType mainUti:(NSString * _Nullable)mainUti name:(NSString * _Nullable)name otherUtis:(NSSet<NSString *> *)otherUtis attachmentId:(NSString * _Nullable)attachmentId version:(CDSSLCardinal_sdkReportVersion * _Nullable)version owner:(NSString * _Nullable)owner guid:(NSString * _Nullable)guid group:(CDSSLCardinal_sdkDocumentGroup * _Nullable)group descr:(NSString * _Nullable)descr disabled:(NSString * _Nullable)disabled specialty:(CDSSLCardinal_sdkCodeStub * _Nullable)specialty __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:attachment:documentType:mainUti:name:otherUtis:attachmentId:version:owner:guid:group:descr:disabled:specialty:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable attachment __attribute__((swift_name("attachment")));
@property (readonly) NSString * _Nullable attachmentId __attribute__((swift_name("attachmentId")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSString * _Nullable disabled __attribute__((swift_name("disabled")));
@property (readonly) CDSSLCardinal_sdkDocumentType * _Nullable documentType __attribute__((swift_name("documentType")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) CDSSLCardinal_sdkDocumentGroup * _Nullable group __attribute__((swift_name("group")));
@property (readonly) NSString * _Nullable guid __attribute__((swift_name("guid")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable mainUti __attribute__((swift_name("mainUti")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSSet<NSString *> *otherUtis __attribute__((swift_name("otherUtis")));
@property (readonly) NSString * _Nullable owner __attribute__((swift_name("owner")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable specialty __attribute__((swift_name("specialty")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) CDSSLCardinal_sdkReportVersion * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityReference")))
@interface CDSSLCardinal_sdkEntityReference : CDSSLBase <CDSSLCardinal_sdkStoredDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate docId:(NSString * _Nullable)docId __attribute__((swift_name("init(id:rev:deletionDate:docId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEntityReferenceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEntityReference *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate docId:(NSString * _Nullable)docId __attribute__((swift_name("doCopy(id:rev:deletionDate:docId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable docId __attribute__((swift_name("docId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityTemplate")))
@interface CDSSLCardinal_sdkEntityTemplate : CDSSLBase <CDSSLCardinal_sdkStoredDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate userId:(NSString * _Nullable)userId descr:(NSString * _Nullable)descr keywords:(NSSet<NSString *> * _Nullable)keywords entityType:(NSString * _Nullable)entityType subType:(NSString * _Nullable)subType defaultTemplate:(CDSSLBoolean * _Nullable)defaultTemplate entity:(NSArray<CDSSLKotlinx_serialization_jsonJsonElement *> *)entity __attribute__((swift_name("init(id:rev:deletionDate:userId:descr:keywords:entityType:subType:defaultTemplate:entity:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEntityTemplateCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEntityTemplate *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate userId:(NSString * _Nullable)userId descr:(NSString * _Nullable)descr keywords:(NSSet<NSString *> * _Nullable)keywords entityType:(NSString * _Nullable)entityType subType:(NSString * _Nullable)subType defaultTemplate:(CDSSLBoolean * _Nullable)defaultTemplate entity:(NSArray<CDSSLKotlinx_serialization_jsonJsonElement *> *)entity __attribute__((swift_name("doCopy(id:rev:deletionDate:userId:descr:keywords:entityType:subType:defaultTemplate:entity:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable defaultTemplate __attribute__((swift_name("defaultTemplate")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSArray<CDSSLKotlinx_serialization_jsonJsonElement *> *entity __attribute__((swift_name("entity")));
@property (readonly) NSString * _Nullable entityType __attribute__((swift_name("entityType")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSSet<NSString *> * _Nullable keywords __attribute__((swift_name("keywords")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSString * _Nullable subType __attribute__((swift_name("subType")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFrontEndMigration")))
@interface CDSSLCardinal_sdkFrontEndMigration : CDSSLBase <CDSSLCardinal_sdkStoredDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate status:(CDSSLCardinal_sdkFrontEndMigrationStatus * _Nullable)status logs:(NSString * _Nullable)logs userId:(NSString * _Nullable)userId startKey:(NSString * _Nullable)startKey startKeyDocId:(NSString * _Nullable)startKeyDocId processCount:(CDSSLLong * _Nullable)processCount properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties __attribute__((swift_name("init(id:rev:deletionDate:name:startDate:endDate:status:logs:userId:startKey:startKeyDocId:processCount:properties:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkFrontEndMigrationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkFrontEndMigration *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate status:(CDSSLCardinal_sdkFrontEndMigrationStatus * _Nullable)status logs:(NSString * _Nullable)logs userId:(NSString * _Nullable)userId startKey:(NSString * _Nullable)startKey startKeyDocId:(NSString * _Nullable)startKeyDocId processCount:(CDSSLLong * _Nullable)processCount properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties __attribute__((swift_name("doCopy(id:rev:deletionDate:name:startDate:endDate:status:logs:userId:startKey:startKeyDocId:processCount:properties:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable logs __attribute__((swift_name("logs")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) CDSSLLong * _Nullable processCount __attribute__((swift_name("processCount")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString * _Nullable startKey __attribute__((swift_name("startKey")));
@property (readonly) NSString * _Nullable startKeyDocId __attribute__((swift_name("startKeyDocId")));
@property (readonly) CDSSLCardinal_sdkFrontEndMigrationStatus * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGroup")))
@interface CDSSLCardinal_sdkGroup : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkHasTags>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags name:(NSString * _Nullable)name password:(NSString * _Nullable)password servers:(NSArray<NSString *> * _Nullable)servers superAdmin:(BOOL)superAdmin properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties defaultUserRoles:(NSDictionary<CDSSLCardinal_sdkUserType *, NSSet<NSString *> *> *)defaultUserRoles operationTokens:(NSDictionary<NSString *, CDSSLCardinal_sdkOperationToken *> *)operationTokens sharedEntities:(NSDictionary<NSString *, NSString *> *)sharedEntities minimumKrakenVersion:(NSString * _Nullable)minimumKrakenVersion minimumAuthenticationClassForElevatedPrivileges:(CDSSLCardinal_sdkAuthenticationClass *)minimumAuthenticationClassForElevatedPrivileges superGroup:(NSString * _Nullable)superGroup applicationId:(NSString * _Nullable)applicationId __attribute__((swift_name("init(id:rev:deletionDate:tags:name:password:servers:superAdmin:properties:defaultUserRoles:operationTokens:sharedEntities:minimumKrakenVersion:minimumAuthenticationClassForElevatedPrivileges:superGroup:applicationId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkGroupCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkGroup *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags name:(NSString * _Nullable)name password:(NSString * _Nullable)password servers:(NSArray<NSString *> * _Nullable)servers superAdmin:(BOOL)superAdmin properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties defaultUserRoles:(NSDictionary<CDSSLCardinal_sdkUserType *, NSSet<NSString *> *> *)defaultUserRoles operationTokens:(NSDictionary<NSString *, CDSSLCardinal_sdkOperationToken *> *)operationTokens sharedEntities:(NSDictionary<NSString *, NSString *> *)sharedEntities minimumKrakenVersion:(NSString * _Nullable)minimumKrakenVersion minimumAuthenticationClassForElevatedPrivileges:(CDSSLCardinal_sdkAuthenticationClass *)minimumAuthenticationClassForElevatedPrivileges superGroup:(NSString * _Nullable)superGroup applicationId:(NSString * _Nullable)applicationId __attribute__((swift_name("doCopy(id:rev:deletionDate:tags:name:password:servers:superAdmin:properties:defaultUserRoles:operationTokens:sharedEntities:minimumKrakenVersion:minimumAuthenticationClassForElevatedPrivileges:superGroup:applicationId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable applicationId __attribute__((swift_name("applicationId")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkUserType *, NSSet<NSString *> *> *defaultUserRoles __attribute__((swift_name("defaultUserRoles")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLCardinal_sdkAuthenticationClass *minimumAuthenticationClassForElevatedPrivileges __attribute__((swift_name("minimumAuthenticationClassForElevatedPrivileges")));
@property (readonly) NSString * _Nullable minimumKrakenVersion __attribute__((swift_name("minimumKrakenVersion")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkOperationToken *> *operationTokens __attribute__((swift_name("operationTokens")));
@property (readonly) NSString * _Nullable password __attribute__((swift_name("password")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSArray<NSString *> * _Nullable servers __attribute__((swift_name("servers")));
@property (readonly) NSDictionary<NSString *, NSString *> *sharedEntities __attribute__((swift_name("sharedEntities")));
@property (readonly) BOOL superAdmin __attribute__((swift_name("superAdmin")));
@property (readonly) NSString * _Nullable superGroup __attribute__((swift_name("superGroup")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGroupType")))
@interface CDSSLCardinal_sdkGroupType : CDSSLKotlinEnum<CDSSLCardinal_sdkGroupType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkGroupTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkGroupType *root __attribute__((swift_name("root")));
@property (class, readonly) CDSSLCardinal_sdkGroupType *app __attribute__((swift_name("app")));
@property (class, readonly) CDSSLCardinal_sdkGroupType *database __attribute__((swift_name("database")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkGroupType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkGroupType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDatabaseInitialisation")))
@interface CDSSLCardinal_sdkDatabaseInitialisation : CDSSLBase
- (instancetype)initWithUsers:(NSArray<CDSSLCardinal_sdkUser *> * _Nullable)users healthcareParties:(NSArray<CDSSLCardinal_sdkHealthcareParty *> * _Nullable)healthcareParties replication:(CDSSLCardinal_sdkReplication * _Nullable)replication minimumKrakenVersion:(NSString * _Nullable)minimumKrakenVersion __attribute__((swift_name("init(users:healthcareParties:replication:minimumKrakenVersion:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDatabaseInitialisationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDatabaseInitialisation *)doCopyUsers:(NSArray<CDSSLCardinal_sdkUser *> * _Nullable)users healthcareParties:(NSArray<CDSSLCardinal_sdkHealthcareParty *> * _Nullable)healthcareParties replication:(CDSSLCardinal_sdkReplication * _Nullable)replication minimumKrakenVersion:(NSString * _Nullable)minimumKrakenVersion __attribute__((swift_name("doCopy(users:healthcareParties:replication:minimumKrakenVersion:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<CDSSLCardinal_sdkHealthcareParty *> * _Nullable healthcareParties __attribute__((swift_name("healthcareParties")));
@property (readonly) NSString * _Nullable minimumKrakenVersion __attribute__((swift_name("minimumKrakenVersion")));
@property (readonly) CDSSLCardinal_sdkReplication * _Nullable replication __attribute__((swift_name("replication")));
@property (readonly) NSArray<CDSSLCardinal_sdkUser *> * _Nullable users __attribute__((swift_name("users")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUserType")))
@interface CDSSLCardinal_sdkUserType : CDSSLKotlinEnum<CDSSLCardinal_sdkUserType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkUserTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkUserType *hcp __attribute__((swift_name("hcp")));
@property (class, readonly) CDSSLCardinal_sdkUserType *patient __attribute__((swift_name("patient")));
@property (class, readonly) CDSSLCardinal_sdkUserType *device __attribute__((swift_name("device")));
@property (class, readonly) CDSSLCardinal_sdkUserType *user __attribute__((swift_name("user")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkUserType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkUserType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRoleConfiguration")))
@interface CDSSLCardinal_sdkRoleConfiguration : CDSSLBase
- (instancetype)initWithSource:(CDSSLCardinal_sdkRoleConfigurationSource *)source roles:(NSSet<NSString *> *)roles __attribute__((swift_name("init(source:roles:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRoleConfigurationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRoleConfiguration *)doCopySource:(CDSSLCardinal_sdkRoleConfigurationSource *)source roles:(NSSet<NSString *> *)roles __attribute__((swift_name("doCopy(source:roles:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSSet<NSString *> *roles __attribute__((swift_name("roles")));
@property (readonly) CDSSLCardinal_sdkRoleConfigurationSource *source __attribute__((swift_name("source")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGroupDatabasesInfo")))
@interface CDSSLCardinal_sdkGroupDatabasesInfo : CDSSLBase
- (instancetype)initWithGroupId:(NSString *)groupId databasesInfo:(NSArray<CDSSLCardinal_sdkDatabaseInfo *> *)databasesInfo gcpStorageSize:(int64_t)gcpStorageSize __attribute__((swift_name("init(groupId:databasesInfo:gcpStorageSize:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkGroupDatabasesInfoCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkGroupDatabasesInfo *)doCopyGroupId:(NSString *)groupId databasesInfo:(NSArray<CDSSLCardinal_sdkDatabaseInfo *> *)databasesInfo gcpStorageSize:(int64_t)gcpStorageSize __attribute__((swift_name("doCopy(groupId:databasesInfo:gcpStorageSize:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<CDSSLCardinal_sdkDatabaseInfo *> *databasesInfo __attribute__((swift_name("databasesInfo")));
@property (readonly) int64_t gcpStorageSize __attribute__((swift_name("gcpStorageSize")));
@property (readonly) NSString *groupId __attribute__((swift_name("groupId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkOperation")))
@interface CDSSLCardinal_sdkOperation : CDSSLKotlinEnum<CDSSLCardinal_sdkOperation *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkOperationCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkOperation *transfergroup __attribute__((swift_name("transfergroup")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkOperation *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkOperation *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReplicationInfo")))
@interface CDSSLCardinal_sdkReplicationInfo : CDSSLBase
- (instancetype)initWithActive:(BOOL)active running:(BOOL)running pendingFrom:(CDSSLInt * _Nullable)pendingFrom pendingTo:(CDSSLInt * _Nullable)pendingTo __attribute__((swift_name("init(active:running:pendingFrom:pendingTo:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReplicationInfoCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkReplicationInfo *)doCopyActive:(BOOL)active running:(BOOL)running pendingFrom:(CDSSLInt * _Nullable)pendingFrom pendingTo:(CDSSLInt * _Nullable)pendingTo __attribute__((swift_name("doCopy(active:running:pendingFrom:pendingTo:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL active __attribute__((swift_name("active")));
@property (readonly) CDSSLInt * _Nullable pendingFrom __attribute__((swift_name("pendingFrom")));
@property (readonly) CDSSLInt * _Nullable pendingTo __attribute__((swift_name("pendingTo")));
@property (readonly) BOOL running __attribute__((swift_name("running")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGroupDeletionReport")))
@interface CDSSLCardinal_sdkGroupDeletionReport : CDSSLBase
- (instancetype)initWithType:(NSString *)type id:(NSString *)id server:(NSString *)server __attribute__((swift_name("init(type:id:server:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkGroupDeletionReportCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkGroupDeletionReport *)doCopyType:(NSString *)type id:(NSString *)id server:(NSString *)server __attribute__((swift_name("doCopy(type:id:server:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString *server __attribute__((swift_name("server")));
@property (readonly) NSString *type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDesignDocument")))
@interface CDSSLCardinal_sdkDesignDocument : CDSSLBase
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev revHistory:(NSDictionary<NSString *, NSString *> *)revHistory language:(NSString * _Nullable)language views:(NSDictionary<NSString *, CDSSLCardinal_sdkView *> *)views lists:(NSDictionary<NSString *, NSString *> *)lists shows:(NSDictionary<NSString *, NSString *> *)shows updateHandlers:(NSDictionary<NSString *, NSString *> * _Nullable)updateHandlers filters:(NSDictionary<NSString *, NSString *> *)filters __attribute__((swift_name("init(id:rev:revHistory:language:views:lists:shows:updateHandlers:filters:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDesignDocumentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDesignDocument *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev revHistory:(NSDictionary<NSString *, NSString *> *)revHistory language:(NSString * _Nullable)language views:(NSDictionary<NSString *, CDSSLCardinal_sdkView *> *)views lists:(NSDictionary<NSString *, NSString *> *)lists shows:(NSDictionary<NSString *, NSString *> *)shows updateHandlers:(NSDictionary<NSString *, NSString *> * _Nullable)updateHandlers filters:(NSDictionary<NSString *, NSString *> *)filters __attribute__((swift_name("doCopy(id:rev:revHistory:language:views:lists:shows:updateHandlers:filters:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, NSString *> *filters __attribute__((swift_name("filters")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable language __attribute__((swift_name("language")));
@property (readonly) NSDictionary<NSString *, NSString *> *lists __attribute__((swift_name("lists")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSDictionary<NSString *, NSString *> *revHistory __attribute__((swift_name("revHistory")));
@property (readonly) NSDictionary<NSString *, NSString *> *shows __attribute__((swift_name("shows")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable updateHandlers __attribute__((swift_name("updateHandlers")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkView *> *views __attribute__((swift_name("views")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkListOfProperties")))
@interface CDSSLCardinal_sdkListOfProperties : CDSSLBase
- (instancetype)initWithProperties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties __attribute__((swift_name("init(properties:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkListOfPropertiesCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkListOfProperties *)doCopyProperties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties __attribute__((swift_name("doCopy(properties:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPermissionType")))
@interface CDSSLCardinal_sdkPermissionType : CDSSLKotlinEnum<CDSSLCardinal_sdkPermissionType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPermissionTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *authenticate __attribute__((swift_name("authenticate")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *hcp __attribute__((swift_name("hcp")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *physician __attribute__((swift_name("physician")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *admin __attribute__((swift_name("admin")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *patientview __attribute__((swift_name("patientview")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *patientcreate __attribute__((swift_name("patientcreate")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *patientchangedelete __attribute__((swift_name("patientchangedelete")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *medicaldataview __attribute__((swift_name("medicaldataview")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *medicaldatacreate __attribute__((swift_name("medicaldatacreate")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *medicalchangedelete __attribute__((swift_name("medicalchangedelete")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *financialdataview __attribute__((swift_name("financialdataview")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *financialdatacreate __attribute__((swift_name("financialdatacreate")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *financialchangedelete __attribute__((swift_name("financialchangedelete")));
@property (class, readonly) CDSSLCardinal_sdkPermissionType *legacydataview __attribute__((swift_name("legacydataview")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkPermissionType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkPermissionType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRegistrationInformation")))
@interface CDSSLCardinal_sdkRegistrationInformation : CDSSLBase
- (instancetype)initWithFirstName:(NSString *)firstName lastName:(NSString *)lastName emailAddress:(NSString *)emailAddress userOptions:(NSString * _Nullable)userOptions userRoles:(NSSet<NSString *> *)userRoles minimumKrakenVersion:(NSString * _Nullable)minimumKrakenVersion __attribute__((swift_name("init(firstName:lastName:emailAddress:userOptions:userRoles:minimumKrakenVersion:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRegistrationInformationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRegistrationInformation *)doCopyFirstName:(NSString *)firstName lastName:(NSString *)lastName emailAddress:(NSString *)emailAddress userOptions:(NSString * _Nullable)userOptions userRoles:(NSSet<NSString *> *)userRoles minimumKrakenVersion:(NSString * _Nullable)minimumKrakenVersion __attribute__((swift_name("doCopy(firstName:lastName:emailAddress:userOptions:userRoles:minimumKrakenVersion:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *emailAddress __attribute__((swift_name("emailAddress")));
@property (readonly) NSString *firstName __attribute__((swift_name("firstName")));
@property (readonly) NSString *lastName __attribute__((swift_name("lastName")));
@property (readonly) NSString * _Nullable minimumKrakenVersion __attribute__((swift_name("minimumKrakenVersion")));
@property (readonly) NSString * _Nullable userOptions __attribute__((swift_name("userOptions")));
@property (readonly) NSSet<NSString *> *userRoles __attribute__((swift_name("userRoles")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRegistrationSuccess")))
@interface CDSSLCardinal_sdkRegistrationSuccess : CDSSLBase
- (instancetype)initWithGroupId:(NSString *)groupId userId:(NSString *)userId token:(NSString *)token __attribute__((swift_name("init(groupId:userId:token:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRegistrationSuccessCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRegistrationSuccess *)doCopyGroupId:(NSString *)groupId userId:(NSString *)userId token:(NSString *)token __attribute__((swift_name("doCopy(groupId:userId:token:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkHealthcareParty")))
@interface CDSSLCardinal_sdkHealthcareParty : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkNamed, CDSSLCardinal_sdkPerson, CDSSLCardinal_sdkCryptoActor, CDSSLCardinal_sdkDataOwner, CDSSLCardinal_sdkHasCodes, CDSSLCardinal_sdkHasTags>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified deletionDate:(CDSSLLong * _Nullable)deletionDate identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes name:(NSString * _Nullable)name lastName:(NSString * _Nullable)lastName firstName:(NSString * _Nullable)firstName names:(NSArray<CDSSLCardinal_sdkPersonName *> *)names gender:(CDSSLCardinal_sdkGender * _Nullable)gender civility:(NSString * _Nullable)civility companyName:(NSString * _Nullable)companyName speciality:(NSString * _Nullable)speciality bankAccount:(NSString * _Nullable)bankAccount bic:(NSString * _Nullable)bic proxyBankAccount:(NSString * _Nullable)proxyBankAccount proxyBic:(NSString * _Nullable)proxyBic invoiceHeader:(NSString * _Nullable)invoiceHeader cbe:(NSString * _Nullable)cbe ehp:(NSString * _Nullable)ehp userId:(NSString * _Nullable)userId parentId:(NSString * _Nullable)parentId convention:(CDSSLInt * _Nullable)convention nihii:(NSString * _Nullable)nihii nihiiSpecCode:(NSString * _Nullable)nihiiSpecCode ssin:(NSString * _Nullable)ssin addresses:(NSArray<CDSSLCardinal_sdkDecryptedAddress *> *)addresses languages:(NSArray<NSString *> *)languages picture:(CDSSLKotlinByteArray * _Nullable)picture statuses:(NSSet<CDSSLCardinal_sdkHealthcarePartyStatus *> *)statuses statusHistory:(NSArray<CDSSLCardinal_sdkHealthcarePartyHistoryStatus *> *)statusHistory specialityCodes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)specialityCodes sendFormats:(NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *)sendFormats notes:(NSString * _Nullable)notes financialInstitutionInformation:(NSArray<CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation *> *)financialInstitutionInformation descr:(NSDictionary<NSString *, NSString *> * _Nullable)descr billingType:(NSString * _Nullable)billingType type:(NSString * _Nullable)type contactPerson:(NSString * _Nullable)contactPerson contactPersonHcpId:(NSString * _Nullable)contactPersonHcpId supervisorId:(NSString * _Nullable)supervisorId flatRateTarifications:(NSArray<CDSSLCardinal_sdkDecryptedFlatRateTarification *> *)flatRateTarifications importedData:(NSDictionary<NSString *, NSString *> *)importedData options:(NSDictionary<NSString *, NSString *> *)options properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 __attribute__((swift_name("init(id:rev:created:modified:deletionDate:identifier:tags:codes:name:lastName:firstName:names:gender:civility:companyName:speciality:bankAccount:bic:proxyBankAccount:proxyBic:invoiceHeader:cbe:ehp:userId:parentId:convention:nihii:nihiiSpecCode:ssin:addresses:languages:picture:statuses:statusHistory:specialityCodes:sendFormats:notes:financialInstitutionInformation:descr:billingType:type:contactPerson:contactPersonHcpId:supervisorId:flatRateTarifications:importedData:options:properties:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkHealthcarePartyCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkHealthcareParty *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified deletionDate:(CDSSLLong * _Nullable)deletionDate identifier:(NSArray<CDSSLCardinal_sdkIdentifier *> *)identifier tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes name:(NSString * _Nullable)name lastName:(NSString * _Nullable)lastName firstName:(NSString * _Nullable)firstName names:(NSArray<CDSSLCardinal_sdkPersonName *> *)names gender:(CDSSLCardinal_sdkGender * _Nullable)gender civility:(NSString * _Nullable)civility companyName:(NSString * _Nullable)companyName speciality:(NSString * _Nullable)speciality bankAccount:(NSString * _Nullable)bankAccount bic:(NSString * _Nullable)bic proxyBankAccount:(NSString * _Nullable)proxyBankAccount proxyBic:(NSString * _Nullable)proxyBic invoiceHeader:(NSString * _Nullable)invoiceHeader cbe:(NSString * _Nullable)cbe ehp:(NSString * _Nullable)ehp userId:(NSString * _Nullable)userId parentId:(NSString * _Nullable)parentId convention:(CDSSLInt * _Nullable)convention nihii:(NSString * _Nullable)nihii nihiiSpecCode:(NSString * _Nullable)nihiiSpecCode ssin:(NSString * _Nullable)ssin addresses:(NSArray<CDSSLCardinal_sdkDecryptedAddress *> *)addresses languages:(NSArray<NSString *> *)languages picture:(CDSSLKotlinByteArray * _Nullable)picture statuses:(NSSet<CDSSLCardinal_sdkHealthcarePartyStatus *> *)statuses statusHistory:(NSArray<CDSSLCardinal_sdkHealthcarePartyHistoryStatus *> *)statusHistory specialityCodes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)specialityCodes sendFormats:(NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *)sendFormats notes:(NSString * _Nullable)notes financialInstitutionInformation:(NSArray<CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation *> *)financialInstitutionInformation descr:(NSDictionary<NSString *, NSString *> * _Nullable)descr billingType:(NSString * _Nullable)billingType type:(NSString * _Nullable)type contactPerson:(NSString * _Nullable)contactPerson contactPersonHcpId:(NSString * _Nullable)contactPersonHcpId supervisorId:(NSString * _Nullable)supervisorId flatRateTarifications:(NSArray<CDSSLCardinal_sdkDecryptedFlatRateTarification *> *)flatRateTarifications importedData:(NSDictionary<NSString *, NSString *> *)importedData options:(NSDictionary<NSString *, NSString *> *)options properties:(NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *)properties hcPartyKeys:(NSDictionary<NSString *, NSArray<id> *> *)hcPartyKeys aesExchangeKeys:(NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *)aesExchangeKeys transferKeys:(NSDictionary<id, NSDictionary<id, id> *> *)transferKeys privateKeyShamirPartitions:(NSDictionary<NSString *, id> *)privateKeyShamirPartitions publicKey:(id _Nullable)publicKey publicKeysForOaepWithSha256:(NSSet<id> *)publicKeysForOaepWithSha256 __attribute__((swift_name("doCopy(id:rev:created:modified:deletionDate:identifier:tags:codes:name:lastName:firstName:names:gender:civility:companyName:speciality:bankAccount:bic:proxyBankAccount:proxyBic:invoiceHeader:cbe:ehp:userId:parentId:convention:nihii:nihiiSpecCode:ssin:addresses:languages:picture:statuses:statusHistory:specialityCodes:sendFormats:notes:financialInstitutionInformation:descr:billingType:type:contactPerson:contactPersonHcpId:supervisorId:flatRateTarifications:importedData:options:properties:hcPartyKeys:aesExchangeKeys:transferKeys:privateKeyShamirPartitions:publicKey:publicKeysForOaepWithSha256:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedAddress *> *addresses __attribute__((swift_name("addresses")));
@property (readonly) NSDictionary<id, NSDictionary<NSString *, NSDictionary<id, id> *> *> *aesExchangeKeys __attribute__((swift_name("aesExchangeKeys")));
@property (readonly) NSString * _Nullable bankAccount __attribute__((swift_name("bankAccount")));
@property (readonly) NSString * _Nullable bic __attribute__((swift_name("bic")));
@property (readonly) NSString * _Nullable billingType __attribute__((swift_name("billingType")));
@property (readonly) NSString * _Nullable cbe __attribute__((swift_name("cbe")));
@property (readonly) NSString * _Nullable civility __attribute__((swift_name("civility")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) NSString * _Nullable companyName __attribute__((swift_name("companyName")));
@property (readonly) NSString * _Nullable contactPerson __attribute__((swift_name("contactPerson")));
@property (readonly) NSString * _Nullable contactPersonHcpId __attribute__((swift_name("contactPersonHcpId")));
@property (readonly) CDSSLInt * _Nullable convention __attribute__((swift_name("convention")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSString * _Nullable ehp __attribute__((swift_name("ehp")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation *> *financialInstitutionInformation __attribute__((swift_name("financialInstitutionInformation")));
@property (readonly) NSString * _Nullable firstName __attribute__((swift_name("firstName")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedFlatRateTarification *> *flatRateTarifications __attribute__((swift_name("flatRateTarifications")));
@property (readonly) CDSSLCardinal_sdkGender * _Nullable gender __attribute__((swift_name("gender")));
@property (readonly) NSDictionary<NSString *, NSArray<id> *> *hcPartyKeys __attribute__((swift_name("hcPartyKeys")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSArray<CDSSLCardinal_sdkIdentifier *> *identifier __attribute__((swift_name("identifier")));
@property (readonly) NSDictionary<NSString *, NSString *> *importedData __attribute__((swift_name("importedData")));
@property (readonly) NSString * _Nullable invoiceHeader __attribute__((swift_name("invoiceHeader")));
@property (readonly) NSArray<NSString *> *languages __attribute__((swift_name("languages")));
@property (readonly) NSString * _Nullable lastName __attribute__((swift_name("lastName")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly, getter=names_) NSArray<CDSSLCardinal_sdkPersonName *> *names __attribute__((swift_name("names")));
@property (readonly) NSString * _Nullable nihii __attribute__((swift_name("nihii")));
@property (readonly) NSString * _Nullable nihiiSpecCode __attribute__((swift_name("nihiiSpecCode")));
@property (readonly) NSString * _Nullable notes __attribute__((swift_name("notes")));
@property (readonly) NSDictionary<NSString *, NSString *> *options __attribute__((swift_name("options"))) __attribute__((deprecated("Use properties instead")));
@property (readonly) NSString * _Nullable parentId __attribute__((swift_name("parentId")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable picture __attribute__((swift_name("picture")));
@property (readonly) NSDictionary<NSString *, id> *privateKeyShamirPartitions __attribute__((swift_name("privateKeyShamirPartitions")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedPropertyStub *> *properties __attribute__((swift_name("properties")));
@property (readonly) NSString * _Nullable proxyBankAccount __attribute__((swift_name("proxyBankAccount")));
@property (readonly) NSString * _Nullable proxyBic __attribute__((swift_name("proxyBic")));
@property (readonly) id _Nullable publicKey __attribute__((swift_name("publicKey")));
@property (readonly) NSSet<id> *publicKeysForOaepWithSha256 __attribute__((swift_name("publicKeysForOaepWithSha256")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *sendFormats __attribute__((swift_name("sendFormats")));
@property (readonly) NSString * _Nullable speciality __attribute__((swift_name("speciality")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *specialityCodes __attribute__((swift_name("specialityCodes")));
@property (readonly) NSString * _Nullable ssin __attribute__((swift_name("ssin")));
@property (readonly) NSArray<CDSSLCardinal_sdkHealthcarePartyHistoryStatus *> *statusHistory __attribute__((swift_name("statusHistory")));
@property (readonly) NSSet<CDSSLCardinal_sdkHealthcarePartyStatus *> *statuses __attribute__((swift_name("statuses")));
@property (readonly) NSString * _Nullable supervisorId __attribute__((swift_name("supervisorId")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSDictionary<id, NSDictionary<id, id> *> *transferKeys __attribute__((swift_name("transferKeys")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPublicKey")))
@interface CDSSLCardinal_sdkPublicKey : CDSSLBase
- (instancetype)initWithHcPartyId:(NSString * _Nullable)hcPartyId hexString:(NSString * _Nullable)hexString __attribute__((swift_name("init(hcPartyId:hexString:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPublicKeyCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPublicKey *)doCopyHcPartyId:(NSString * _Nullable)hcPartyId hexString:(NSString * _Nullable)hexString __attribute__((swift_name("doCopy(hcPartyId:hexString:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable hcPartyId __attribute__((swift_name("hcPartyId")));
@property (readonly) NSString * _Nullable hexString __attribute__((swift_name("hexString")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDataOwnerRegistrationSuccess")))
@interface CDSSLCardinal_sdkDataOwnerRegistrationSuccess : CDSSLBase
- (instancetype)initWithUserLogin:(NSString *)userLogin userId:(NSString *)userId token:(NSString *)token __attribute__((swift_name("init(userLogin:userId:token:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDataOwnerRegistrationSuccessCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDataOwnerRegistrationSuccess *)doCopyUserLogin:(NSString *)userLogin userId:(NSString *)userId token:(NSString *)token __attribute__((swift_name("doCopy(userLogin:userId:token:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@property (readonly) NSString *userId __attribute__((swift_name("userId")));
@property (readonly) NSString *userLogin __attribute__((swift_name("userLogin")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkInsurance")))
@interface CDSSLCardinal_sdkInsurance : CDSSLBase <CDSSLCardinal_sdkStoredDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSDictionary<NSString *, NSString *> *)name privateInsurance:(BOOL)privateInsurance hospitalisationInsurance:(BOOL)hospitalisationInsurance ambulatoryInsurance:(BOOL)ambulatoryInsurance code:(NSString * _Nullable)code agreementNumber:(NSString * _Nullable)agreementNumber parent:(NSString * _Nullable)parent address:(CDSSLCardinal_sdkDecryptedAddress *)address __attribute__((swift_name("init(id:rev:deletionDate:name:privateInsurance:hospitalisationInsurance:ambulatoryInsurance:code:agreementNumber:parent:address:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkInsuranceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkInsurance *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSDictionary<NSString *, NSString *> *)name privateInsurance:(BOOL)privateInsurance hospitalisationInsurance:(BOOL)hospitalisationInsurance ambulatoryInsurance:(BOOL)ambulatoryInsurance code:(NSString * _Nullable)code agreementNumber:(NSString * _Nullable)agreementNumber parent:(NSString * _Nullable)parent address:(CDSSLCardinal_sdkDecryptedAddress *)address __attribute__((swift_name("doCopy(id:rev:deletionDate:name:privateInsurance:hospitalisationInsurance:ambulatoryInsurance:code:agreementNumber:parent:address:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkDecryptedAddress *address __attribute__((swift_name("address")));
@property (readonly) NSString * _Nullable agreementNumber __attribute__((swift_name("agreementNumber")));
@property (readonly) BOOL ambulatoryInsurance __attribute__((swift_name("ambulatoryInsurance")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) BOOL hospitalisationInsurance __attribute__((swift_name("hospitalisationInsurance")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSDictionary<NSString *, NSString *> *name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable parent __attribute__((swift_name("parent")));
@property (readonly) BOOL privateInsurance __attribute__((swift_name("privateInsurance")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkKeyword")))
@interface CDSSLCardinal_sdkKeyword : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkICureDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate value:(NSString * _Nullable)value subWords:(NSSet<CDSSLCardinal_sdkKeywordSubword *> *)subWords userId:(NSString * _Nullable)userId __attribute__((swift_name("init(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:value:subWords:userId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkKeywordCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkKeyword *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife deletionDate:(CDSSLLong * _Nullable)deletionDate value:(NSString * _Nullable)value subWords:(NSSet<CDSSLCardinal_sdkKeywordSubword *> *)subWords userId:(NSString * _Nullable)userId __attribute__((swift_name("doCopy(id:rev:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:deletionDate:value:subWords:userId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSSet<CDSSLCardinal_sdkKeywordSubword *> *subWords __attribute__((swift_name("subWords")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMedicalLocation")))
@interface CDSSLCardinal_sdkMedicalLocation : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkNamed>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name description:(NSString * _Nullable)description responsible:(NSString * _Nullable)responsible guardPost:(CDSSLBoolean * _Nullable)guardPost cbe:(NSString * _Nullable)cbe bic:(NSString * _Nullable)bic bankAccount:(NSString * _Nullable)bankAccount nihii:(NSString * _Nullable)nihii ssin:(NSString * _Nullable)ssin address:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)address agendaIds:(NSSet<NSString *> *)agendaIds options:(NSDictionary<NSString *, NSString *> *)options publicInformations:(NSDictionary<NSString *, NSString *> *)publicInformations __attribute__((swift_name("init(id:rev:deletionDate:name:description:responsible:guardPost:cbe:bic:bankAccount:nihii:ssin:address:agendaIds:options:publicInformations:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMedicalLocationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkMedicalLocation *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name description:(NSString * _Nullable)description responsible:(NSString * _Nullable)responsible guardPost:(CDSSLBoolean * _Nullable)guardPost cbe:(NSString * _Nullable)cbe bic:(NSString * _Nullable)bic bankAccount:(NSString * _Nullable)bankAccount nihii:(NSString * _Nullable)nihii ssin:(NSString * _Nullable)ssin address:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)address agendaIds:(NSSet<NSString *> *)agendaIds options:(NSDictionary<NSString *, NSString *> *)options publicInformations:(NSDictionary<NSString *, NSString *> *)publicInformations __attribute__((swift_name("doCopy(id:rev:deletionDate:name:description:responsible:guardPost:cbe:bic:bankAccount:nihii:ssin:address:agendaIds:options:publicInformations:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkDecryptedAddress * _Nullable address __attribute__((swift_name("address")));
@property (readonly) NSSet<NSString *> *agendaIds __attribute__((swift_name("agendaIds")));
@property (readonly) NSString * _Nullable bankAccount __attribute__((swift_name("bankAccount")));
@property (readonly) NSString * _Nullable bic __attribute__((swift_name("bic")));
@property (readonly) NSString * _Nullable cbe __attribute__((swift_name("cbe")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) CDSSLBoolean * _Nullable guardPost __attribute__((swift_name("guardPost")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable nihii __attribute__((swift_name("nihii")));
@property (readonly) NSDictionary<NSString *, NSString *> *options __attribute__((swift_name("options")));
@property (readonly) NSDictionary<NSString *, NSString *> *publicInformations __attribute__((swift_name("publicInformations")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSString * _Nullable ssin __attribute__((swift_name("ssin")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkListOfIds")))
@interface CDSSLCardinal_sdkListOfIds : CDSSLBase
- (instancetype)initWithIds:(NSArray<NSString *> *)ids __attribute__((swift_name("init(ids:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkListOfIdsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkListOfIds *)doCopyIds:(NSArray<NSString *> *)ids __attribute__((swift_name("doCopy(ids:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *ids __attribute__((swift_name("ids")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPermission")))
@interface CDSSLCardinal_sdkPermission : CDSSLBase
- (instancetype)initWithGrants:(NSSet<id<CDSSLCardinal_sdkPermissionItem>> *)grants revokes:(NSSet<id<CDSSLCardinal_sdkPermissionItem>> *)revokes __attribute__((swift_name("init(grants:revokes:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPermissionCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPermission *)doCopyGrants:(NSSet<id<CDSSLCardinal_sdkPermissionItem>> *)grants revokes:(NSSet<id<CDSSLCardinal_sdkPermissionItem>> *)revokes __attribute__((swift_name("doCopy(grants:revokes:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSSet<id<CDSSLCardinal_sdkPermissionItem>> *grants __attribute__((swift_name("grants")));
@property (readonly) NSSet<id<CDSSLCardinal_sdkPermissionItem>> *revokes __attribute__((swift_name("revokes")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPlace")))
@interface CDSSLCardinal_sdkPlace : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkNamed>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name address:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)address __attribute__((swift_name("init(id:rev:deletionDate:name:address:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPlaceCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPlace *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name address:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)address __attribute__((swift_name("doCopy(id:rev:deletionDate:name:address:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkDecryptedAddress * _Nullable address __attribute__((swift_name("address")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRole")))
@interface CDSSLCardinal_sdkRole : CDSSLBase <CDSSLCardinal_sdkStoredDocument>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name permissions:(NSSet<NSString *> *)permissions __attribute__((swift_name("init(id:rev:deletionDate:name:permissions:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRoleCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRole *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name permissions:(NSSet<NSString *> *)permissions __attribute__((swift_name("doCopy(id:rev:deletionDate:name:permissions:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSSet<NSString *> *permissions __attribute__((swift_name("permissions")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIndexingInfo")))
@interface CDSSLCardinal_sdkIndexingInfo : CDSSLBase
- (instancetype)initWithStatuses:(NSDictionary<NSString *, CDSSLInt *> * _Nullable)statuses __attribute__((swift_name("init(statuses:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkIndexingInfoCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkIndexingInfo *)doCopyStatuses:(NSDictionary<NSString *, CDSSLInt *> * _Nullable)statuses __attribute__((swift_name("doCopy(statuses:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, CDSSLInt *> * _Nullable statuses __attribute__((swift_name("statuses")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReplicatorDocument")))
@interface CDSSLCardinal_sdkReplicatorDocument : CDSSLBase <CDSSLCardinal_sdkVersionable>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev source:(CDSSLCardinal_sdkRemote * _Nullable)source target:(CDSSLCardinal_sdkRemote * _Nullable)target owner:(NSString * _Nullable)owner create_target:(CDSSLBoolean * _Nullable)create_target continuous:(CDSSLBoolean * _Nullable)continuous doc_ids:(NSArray<NSString *> * _Nullable)doc_ids replicationState:(NSString * _Nullable)replicationState replicationStateTime:(CDSSLCardinal_sdkZonedDateTime * _Nullable)replicationStateTime replicationStats:(CDSSLCardinal_sdkReplicationStats * _Nullable)replicationStats errorCount:(CDSSLInt * _Nullable)errorCount revsInfo:(NSArray<NSDictionary<NSString *, NSString *> *> * _Nullable)revsInfo revHistory:(NSDictionary<NSString *, NSString *> * _Nullable)revHistory __attribute__((swift_name("init(id:rev:source:target:owner:create_target:continuous:doc_ids:replicationState:replicationStateTime:replicationStats:errorCount:revsInfo:revHistory:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReplicatorDocumentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkReplicatorDocument *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev source:(CDSSLCardinal_sdkRemote * _Nullable)source target:(CDSSLCardinal_sdkRemote * _Nullable)target owner:(NSString * _Nullable)owner create_target:(CDSSLBoolean * _Nullable)create_target continuous:(CDSSLBoolean * _Nullable)continuous doc_ids:(NSArray<NSString *> * _Nullable)doc_ids replicationState:(NSString * _Nullable)replicationState replicationStateTime:(CDSSLCardinal_sdkZonedDateTime * _Nullable)replicationStateTime replicationStats:(CDSSLCardinal_sdkReplicationStats * _Nullable)replicationStats errorCount:(CDSSLInt * _Nullable)errorCount revsInfo:(NSArray<NSDictionary<NSString *, NSString *> *> * _Nullable)revsInfo revHistory:(NSDictionary<NSString *, NSString *> * _Nullable)revHistory __attribute__((swift_name("doCopy(id:rev:source:target:owner:create_target:continuous:doc_ids:replicationState:replicationStateTime:replicationStats:errorCount:revsInfo:revHistory:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable continuous __attribute__((swift_name("continuous")));
@property (readonly) CDSSLBoolean * _Nullable create_target __attribute__((swift_name("create_target")));
@property (readonly) NSArray<NSString *> * _Nullable doc_ids __attribute__((swift_name("doc_ids")));
@property (readonly) CDSSLInt * _Nullable errorCount __attribute__((swift_name("errorCount")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable owner __attribute__((swift_name("owner")));
@property (readonly) NSString * _Nullable replicationState __attribute__((swift_name("replicationState")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ZonedDateTimeSerializer))
*/
@property (readonly) CDSSLCardinal_sdkZonedDateTime * _Nullable replicationStateTime __attribute__((swift_name("replicationStateTime")));
@property (readonly) CDSSLCardinal_sdkReplicationStats * _Nullable replicationStats __attribute__((swift_name("replicationStats")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable revHistory __attribute__((swift_name("revHistory")));
@property (readonly) NSArray<NSDictionary<NSString *, NSString *> *> * _Nullable revsInfo __attribute__((swift_name("revsInfo")));
@property (readonly) CDSSLCardinal_sdkRemote * _Nullable source __attribute__((swift_name("source")));
@property (readonly) CDSSLCardinal_sdkRemote * _Nullable target __attribute__((swift_name("target")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTarification")))
@interface CDSSLCardinal_sdkTarification : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkCodeIdentification>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate label:(NSDictionary<NSString *, NSString *> * _Nullable)label context:(NSString * _Nullable)context type:(NSString * _Nullable)type code:(NSString * _Nullable)code version:(NSString * _Nullable)version author:(NSString * _Nullable)author regions:(NSSet<NSString *> *)regions periodicity:(NSArray<CDSSLCardinal_sdkPeriodicity *> *)periodicity level:(CDSSLInt * _Nullable)level links:(NSArray<NSString *> *)links qualifiedLinks:(NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSArray<NSString *> *> *)qualifiedLinks flags:(NSSet<CDSSLCardinal_sdkCodeFlag *> *)flags searchTerms:(NSDictionary<NSString *, NSSet<NSString *> *> *)searchTerms data:(NSString * _Nullable)data appendices:(NSDictionary<CDSSLCardinal_sdkAppendixType *, NSString *> *)appendices disabled:(BOOL)disabled valorisations:(NSSet<CDSSLCardinal_sdkDecryptedValorisation *> *)valorisations category:(NSDictionary<NSString *, NSString *> *)category consultationCode:(CDSSLBoolean * _Nullable)consultationCode hasRelatedCode:(CDSSLBoolean * _Nullable)hasRelatedCode needsPrescriber:(CDSSLBoolean * _Nullable)needsPrescriber relatedCodes:(NSSet<NSString *> *)relatedCodes ngroup:(NSString * _Nullable)ngroup letterValues:(NSArray<CDSSLCardinal_sdkLetterValue *> *)letterValues __attribute__((swift_name("init(id:rev:deletionDate:label:context:type:code:version:author:regions:periodicity:level:links:qualifiedLinks:flags:searchTerms:data:appendices:disabled:valorisations:category:consultationCode:hasRelatedCode:needsPrescriber:relatedCodes:ngroup:letterValues:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTarificationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkTarification *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate label:(NSDictionary<NSString *, NSString *> * _Nullable)label context:(NSString * _Nullable)context type:(NSString * _Nullable)type code:(NSString * _Nullable)code version:(NSString * _Nullable)version author:(NSString * _Nullable)author regions:(NSSet<NSString *> *)regions periodicity:(NSArray<CDSSLCardinal_sdkPeriodicity *> *)periodicity level:(CDSSLInt * _Nullable)level links:(NSArray<NSString *> *)links qualifiedLinks:(NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSArray<NSString *> *> *)qualifiedLinks flags:(NSSet<CDSSLCardinal_sdkCodeFlag *> *)flags searchTerms:(NSDictionary<NSString *, NSSet<NSString *> *> *)searchTerms data:(NSString * _Nullable)data appendices:(NSDictionary<CDSSLCardinal_sdkAppendixType *, NSString *> *)appendices disabled:(BOOL)disabled valorisations:(NSSet<CDSSLCardinal_sdkDecryptedValorisation *> *)valorisations category:(NSDictionary<NSString *, NSString *> *)category consultationCode:(CDSSLBoolean * _Nullable)consultationCode hasRelatedCode:(CDSSLBoolean * _Nullable)hasRelatedCode needsPrescriber:(CDSSLBoolean * _Nullable)needsPrescriber relatedCodes:(NSSet<NSString *> *)relatedCodes ngroup:(NSString * _Nullable)ngroup letterValues:(NSArray<CDSSLCardinal_sdkLetterValue *> *)letterValues __attribute__((swift_name("doCopy(id:rev:deletionDate:label:context:type:code:version:author:regions:periodicity:level:links:qualifiedLinks:flags:searchTerms:data:appendices:disabled:valorisations:category:consultationCode:hasRelatedCode:needsPrescriber:relatedCodes:ngroup:letterValues:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkAppendixType *, NSString *> *appendices __attribute__((swift_name("appendices")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSDictionary<NSString *, NSString *> *category __attribute__((swift_name("category")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) CDSSLBoolean * _Nullable consultationCode __attribute__((swift_name("consultationCode")));
@property (readonly) NSString * _Nullable context __attribute__((swift_name("context")));
@property (readonly) NSString * _Nullable data __attribute__((swift_name("data")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) BOOL disabled __attribute__((swift_name("disabled")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeFlag *> *flags __attribute__((swift_name("flags")));
@property (readonly) CDSSLBoolean * _Nullable hasRelatedCode __attribute__((swift_name("hasRelatedCode")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSArray<CDSSLCardinal_sdkLetterValue *> *letterValues __attribute__((swift_name("letterValues")));
@property (readonly) CDSSLInt * _Nullable level __attribute__((swift_name("level")));
@property (readonly) NSArray<NSString *> *links __attribute__((swift_name("links")));
@property (readonly) CDSSLBoolean * _Nullable needsPrescriber __attribute__((swift_name("needsPrescriber")));

/**
 * @note annotations
 *   kotlinx.serialization.SerialName(value="nGroup")
*/
@property (readonly) NSString * _Nullable ngroup __attribute__((swift_name("ngroup")));
@property (readonly) NSArray<CDSSLCardinal_sdkPeriodicity *> *periodicity __attribute__((swift_name("periodicity")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkLinkQualification *, NSArray<NSString *> *> *qualifiedLinks __attribute__((swift_name("qualifiedLinks")));
@property (readonly) NSSet<NSString *> *regions __attribute__((swift_name("regions")));
@property (readonly) NSSet<NSString *> *relatedCodes __attribute__((swift_name("relatedCodes")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@property (readonly) NSDictionary<NSString *, NSSet<NSString *> *> *searchTerms __attribute__((swift_name("searchTerms")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSSet<CDSSLCardinal_sdkDecryptedValorisation *> *valorisations __attribute__((swift_name("valorisations")));
@property (readonly) NSString * _Nullable version __attribute__((swift_name("version")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEnable2faRequest")))
@interface CDSSLCardinal_sdkEnable2faRequest : CDSSLBase
- (instancetype)initWithSecret:(NSString *)secret otpLength:(int32_t)otpLength __attribute__((swift_name("init(secret:otpLength:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEnable2faRequestCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEnable2faRequest *)doCopySecret:(NSString *)secret otpLength:(int32_t)otpLength __attribute__((swift_name("doCopy(secret:otpLength:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t otpLength __attribute__((swift_name("otpLength")));
@property (readonly) NSString *secret __attribute__((swift_name("secret")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUserGroup")))
@interface CDSSLCardinal_sdkUserGroup : CDSSLBase
- (instancetype)initWithGroupId:(NSString * _Nullable)groupId groupName:(NSString * _Nullable)groupName groupsHierarchy:(NSArray<CDSSLCardinal_sdkGroup *> *)groupsHierarchy userId:(NSString * _Nullable)userId login:(NSString * _Nullable)login name:(NSString * _Nullable)name email:(NSString * _Nullable)email phone:(NSString * _Nullable)phone patientId:(NSString * _Nullable)patientId healthcarePartyId:(NSString * _Nullable)healthcarePartyId deviceId:(NSString * _Nullable)deviceId nameOfParentOfTopmostGroupInHierarchy:(NSString * _Nullable)nameOfParentOfTopmostGroupInHierarchy __attribute__((swift_name("init(groupId:groupName:groupsHierarchy:userId:login:name:email:phone:patientId:healthcarePartyId:deviceId:nameOfParentOfTopmostGroupInHierarchy:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkUserGroupCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkUserGroup *)doCopyGroupId:(NSString * _Nullable)groupId groupName:(NSString * _Nullable)groupName groupsHierarchy:(NSArray<CDSSLCardinal_sdkGroup *> *)groupsHierarchy userId:(NSString * _Nullable)userId login:(NSString * _Nullable)login name:(NSString * _Nullable)name email:(NSString * _Nullable)email phone:(NSString * _Nullable)phone patientId:(NSString * _Nullable)patientId healthcarePartyId:(NSString * _Nullable)healthcarePartyId deviceId:(NSString * _Nullable)deviceId nameOfParentOfTopmostGroupInHierarchy:(NSString * _Nullable)nameOfParentOfTopmostGroupInHierarchy __attribute__((swift_name("doCopy(groupId:groupName:groupsHierarchy:userId:login:name:email:phone:patientId:healthcarePartyId:deviceId:nameOfParentOfTopmostGroupInHierarchy:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable deviceId __attribute__((swift_name("deviceId")));
@property (readonly) NSString * _Nullable email __attribute__((swift_name("email")));
@property (readonly) NSString * _Nullable groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable groupName __attribute__((swift_name("groupName")));
@property (readonly) NSArray<CDSSLCardinal_sdkGroup *> *groupsHierarchy __attribute__((swift_name("groupsHierarchy")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) NSString * _Nullable login __attribute__((swift_name("login")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable nameOfParentOfTopmostGroupInHierarchy __attribute__((swift_name("nameOfParentOfTopmostGroupInHierarchy")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSString * _Nullable phone __attribute__((swift_name("phone")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTokenWithGroup")))
@interface CDSSLCardinal_sdkTokenWithGroup : CDSSLBase
- (instancetype)initWithToken:(NSString *)token groupId:(NSString *)groupId groupName:(NSString * _Nullable)groupName __attribute__((swift_name("init(token:groupId:groupName:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTokenWithGroupCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkTokenWithGroup *)doCopyToken:(NSString *)token groupId:(NSString *)groupId groupName:(NSString * _Nullable)groupName __attribute__((swift_name("doCopy(token:groupId:groupName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *groupId __attribute__((swift_name("groupId")));
@property (readonly) NSString * _Nullable groupName __attribute__((swift_name("groupName")));
@property (readonly) NSString *token __attribute__((swift_name("token")));
@end

__attribute__((swift_name("Cardinal_sdkPropertyStub")))
@protocol CDSSLCardinal_sdkPropertyStub <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate"))) __attribute__((deprecated("Remove from list instead")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) CDSSLCardinal_sdkPropertyTypeStub * _Nullable type __attribute__((swift_name("type")));
@property (readonly) id<CDSSLCardinal_sdkTypedValue> _Nullable typedValue __attribute__((swift_name("typedValue")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedPropertyStub")))
@interface CDSSLCardinal_sdkEncryptedPropertyStub : CDSSLBase <CDSSLCardinal_sdkPropertyStub>
- (instancetype)initWithId:(NSString * _Nullable)id type:(CDSSLCardinal_sdkPropertyTypeStub * _Nullable)type typedValue:(CDSSLCardinal_sdkEncryptedTypedValue * _Nullable)typedValue deletionDate:(CDSSLLong * _Nullable)deletionDate encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:type:typedValue:deletionDate:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedPropertyStubCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedPropertyStub *)doCopyId:(NSString * _Nullable)id type:(CDSSLCardinal_sdkPropertyTypeStub * _Nullable)type typedValue:(CDSSLCardinal_sdkEncryptedTypedValue * _Nullable)typedValue deletionDate:(CDSSLLong * _Nullable)deletionDate encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:type:typedValue:deletionDate:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate"))) __attribute__((deprecated("Remove from list instead")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) CDSSLCardinal_sdkPropertyTypeStub * _Nullable type __attribute__((swift_name("type")));
@property (readonly) CDSSLCardinal_sdkEncryptedTypedValue * _Nullable typedValue __attribute__((swift_name("typedValue")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCryptoStrategiesUnavailableKeyInfo.Companion")))
@interface CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfoCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCryptoStrategiesUnavailableKeyInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRecoveryDataKey.Companion")))
@interface CDSSLCardinal_sdkRecoveryDataKeyCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRecoveryDataKeyCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLCardinal_sdkRecoveryDataKey *)fromBase32Base32:(NSString *)base32 __attribute__((swift_name("fromBase32(base32:)")));
- (CDSSLCardinal_sdkRecoveryDataKey *)fromHexStringHex:(NSString *)hex __attribute__((swift_name("fromHexString(hex:)")));
- (CDSSLCardinal_sdkRecoveryDataKey *)fromRawBytesBytes:(CDSSLKotlinByteArray *)bytes __attribute__((swift_name("fromRawBytes(bytes:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpUrl.Companion")))
@interface CDSSLKtor_httpUrlCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_httpUrlCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Ktor_httpParameters")))
@protocol CDSSLKtor_httpParameters <CDSSLKtor_utilsStringValues>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLProtocol")))
@interface CDSSLKtor_httpURLProtocol : CDSSLBase
- (instancetype)initWithName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("init(name:defaultPort:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKtor_httpURLProtocolCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLKtor_httpURLProtocol *)doCopyName:(NSString *)name defaultPort:(int32_t)defaultPort __attribute__((swift_name("doCopy(name:defaultPort:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t defaultPort __attribute__((swift_name("defaultPort")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpMethod.Companion")))
@interface CDSSLKtor_httpHttpMethodCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_httpHttpMethodCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKtor_httpHttpMethod *)parseMethod:(NSString *)method __attribute__((swift_name("parse(method:)")));
@property (readonly) NSArray<CDSSLKtor_httpHttpMethod *> *DefaultMethods __attribute__((swift_name("DefaultMethods")));
@property (readonly) CDSSLKtor_httpHttpMethod *Delete __attribute__((swift_name("Delete")));
@property (readonly) CDSSLKtor_httpHttpMethod *Get __attribute__((swift_name("Get")));
@property (readonly) CDSSLKtor_httpHttpMethod *Head __attribute__((swift_name("Head")));
@property (readonly) CDSSLKtor_httpHttpMethod *Options __attribute__((swift_name("Options")));
@property (readonly) CDSSLKtor_httpHttpMethod *Patch __attribute__((swift_name("Patch")));
@property (readonly) CDSSLKtor_httpHttpMethod *Post __attribute__((swift_name("Post")));
@property (readonly) CDSSLKtor_httpHttpMethod *Put __attribute__((swift_name("Put")));
@end

__attribute__((swift_name("KotlinMapEntry")))
@protocol CDSSLKotlinMapEntry
@required
@property (readonly) id _Nullable key __attribute__((swift_name("key")));
@property (readonly) id _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("Ktor_httpHeaderValueWithParameters")))
@interface CDSSLKtor_httpHeaderValueWithParameters : CDSSLBase
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<CDSSLKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKtor_httpHeaderValueWithParametersCompanion *companion __attribute__((swift_name("companion")));
- (NSString * _Nullable)parameterName:(NSString *)name __attribute__((swift_name("parameter(name:)")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note This property has protected visibility in Kotlin source and is intended only for use by subclasses.
*/
@property (readonly) NSString *content __attribute__((swift_name("content")));
@property (readonly) NSArray<CDSSLKtor_httpHeaderValueParam *> *parameters __attribute__((swift_name("parameters")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpContentType")))
@interface CDSSLKtor_httpContentType : CDSSLKtor_httpHeaderValueWithParameters
- (instancetype)initWithContentType:(NSString *)contentType contentSubtype:(NSString *)contentSubtype parameters:(NSArray<CDSSLKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(contentType:contentSubtype:parameters:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithContent:(NSString *)content parameters:(NSArray<CDSSLKtor_httpHeaderValueParam *> *)parameters __attribute__((swift_name("init(content:parameters:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLKtor_httpContentTypeCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (BOOL)matchPattern:(CDSSLKtor_httpContentType *)pattern __attribute__((swift_name("match(pattern:)")));
- (BOOL)matchPattern_:(NSString *)pattern __attribute__((swift_name("match(pattern_:)")));
- (CDSSLKtor_httpContentType *)withParameterName:(NSString *)name value:(NSString *)value __attribute__((swift_name("withParameter(name:value:)")));
- (CDSSLKtor_httpContentType *)withoutParameters __attribute__((swift_name("withoutParameters()")));
@property (readonly) NSString *contentSubtype __attribute__((swift_name("contentSubtype")));
@property (readonly) NSString *contentType __attribute__((swift_name("contentType")));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
__attribute__((swift_name("Kotlinx_coroutines_coreChildHandle")))
@protocol CDSSLKotlinx_coroutines_coreChildHandle <CDSSLKotlinx_coroutines_coreDisposableHandle>
@required

/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
- (BOOL)childCancelledCause:(CDSSLKotlinThrowable *)cause __attribute__((swift_name("childCancelled(cause:)")));

/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
@property (readonly) id<CDSSLKotlinx_coroutines_coreJob> _Nullable parent __attribute__((swift_name("parent")));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
__attribute__((swift_name("Kotlinx_coroutines_coreChildJob")))
@protocol CDSSLKotlinx_coroutines_coreChildJob <CDSSLKotlinx_coroutines_coreJob>
@required

/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
- (void)parentCancelledParentJob:(id<CDSSLKotlinx_coroutines_coreParentJob>)parentJob __attribute__((swift_name("parentCancelled(parentJob:)")));
@end

__attribute__((swift_name("KotlinSequence")))
@protocol CDSSLKotlinSequence
@required
- (id<CDSSLKotlinIterator>)iterator __attribute__((swift_name("iterator()")));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
__attribute__((swift_name("Kotlinx_coroutines_coreSelectClause")))
@protocol CDSSLKotlinx_coroutines_coreSelectClause
@required
@property (readonly) id clauseObject __attribute__((swift_name("clauseObject")));
@property (readonly) CDSSLKotlinUnit *(^(^ _Nullable onCancellationConstructor)(id<CDSSLKotlinx_coroutines_coreSelectInstance>, id _Nullable, id _Nullable))(CDSSLKotlinThrowable *, id _Nullable, id<CDSSLKotlinCoroutineContext>) __attribute__((swift_name("onCancellationConstructor")));
@property (readonly) id _Nullable (^processResFunc)(id, id _Nullable, id _Nullable) __attribute__((swift_name("processResFunc")));
@property (readonly) void (^regFunc)(id, id<CDSSLKotlinx_coroutines_coreSelectInstance>, id _Nullable) __attribute__((swift_name("regFunc")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreSelectClause0")))
@protocol CDSSLKotlinx_coroutines_coreSelectClause0 <CDSSLKotlinx_coroutines_coreSelectClause>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpStatusCode.Companion")))
@interface CDSSLKtor_httpHttpStatusCodeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_httpHttpStatusCodeCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKtor_httpHttpStatusCode *)fromValueValue:(int32_t)value __attribute__((swift_name("fromValue(value:)")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Accepted __attribute__((swift_name("Accepted")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *BadGateway __attribute__((swift_name("BadGateway")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *BadRequest __attribute__((swift_name("BadRequest")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Conflict __attribute__((swift_name("Conflict")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Continue __attribute__((swift_name("Continue")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Created __attribute__((swift_name("Created")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *ExpectationFailed __attribute__((swift_name("ExpectationFailed")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *FailedDependency __attribute__((swift_name("FailedDependency")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Forbidden __attribute__((swift_name("Forbidden")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Found __attribute__((swift_name("Found")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *GatewayTimeout __attribute__((swift_name("GatewayTimeout")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Gone __attribute__((swift_name("Gone")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *InsufficientStorage __attribute__((swift_name("InsufficientStorage")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *InternalServerError __attribute__((swift_name("InternalServerError")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *LengthRequired __attribute__((swift_name("LengthRequired")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Locked __attribute__((swift_name("Locked")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *MethodNotAllowed __attribute__((swift_name("MethodNotAllowed")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *MovedPermanently __attribute__((swift_name("MovedPermanently")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *MultiStatus __attribute__((swift_name("MultiStatus")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *MultipleChoices __attribute__((swift_name("MultipleChoices")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *NoContent __attribute__((swift_name("NoContent")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *NonAuthoritativeInformation __attribute__((swift_name("NonAuthoritativeInformation")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *NotAcceptable __attribute__((swift_name("NotAcceptable")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *NotFound __attribute__((swift_name("NotFound")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *NotImplemented __attribute__((swift_name("NotImplemented")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *NotModified __attribute__((swift_name("NotModified")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *OK __attribute__((swift_name("OK")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *PartialContent __attribute__((swift_name("PartialContent")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *PayloadTooLarge __attribute__((swift_name("PayloadTooLarge")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *PaymentRequired __attribute__((swift_name("PaymentRequired")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *PermanentRedirect __attribute__((swift_name("PermanentRedirect")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *PreconditionFailed __attribute__((swift_name("PreconditionFailed")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Processing __attribute__((swift_name("Processing")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *ProxyAuthenticationRequired __attribute__((swift_name("ProxyAuthenticationRequired")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *RequestHeaderFieldTooLarge __attribute__((swift_name("RequestHeaderFieldTooLarge")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *RequestTimeout __attribute__((swift_name("RequestTimeout")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *RequestURITooLong __attribute__((swift_name("RequestURITooLong")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *RequestedRangeNotSatisfiable __attribute__((swift_name("RequestedRangeNotSatisfiable")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *ResetContent __attribute__((swift_name("ResetContent")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *SeeOther __attribute__((swift_name("SeeOther")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *ServiceUnavailable __attribute__((swift_name("ServiceUnavailable")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *SwitchProxy __attribute__((swift_name("SwitchProxy")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *SwitchingProtocols __attribute__((swift_name("SwitchingProtocols")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *TemporaryRedirect __attribute__((swift_name("TemporaryRedirect")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *TooEarly __attribute__((swift_name("TooEarly")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *TooManyRequests __attribute__((swift_name("TooManyRequests")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *Unauthorized __attribute__((swift_name("Unauthorized")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *UnprocessableEntity __attribute__((swift_name("UnprocessableEntity")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *UnsupportedMediaType __attribute__((swift_name("UnsupportedMediaType")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *UpgradeRequired __attribute__((swift_name("UpgradeRequired")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *UseProxy __attribute__((swift_name("UseProxy")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *VariantAlsoNegotiates __attribute__((swift_name("VariantAlsoNegotiates")));
@property (readonly) CDSSLKtor_httpHttpStatusCode *VersionNotSupported __attribute__((swift_name("VersionNotSupported")));
@property (readonly) NSArray<CDSSLKtor_httpHttpStatusCode *> *allStatusCodes __attribute__((swift_name("allStatusCodes")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsWeekDay")))
@interface CDSSLKtor_utilsWeekDay : CDSSLKotlinEnum<CDSSLKtor_utilsWeekDay *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLKtor_utilsWeekDayCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLKtor_utilsWeekDay *monday __attribute__((swift_name("monday")));
@property (class, readonly) CDSSLKtor_utilsWeekDay *tuesday __attribute__((swift_name("tuesday")));
@property (class, readonly) CDSSLKtor_utilsWeekDay *wednesday __attribute__((swift_name("wednesday")));
@property (class, readonly) CDSSLKtor_utilsWeekDay *thursday __attribute__((swift_name("thursday")));
@property (class, readonly) CDSSLKtor_utilsWeekDay *friday __attribute__((swift_name("friday")));
@property (class, readonly) CDSSLKtor_utilsWeekDay *saturday __attribute__((swift_name("saturday")));
@property (class, readonly) CDSSLKtor_utilsWeekDay *sunday __attribute__((swift_name("sunday")));
+ (CDSSLKotlinArray<CDSSLKtor_utilsWeekDay *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLKtor_utilsWeekDay *> *entries __attribute__((swift_name("entries")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsMonth")))
@interface CDSSLKtor_utilsMonth : CDSSLKotlinEnum<CDSSLKtor_utilsMonth *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLKtor_utilsMonthCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLKtor_utilsMonth *january __attribute__((swift_name("january")));
@property (class, readonly) CDSSLKtor_utilsMonth *february __attribute__((swift_name("february")));
@property (class, readonly) CDSSLKtor_utilsMonth *march __attribute__((swift_name("march")));
@property (class, readonly) CDSSLKtor_utilsMonth *april __attribute__((swift_name("april")));
@property (class, readonly) CDSSLKtor_utilsMonth *may __attribute__((swift_name("may")));
@property (class, readonly) CDSSLKtor_utilsMonth *june __attribute__((swift_name("june")));
@property (class, readonly) CDSSLKtor_utilsMonth *july __attribute__((swift_name("july")));
@property (class, readonly) CDSSLKtor_utilsMonth *august __attribute__((swift_name("august")));
@property (class, readonly) CDSSLKtor_utilsMonth *september __attribute__((swift_name("september")));
@property (class, readonly) CDSSLKtor_utilsMonth *october __attribute__((swift_name("october")));
@property (class, readonly) CDSSLKtor_utilsMonth *november __attribute__((swift_name("november")));
@property (class, readonly) CDSSLKtor_utilsMonth *december __attribute__((swift_name("december")));
+ (CDSSLKotlinArray<CDSSLKtor_utilsMonth *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLKtor_utilsMonth *> *entries __attribute__((swift_name("entries")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsGMTDate.Companion")))
@interface CDSSLKtor_utilsGMTDateCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_utilsGMTDateCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@property (readonly) CDSSLKtor_utilsGMTDate *START __attribute__((swift_name("START")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHttpProtocolVersion.Companion")))
@interface CDSSLKtor_httpHttpProtocolVersionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_httpHttpProtocolVersionCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKtor_httpHttpProtocolVersion *)fromValueName:(NSString *)name major:(int32_t)major minor:(int32_t)minor __attribute__((swift_name("fromValue(name:major:minor:)")));
- (CDSSLKtor_httpHttpProtocolVersion *)parseValue:(id)value __attribute__((swift_name("parse(value:)")));
@property (readonly) CDSSLKtor_httpHttpProtocolVersion *HTTP_1_0 __attribute__((swift_name("HTTP_1_0")));
@property (readonly) CDSSLKtor_httpHttpProtocolVersion *HTTP_1_1 __attribute__((swift_name("HTTP_1_1")));
@property (readonly) CDSSLKtor_httpHttpProtocolVersion *HTTP_2_0 __attribute__((swift_name("HTTP_2_0")));
@property (readonly) CDSSLKtor_httpHttpProtocolVersion *QUIC __attribute__((swift_name("QUIC")));
@property (readonly) CDSSLKtor_httpHttpProtocolVersion *SPDY_3 __attribute__((swift_name("SPDY_3")));
@end

__attribute__((swift_name("KotlinKType")))
@protocol CDSSLKotlinKType
@required

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
@property (readonly) NSArray<CDSSLKotlinKTypeProjection *> *arguments __attribute__((swift_name("arguments")));

/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
@property (readonly) id<CDSSLKotlinKClassifier> _Nullable classifier __attribute__((swift_name("classifier")));
@property (readonly) BOOL isMarkedNullable __attribute__((swift_name("isMarkedNullable")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="2.0")
*/
__attribute__((swift_name("KotlinAutoCloseable")))
@protocol CDSSLKotlinAutoCloseable
@required
- (void)close __attribute__((swift_name("close()")));
@end

__attribute__((swift_name("Kotlinx_io_coreRawSource")))
@protocol CDSSLKotlinx_io_coreRawSource <CDSSLKotlinAutoCloseable>
@required
- (int64_t)readAtMostToSink:(CDSSLKotlinx_io_coreBuffer *)sink byteCount:(int64_t)byteCount __attribute__((swift_name("readAtMostTo(sink:byteCount:)")));
@end

__attribute__((swift_name("Kotlinx_io_coreSource")))
@protocol CDSSLKotlinx_io_coreSource <CDSSLKotlinx_io_coreRawSource>
@required
- (BOOL)exhausted __attribute__((swift_name("exhausted()")));
- (id<CDSSLKotlinx_io_coreSource>)peek __attribute__((swift_name("peek()")));
- (int32_t)readAtMostToSink:(CDSSLKotlinByteArray *)sink startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("readAtMostTo(sink:startIndex:endIndex:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (int32_t)readInt __attribute__((swift_name("readInt()")));
- (int64_t)readLong __attribute__((swift_name("readLong()")));
- (int16_t)readShort __attribute__((swift_name("readShort()")));
- (void)readToSink:(id<CDSSLKotlinx_io_coreRawSink>)sink byteCount:(int64_t)byteCount __attribute__((swift_name("readTo(sink:byteCount:)")));
- (BOOL)requestByteCount:(int64_t)byteCount __attribute__((swift_name("request(byteCount:)")));
- (void)requireByteCount:(int64_t)byteCount __attribute__((swift_name("require(byteCount:)")));
- (void)skipByteCount:(int64_t)byteCount __attribute__((swift_name("skip(byteCount:)")));
- (int64_t)transferToSink:(id<CDSSLKotlinx_io_coreRawSink>)sink __attribute__((swift_name("transferTo(sink:)")));

/**
 * @note annotations
 *   kotlinx.io.InternalIoApi
*/
@property (readonly) CDSSLKotlinx_io_coreBuffer *buffer __attribute__((swift_name("buffer")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLBuilder.Companion")))
@interface CDSSLKtor_httpURLBuilderCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_httpURLBuilderCompanion *shared __attribute__((swift_name("shared")));
@end

__attribute__((swift_name("Ktor_httpParametersBuilder")))
@protocol CDSSLKtor_httpParametersBuilder <CDSSLKtor_utilsStringValuesBuilder>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCodeStub.Companion")))
@interface CDSSLCardinal_sdkCodeStubCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCodeStubCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/datetime/serializers/InstantIso8601Serializer))
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeInstant")))
@interface CDSSLKotlinx_datetimeInstant : CDSSLBase <CDSSLKotlinComparable>
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeInstantCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(CDSSLKotlinx_datetimeInstant *)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLKotlinx_datetimeInstant *)minusDuration:(int64_t)duration __attribute__((swift_name("minus(duration:)")));
- (int64_t)minusOther:(CDSSLKotlinx_datetimeInstant *)other __attribute__((swift_name("minus(other:)")));
- (CDSSLKotlinx_datetimeInstant *)plusDuration:(int64_t)duration __attribute__((swift_name("plus(duration:)")));
- (int64_t)toEpochMilliseconds __attribute__((swift_name("toEpochMilliseconds()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t epochSeconds __attribute__((swift_name("epochSeconds")));
@property (readonly) int32_t nanosecondsOfSecond __attribute__((swift_name("nanosecondsOfSecond")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSecurityMetadata")))
@interface CDSSLCardinal_sdkSecurityMetadata : CDSSLBase
- (instancetype)initWithSecureDelegations:(NSDictionary<id, CDSSLCardinal_sdkSecureDelegation *> *)secureDelegations keysEquivalences:(NSDictionary<id, id> *)keysEquivalences __attribute__((swift_name("init(secureDelegations:keysEquivalences:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSecurityMetadataCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkSecurityMetadata *)doCopySecureDelegations:(NSDictionary<id, CDSSLCardinal_sdkSecureDelegation *> *)secureDelegations keysEquivalences:(NSDictionary<id, id> *)keysEquivalences __attribute__((swift_name("doCopy(secureDelegations:keysEquivalences:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<id, id> *keysEquivalences __attribute__((swift_name("keysEquivalences")));
@property (readonly) NSDictionary<id, CDSSLCardinal_sdkSecureDelegation *> *secureDelegations __attribute__((swift_name("secureDelegations")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDelegation")))
@interface CDSSLCardinal_sdkDelegation : CDSSLBase
- (instancetype)initWithOwner:(NSString * _Nullable)owner delegatedTo:(NSString * _Nullable)delegatedTo key:(id _Nullable)key tags:(NSArray<NSString *> *)tags __attribute__((swift_name("init(owner:delegatedTo:key:tags:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDelegationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDelegation *)doCopyOwner:(NSString * _Nullable)owner delegatedTo:(NSString * _Nullable)delegatedTo key:(id _Nullable)key tags:(NSArray<NSString *> *)tags __attribute__((swift_name("doCopy(owner:delegatedTo:key:tags:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable delegatedTo __attribute__((swift_name("delegatedTo")));
@property (readonly) id _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable owner __attribute__((swift_name("owner")));
@property (readonly) NSArray<NSString *> *tags __attribute__((swift_name("tags")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedAccessLog.Companion")))
@interface CDSSLCardinal_sdkDecryptedAccessLogCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedAccessLogCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedAccessLog.Companion")))
@interface CDSSLCardinal_sdkEncryptedAccessLogCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedAccessLogCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGender")))
@interface CDSSLCardinal_sdkGender : CDSSLKotlinEnum<CDSSLCardinal_sdkGender *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkGenderCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkGender *male __attribute__((swift_name("male")));
@property (class, readonly) CDSSLCardinal_sdkGender *female __attribute__((swift_name("female")));
@property (class, readonly) CDSSLCardinal_sdkGender *indeterminate __attribute__((swift_name("indeterminate")));
@property (class, readonly) CDSSLCardinal_sdkGender *changed __attribute__((swift_name("changed")));
@property (class, readonly) CDSSLCardinal_sdkGender *changedtomale __attribute__((swift_name("changedtomale")));
@property (class, readonly) CDSSLCardinal_sdkGender *changedtofemale __attribute__((swift_name("changedtofemale")));
@property (class, readonly) CDSSLCardinal_sdkGender *unknown __attribute__((swift_name("unknown")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkGender *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkGender *> *entries __attribute__((swift_name("entries")));
@property (readonly) NSString *code __attribute__((swift_name("code")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDeactivationReason")))
@interface CDSSLCardinal_sdkDeactivationReason : CDSSLKotlinEnum<CDSSLCardinal_sdkDeactivationReason *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDeactivationReasonCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkDeactivationReason *deceased __attribute__((swift_name("deceased")));
@property (class, readonly) CDSSLCardinal_sdkDeactivationReason *moved __attribute__((swift_name("moved")));
@property (class, readonly) CDSSLCardinal_sdkDeactivationReason *otherdoctor __attribute__((swift_name("otherdoctor")));
@property (class, readonly) CDSSLCardinal_sdkDeactivationReason *retired __attribute__((swift_name("retired")));
@property (class, readonly) CDSSLCardinal_sdkDeactivationReason *nocontact __attribute__((swift_name("nocontact")));
@property (class, readonly) CDSSLCardinal_sdkDeactivationReason *unknown __attribute__((swift_name("unknown")));
@property (class, readonly) CDSSLCardinal_sdkDeactivationReason *none __attribute__((swift_name("none")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkDeactivationReason *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkDeactivationReason *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEmploymentInfo")))
@interface CDSSLCardinal_sdkEmploymentInfo : CDSSLBase
- (instancetype)initWithStartDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate professionType:(CDSSLCardinal_sdkCodeStub * _Nullable)professionType employer:(CDSSLCardinal_sdkEmployer * _Nullable)employer __attribute__((swift_name("init(startDate:endDate:professionType:employer:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEmploymentInfoCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEmploymentInfo *)doCopyStartDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate professionType:(CDSSLCardinal_sdkCodeStub * _Nullable)professionType employer:(CDSSLCardinal_sdkEmployer * _Nullable)employer __attribute__((swift_name("doCopy(startDate:endDate:professionType:employer:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkEmployer * _Nullable employer __attribute__((swift_name("employer")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable professionType __attribute__((swift_name("professionType")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@end

__attribute__((swift_name("Cardinal_sdkFinancialInstitutionInformation")))
@protocol CDSSLCardinal_sdkFinancialInstitutionInformation <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString * _Nullable bankAccount __attribute__((swift_name("bankAccount")));
@property (readonly) NSString * _Nullable bic __attribute__((swift_name("bic")));
@property (readonly) NSString * _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSSet<NSString *> *preferredFiiForPartners __attribute__((swift_name("preferredFiiForPartners")));
@property (readonly) NSString * _Nullable proxyBankAccount __attribute__((swift_name("proxyBankAccount")));
@property (readonly) NSString * _Nullable proxyBic __attribute__((swift_name("proxyBic")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIdentifier")))
@interface CDSSLCardinal_sdkIdentifier : CDSSLBase
- (instancetype)initWithId:(NSString * _Nullable)id assigner:(NSString * _Nullable)assigner start:(NSString * _Nullable)start end:(NSString * _Nullable)end system:(NSString * _Nullable)system type:(CDSSLCardinal_sdkCodeStub * _Nullable)type use:(NSString * _Nullable)use value:(NSString * _Nullable)value __attribute__((swift_name("init(id:assigner:start:end:system:type:use:value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkIdentifierCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkIdentifier *)doCopyId:(NSString * _Nullable)id assigner:(NSString * _Nullable)assigner start:(NSString * _Nullable)start end:(NSString * _Nullable)end system:(NSString * _Nullable)system type:(CDSSLCardinal_sdkCodeStub * _Nullable)type use:(NSString * _Nullable)use value:(NSString * _Nullable)value __attribute__((swift_name("doCopy(id:assigner:start:end:system:type:use:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable assigner __attribute__((swift_name("assigner")));
@property (readonly) NSString * _Nullable end __attribute__((swift_name("end")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable start __attribute__((swift_name("start")));
@property (readonly) NSString * _Nullable system __attribute__((swift_name("system")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable use __attribute__((swift_name("use")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((swift_name("Cardinal_sdkInsurability")))
@protocol CDSSLCardinal_sdkInsurability <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLBoolean * _Nullable ambulatory __attribute__((swift_name("ambulatory")));
@property (readonly) CDSSLBoolean * _Nullable dental __attribute__((swift_name("dental")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) CDSSLBoolean * _Nullable hospitalisation __attribute__((swift_name("hospitalisation")));
@property (readonly) NSString * _Nullable identificationNumber __attribute__((swift_name("identificationNumber")));
@property (readonly) NSString * _Nullable insuranceId __attribute__((swift_name("insuranceId")));
@property (readonly) NSDictionary<NSString *, NSString *> *parameters __attribute__((swift_name("parameters")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString * _Nullable titularyId __attribute__((swift_name("titularyId")));
@end

__attribute__((swift_name("Cardinal_sdkMedicalHouseContract")))
@protocol CDSSLCardinal_sdkMedicalHouseContract <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLCardinal_sdkContractChangeType * _Nullable changeType __attribute__((swift_name("changeType")));
@property (readonly) NSString * _Nullable changedBy __attribute__((swift_name("changedBy")));
@property (readonly) NSString * _Nullable contractId __attribute__((swift_name("contractId")));
@property (readonly) CDSSLLong * _Nullable endOfContract __attribute__((swift_name("endOfContract")));
@property (readonly) CDSSLLong * _Nullable endOfCoverage __attribute__((swift_name("endOfCoverage")));
@property (readonly) CDSSLLong * _Nullable endOfSuspension __attribute__((swift_name("endOfSuspension")));
@property (readonly) BOOL forcedSuspension __attribute__((swift_name("forcedSuspension")));
@property (readonly) BOOL gp __attribute__((swift_name("gp")));
@property (readonly) NSString * _Nullable hcpId __attribute__((swift_name("hcpId")));
@property (readonly) BOOL kine __attribute__((swift_name("kine")));
@property (readonly) NSString * _Nullable mmNihii __attribute__((swift_name("mmNihii")));
@property (readonly) BOOL noGp __attribute__((swift_name("noGp")));
@property (readonly) BOOL noKine __attribute__((swift_name("noKine")));
@property (readonly) BOOL noNurse __attribute__((swift_name("noNurse")));
@property (readonly) BOOL nurse __attribute__((swift_name("nurse")));
@property (readonly) NSDictionary<NSString *, NSString *> *options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable parentContractId __attribute__((swift_name("parentContractId")));
@property (readonly) BOOL ptd __attribute__((swift_name("ptd")));
@property (readonly) CDSSLLong * _Nullable ptdEnd __attribute__((swift_name("ptdEnd")));
@property (readonly) CDSSLLong * _Nullable ptdLastInvoiced __attribute__((swift_name("ptdLastInvoiced")));
@property (readonly) CDSSLLong * _Nullable ptdStart __attribute__((swift_name("ptdStart")));
@property (readonly) NSDictionary<NSString *, NSString *> *receipts __attribute__((swift_name("receipts")));
@property (readonly) CDSSLCardinal_sdkMhcSignatureType * _Nullable signatureType __attribute__((swift_name("signatureType")));
@property (readonly) CDSSLLong * _Nullable startOfContract __attribute__((swift_name("startOfContract")));
@property (readonly) CDSSLLong * _Nullable startOfCoverage __attribute__((swift_name("startOfCoverage")));
@property (readonly) CDSSLLong * _Nullable startOfSuspension __attribute__((swift_name("startOfSuspension")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) CDSSLCardinal_sdkSuspensionReason * _Nullable suspensionReason __attribute__((swift_name("suspensionReason")));
@property (readonly) NSString * _Nullable suspensionSource __attribute__((swift_name("suspensionSource")));
@property (readonly) CDSSLInt * _Nullable unsubscriptionReasonId __attribute__((swift_name("unsubscriptionReasonId")));
@property (readonly) CDSSLLong * _Nullable validFrom __attribute__((swift_name("validFrom")));
@property (readonly) CDSSLLong * _Nullable validTo __attribute__((swift_name("validTo")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAnnotation")))
@interface CDSSLCardinal_sdkAnnotation : CDSSLBase <CDSSLCardinal_sdkIdentifiable>
- (instancetype)initWithId:(NSString *)id author:(NSString * _Nullable)author created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified text:(NSString * _Nullable)text markdown:(NSDictionary<NSString *, NSString *> *)markdown location:(NSString * _Nullable)location confidential:(CDSSLBoolean * _Nullable)confidential tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags encryptedSelf:(NSString * _Nullable)encryptedSelf __attribute__((swift_name("init(id:author:created:modified:text:markdown:location:confidential:tags:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAnnotationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkAnnotation *)doCopyId:(NSString *)id author:(NSString * _Nullable)author created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified text:(NSString * _Nullable)text markdown:(NSDictionary<NSString *, NSString *> *)markdown location:(NSString * _Nullable)location confidential:(CDSSLBoolean * _Nullable)confidential tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags encryptedSelf:(NSString * _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:author:created:modified:text:markdown:location:confidential:tags:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) CDSSLBoolean * _Nullable confidential __attribute__((swift_name("confidential")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSString * _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable location __attribute__((swift_name("location")));
@property (readonly) NSDictionary<NSString *, NSString *> *markdown __attribute__((swift_name("markdown")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) NSString * _Nullable text __attribute__((swift_name("text")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPartnership")))
@interface CDSSLCardinal_sdkPartnership : CDSSLBase
- (instancetype)initWithType:(CDSSLCardinal_sdkPartnershipType * _Nullable)type status:(CDSSLCardinal_sdkPartnershipStatus * _Nullable)status partnerId:(NSString * _Nullable)partnerId meToOtherRelationshipDescription:(NSString * _Nullable)meToOtherRelationshipDescription otherToMeRelationshipDescription:(NSString * _Nullable)otherToMeRelationshipDescription __attribute__((swift_name("init(type:status:partnerId:meToOtherRelationshipDescription:otherToMeRelationshipDescription:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPartnershipCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPartnership *)doCopyType:(CDSSLCardinal_sdkPartnershipType * _Nullable)type status:(CDSSLCardinal_sdkPartnershipStatus * _Nullable)status partnerId:(NSString * _Nullable)partnerId meToOtherRelationshipDescription:(NSString * _Nullable)meToOtherRelationshipDescription otherToMeRelationshipDescription:(NSString * _Nullable)otherToMeRelationshipDescription __attribute__((swift_name("doCopy(type:status:partnerId:meToOtherRelationshipDescription:otherToMeRelationshipDescription:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable meToOtherRelationshipDescription __attribute__((swift_name("meToOtherRelationshipDescription")));
@property (readonly) NSString * _Nullable otherToMeRelationshipDescription __attribute__((swift_name("otherToMeRelationshipDescription")));
@property (readonly) NSString * _Nullable partnerId __attribute__((swift_name("partnerId")));
@property (readonly) CDSSLCardinal_sdkPartnershipStatus * _Nullable status __attribute__((swift_name("status")));
@property (readonly) CDSSLCardinal_sdkPartnershipType * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((swift_name("Cardinal_sdkPatientHealthCareParty")))
@protocol CDSSLCardinal_sdkPatientHealthCareParty <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) BOOL referral __attribute__((swift_name("referral")));
@property (readonly) NSArray<CDSSLCardinal_sdkReferralPeriod *> *referralPeriods __attribute__((swift_name("referralPeriods")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *sendFormats __attribute__((swift_name("sendFormats")));
@property (readonly) CDSSLCardinal_sdkPatientHealthCarePartyType * _Nullable type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPersonalStatus")))
@interface CDSSLCardinal_sdkPersonalStatus : CDSSLKotlinEnum<CDSSLCardinal_sdkPersonalStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPersonalStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *single __attribute__((swift_name("single")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *incouple __attribute__((swift_name("incouple")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *married __attribute__((swift_name("married")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *separated __attribute__((swift_name("separated")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *divorced __attribute__((swift_name("divorced")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *divorcing __attribute__((swift_name("divorcing")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *widowed __attribute__((swift_name("widowed")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *widower __attribute__((swift_name("widower")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *complicated __attribute__((swift_name("complicated")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *unknown __attribute__((swift_name("unknown")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *contract __attribute__((swift_name("contract")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *other __attribute__((swift_name("other")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *annulled __attribute__((swift_name("annulled")));
@property (class, readonly) CDSSLCardinal_sdkPersonalStatus *polygamous __attribute__((swift_name("polygamous")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkPersonalStatus *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkPersonalStatus *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSchoolingInfo")))
@interface CDSSLCardinal_sdkSchoolingInfo : CDSSLBase
- (instancetype)initWithStartDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate school:(NSString * _Nullable)school typeOfEducation:(CDSSLCardinal_sdkCodeStub * _Nullable)typeOfEducation __attribute__((swift_name("init(startDate:endDate:school:typeOfEducation:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSchoolingInfoCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkSchoolingInfo *)doCopyStartDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate school:(NSString * _Nullable)school typeOfEducation:(CDSSLCardinal_sdkCodeStub * _Nullable)typeOfEducation __attribute__((swift_name("doCopy(startDate:endDate:school:typeOfEducation:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) NSString * _Nullable school __attribute__((swift_name("school")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable typeOfEducation __attribute__((swift_name("typeOfEducation")));
@end

__attribute__((swift_name("Cardinal_sdkAddress")))
@protocol CDSSLCardinal_sdkAddress <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLCardinal_sdkAddressType * _Nullable addressType __attribute__((swift_name("addressType")));
@property (readonly) NSString * _Nullable city __attribute__((swift_name("city")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSString * _Nullable houseNumber __attribute__((swift_name("houseNumber")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSString * _Nullable postalCode __attribute__((swift_name("postalCode")));
@property (readonly) NSString * _Nullable postboxNumber __attribute__((swift_name("postboxNumber")));
@property (readonly) NSString * _Nullable state __attribute__((swift_name("state")));
@property (readonly) NSString * _Nullable street __attribute__((swift_name("street")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkTelecom>> *telecoms __attribute__((swift_name("telecoms")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPersonName")))
@interface CDSSLCardinal_sdkPersonName : CDSSLBase
- (instancetype)initWithLastName:(NSString * _Nullable)lastName firstNames:(NSArray<NSString *> *)firstNames start:(CDSSLLong * _Nullable)start end:(CDSSLLong * _Nullable)end prefix:(NSArray<NSString *> *)prefix suffix:(NSArray<NSString *> *)suffix text:(NSString * _Nullable)text use:(CDSSLCardinal_sdkPersonNameUse * _Nullable)use __attribute__((swift_name("init(lastName:firstNames:start:end:prefix:suffix:text:use:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPersonNameCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPersonName *)doCopyLastName:(NSString * _Nullable)lastName firstNames:(NSArray<NSString *> *)firstNames start:(CDSSLLong * _Nullable)start end:(CDSSLLong * _Nullable)end prefix:(NSArray<NSString *> *)prefix suffix:(NSArray<NSString *> *)suffix text:(NSString * _Nullable)text use:(CDSSLCardinal_sdkPersonNameUse * _Nullable)use __attribute__((swift_name("doCopy(lastName:firstNames:start:end:prefix:suffix:text:use:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable end __attribute__((swift_name("end")));
@property (readonly) NSArray<NSString *> *firstNames __attribute__((swift_name("firstNames")));
@property (readonly) NSString * _Nullable lastName __attribute__((swift_name("lastName")));
@property (readonly) NSArray<NSString *> *prefix __attribute__((swift_name("prefix")));
@property (readonly) CDSSLLong * _Nullable start __attribute__((swift_name("start")));
@property (readonly) NSArray<NSString *> *suffix __attribute__((swift_name("suffix")));
@property (readonly) NSString * _Nullable text __attribute__((swift_name("text")));
@property (readonly) CDSSLCardinal_sdkPersonNameUse * _Nullable use __attribute__((swift_name("use")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedPropertyStub")))
@interface CDSSLCardinal_sdkDecryptedPropertyStub : CDSSLBase <CDSSLCardinal_sdkPropertyStub>
- (instancetype)initWithId:(NSString * _Nullable)id type:(CDSSLCardinal_sdkPropertyTypeStub * _Nullable)type typedValue:(CDSSLCardinal_sdkDecryptedTypedValue * _Nullable)typedValue deletionDate:(CDSSLLong * _Nullable)deletionDate encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:type:typedValue:deletionDate:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedPropertyStubCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedPropertyStub *)doCopyId:(NSString * _Nullable)id type:(CDSSLCardinal_sdkPropertyTypeStub * _Nullable)type typedValue:(CDSSLCardinal_sdkDecryptedTypedValue * _Nullable)typedValue deletionDate:(CDSSLLong * _Nullable)deletionDate encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:type:typedValue:deletionDate:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate"))) __attribute__((deprecated("Remove from list instead")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) CDSSLCardinal_sdkPropertyTypeStub * _Nullable type __attribute__((swift_name("type")));
@property (readonly) CDSSLCardinal_sdkDecryptedTypedValue * _Nullable typedValue __attribute__((swift_name("typedValue")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUsersType")))
@interface CDSSLCardinal_sdkUsersType : CDSSLKotlinEnum<CDSSLCardinal_sdkUsersType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkUsersTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkUsersType *database __attribute__((swift_name("database")));
@property (class, readonly) CDSSLCardinal_sdkUsersType *ldap __attribute__((swift_name("ldap")));
@property (class, readonly) CDSSLCardinal_sdkUsersType *token __attribute__((swift_name("token")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkUsersType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkUsersType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUsersStatus")))
@interface CDSSLCardinal_sdkUsersStatus : CDSSLKotlinEnum<CDSSLCardinal_sdkUsersStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkUsersStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkUsersStatus *active __attribute__((swift_name("active")));
@property (class, readonly) CDSSLCardinal_sdkUsersStatus *disabled __attribute__((swift_name("disabled")));
@property (class, readonly) CDSSLCardinal_sdkUsersStatus *registering __attribute__((swift_name("registering")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkUsersStatus *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkUsersStatus *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDelegationTag")))
@interface CDSSLCardinal_sdkDelegationTag : CDSSLKotlinEnum<CDSSLCardinal_sdkDelegationTag *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDelegationTagCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *all __attribute__((swift_name("all")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *administrativedata __attribute__((swift_name("administrativedata")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *anonymousmedicalinformation __attribute__((swift_name("anonymousmedicalinformation")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *generalinformation __attribute__((swift_name("generalinformation")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *financialinformation __attribute__((swift_name("financialinformation")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *medicalinformation __attribute__((swift_name("medicalinformation")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *sensitiveinformation __attribute__((swift_name("sensitiveinformation")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *confidentialinformation __attribute__((swift_name("confidentialinformation")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemrisk __attribute__((swift_name("cditemrisk")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemfamilyrisk __attribute__((swift_name("cditemfamilyrisk")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemhealthcareelement __attribute__((swift_name("cditemhealthcareelement")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemhealthcareapproach __attribute__((swift_name("cditemhealthcareapproach")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemallergy __attribute__((swift_name("cditemallergy")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemdiagnosis __attribute__((swift_name("cditemdiagnosis")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemlab __attribute__((swift_name("cditemlab")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemresult __attribute__((swift_name("cditemresult")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemparameter __attribute__((swift_name("cditemparameter")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemmedication __attribute__((swift_name("cditemmedication")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemtreatment __attribute__((swift_name("cditemtreatment")));
@property (class, readonly) CDSSLCardinal_sdkDelegationTag *cditemvaccine __attribute__((swift_name("cditemvaccine")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkDelegationTag *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkDelegationTag *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAuthenticationToken")))
@interface CDSSLCardinal_sdkAuthenticationToken : CDSSLBase
- (instancetype)initWithToken:(NSString * _Nullable)token creationTime:(int64_t)creationTime validity:(int64_t)validity deletionDate:(CDSSLLong * _Nullable)deletionDate __attribute__((swift_name("init(token:creationTime:validity:deletionDate:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAuthenticationTokenCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkAuthenticationToken *)doCopyToken:(NSString * _Nullable)token creationTime:(int64_t)creationTime validity:(int64_t)validity deletionDate:(CDSSLLong * _Nullable)deletionDate __attribute__((swift_name("doCopy(token:creationTime:validity:deletionDate:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t creationTime __attribute__((swift_name("creationTime")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString * _Nullable token __attribute__((swift_name("token")));
@property (readonly) int64_t validity __attribute__((swift_name("validity")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUser.SystemMetadata")))
@interface CDSSLCardinal_sdkUserSystemMetadata : CDSSLBase
- (instancetype)initWithRoles:(NSSet<NSString *> *)roles isAdmin:(BOOL)isAdmin inheritsRoles:(BOOL)inheritsRoles __attribute__((swift_name("init(roles:isAdmin:inheritsRoles:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkUserSystemMetadataCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkUserSystemMetadata *)doCopyRoles:(NSSet<NSString *> *)roles isAdmin:(BOOL)isAdmin inheritsRoles:(BOOL)inheritsRoles __attribute__((swift_name("doCopy(roles:isAdmin:inheritsRoles:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL inheritsRoles __attribute__((swift_name("inheritsRoles")));
@property (readonly) BOOL isAdmin __attribute__((swift_name("isAdmin")));
@property (readonly) NSSet<NSString *> *roles __attribute__((swift_name("roles")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUser.Companion")))
@interface CDSSLCardinal_sdkUserCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkUserCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@property (readonly) NSString *KRAKEN_QUALIFIED_NAME __attribute__((swift_name("KRAKEN_QUALIFIED_NAME")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAccessLevel.Companion")))
@interface CDSSLCardinal_sdkAccessLevelCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAccessLevelCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocIdentifier.Companion")))
@interface CDSSLCardinal_sdkDocIdentifierCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDocIdentifierCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIdWithMandatoryRev.Companion")))
@interface CDSSLCardinal_sdkIdWithMandatoryRevCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkIdWithMandatoryRevCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRequestedPermission")))
@interface CDSSLCardinal_sdkRequestedPermission : CDSSLKotlinEnum<CDSSLCardinal_sdkRequestedPermission *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRequestedPermissionCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkRequestedPermission *maxread __attribute__((swift_name("maxread")));
@property (class, readonly) CDSSLCardinal_sdkRequestedPermission *fullread __attribute__((swift_name("fullread")));
@property (class, readonly) CDSSLCardinal_sdkRequestedPermission *maxwrite __attribute__((swift_name("maxwrite")));
@property (class, readonly) CDSSLCardinal_sdkRequestedPermission *fullwrite __attribute__((swift_name("fullwrite")));
@property (class, readonly) CDSSLCardinal_sdkRequestedPermission *root __attribute__((swift_name("root")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkRequestedPermission *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkRequestedPermission *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareMetadataBehaviour")))
@interface CDSSLCardinal_sdkShareMetadataBehaviour : CDSSLKotlinEnum<CDSSLCardinal_sdkShareMetadataBehaviour *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkShareMetadataBehaviourCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkShareMetadataBehaviour *required __attribute__((swift_name("required")));
@property (class, readonly) CDSSLCardinal_sdkShareMetadataBehaviour *ifavailable __attribute__((swift_name("ifavailable")));
@property (class, readonly) CDSSLCardinal_sdkShareMetadataBehaviour *never __attribute__((swift_name("never")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkShareMetadataBehaviour *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkShareMetadataBehaviour *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkSecretIdShareOptions")))
@protocol CDSSLCardinal_sdkSecretIdShareOptions
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAccessLogShareOptions.Companion")))
@interface CDSSLCardinal_sdkAccessLogShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAccessLogShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPaginatedDocumentKeyIdPair")))
@interface CDSSLCardinal_sdkPaginatedDocumentKeyIdPair : CDSSLBase
- (instancetype)initWithStartKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startKeyDocId:(NSString * _Nullable)startKeyDocId __attribute__((swift_name("init(startKey:startKeyDocId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPaginatedDocumentKeyIdPairCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPaginatedDocumentKeyIdPair *)doCopyStartKey:(CDSSLKotlinx_serialization_jsonJsonElement * _Nullable)startKey startKeyDocId:(NSString * _Nullable)startKeyDocId __attribute__((swift_name("doCopy(startKey:startKeyDocId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLKotlinx_serialization_jsonJsonElement * _Nullable startKey __attribute__((swift_name("startKey")));
@property (readonly) NSString * _Nullable startKeyDocId __attribute__((swift_name("startKeyDocId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPaginatedListCompanion")))
@interface CDSSLCardinal_sdkPaginatedListCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPaginatedListCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeSerial0:(id<CDSSLKotlinx_serialization_coreKSerializer>)typeSerial0 __attribute__((swift_name("serializer(typeSerial0:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFlowItem")))
@interface CDSSLCardinal_sdkFlowItem : CDSSLBase
- (instancetype)initWithId:(NSString * _Nullable)id title:(NSString * _Nullable)title comment:(NSString * _Nullable)comment receptionDate:(CDSSLLong * _Nullable)receptionDate processingDate:(CDSSLLong * _Nullable)processingDate processer:(NSString * _Nullable)processer cancellationDate:(CDSSLLong * _Nullable)cancellationDate canceller:(NSString * _Nullable)canceller cancellationReason:(NSString * _Nullable)cancellationReason cancellationNote:(NSString * _Nullable)cancellationNote status:(NSString * _Nullable)status homeVisit:(CDSSLBoolean * _Nullable)homeVisit municipality:(NSString * _Nullable)municipality town:(NSString * _Nullable)town zipCode:(NSString * _Nullable)zipCode street:(NSString * _Nullable)street building:(NSString * _Nullable)building buildingNumber:(NSString * _Nullable)buildingNumber doorbellName:(NSString * _Nullable)doorbellName floor:(NSString * _Nullable)floor letterBox:(NSString * _Nullable)letterBox notesOps:(NSString * _Nullable)notesOps notesContact:(NSString * _Nullable)notesContact latitude:(NSString * _Nullable)latitude longitude:(NSString * _Nullable)longitude type:(NSString * _Nullable)type emergency:(CDSSLBoolean * _Nullable)emergency phoneNumber:(NSString * _Nullable)phoneNumber patientId:(NSString * _Nullable)patientId patientLastName:(NSString * _Nullable)patientLastName patientFirstName:(NSString * _Nullable)patientFirstName description:(NSString * _Nullable)description interventionCode:(NSString * _Nullable)interventionCode __attribute__((swift_name("init(id:title:comment:receptionDate:processingDate:processer:cancellationDate:canceller:cancellationReason:cancellationNote:status:homeVisit:municipality:town:zipCode:street:building:buildingNumber:doorbellName:floor:letterBox:notesOps:notesContact:latitude:longitude:type:emergency:phoneNumber:patientId:patientLastName:patientFirstName:description:interventionCode:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkFlowItemCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkFlowItem *)doCopyId:(NSString * _Nullable)id title:(NSString * _Nullable)title comment:(NSString * _Nullable)comment receptionDate:(CDSSLLong * _Nullable)receptionDate processingDate:(CDSSLLong * _Nullable)processingDate processer:(NSString * _Nullable)processer cancellationDate:(CDSSLLong * _Nullable)cancellationDate canceller:(NSString * _Nullable)canceller cancellationReason:(NSString * _Nullable)cancellationReason cancellationNote:(NSString * _Nullable)cancellationNote status:(NSString * _Nullable)status homeVisit:(CDSSLBoolean * _Nullable)homeVisit municipality:(NSString * _Nullable)municipality town:(NSString * _Nullable)town zipCode:(NSString * _Nullable)zipCode street:(NSString * _Nullable)street building:(NSString * _Nullable)building buildingNumber:(NSString * _Nullable)buildingNumber doorbellName:(NSString * _Nullable)doorbellName floor:(NSString * _Nullable)floor letterBox:(NSString * _Nullable)letterBox notesOps:(NSString * _Nullable)notesOps notesContact:(NSString * _Nullable)notesContact latitude:(NSString * _Nullable)latitude longitude:(NSString * _Nullable)longitude type:(NSString * _Nullable)type emergency:(CDSSLBoolean * _Nullable)emergency phoneNumber:(NSString * _Nullable)phoneNumber patientId:(NSString * _Nullable)patientId patientLastName:(NSString * _Nullable)patientLastName patientFirstName:(NSString * _Nullable)patientFirstName description:(NSString * _Nullable)description interventionCode:(NSString * _Nullable)interventionCode __attribute__((swift_name("doCopy(id:title:comment:receptionDate:processingDate:processer:cancellationDate:canceller:cancellationReason:cancellationNote:status:homeVisit:municipality:town:zipCode:street:building:buildingNumber:doorbellName:floor:letterBox:notesOps:notesContact:latitude:longitude:type:emergency:phoneNumber:patientId:patientLastName:patientFirstName:description:interventionCode:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable building __attribute__((swift_name("building")));
@property (readonly) NSString * _Nullable buildingNumber __attribute__((swift_name("buildingNumber")));
@property (readonly) CDSSLLong * _Nullable cancellationDate __attribute__((swift_name("cancellationDate")));
@property (readonly) NSString * _Nullable cancellationNote __attribute__((swift_name("cancellationNote")));
@property (readonly) NSString * _Nullable cancellationReason __attribute__((swift_name("cancellationReason")));
@property (readonly) NSString * _Nullable canceller __attribute__((swift_name("canceller")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) NSString * _Nullable doorbellName __attribute__((swift_name("doorbellName")));
@property (readonly) CDSSLBoolean * _Nullable emergency __attribute__((swift_name("emergency")));
@property (readonly) NSString * _Nullable floor __attribute__((swift_name("floor")));
@property (readonly) CDSSLBoolean * _Nullable homeVisit __attribute__((swift_name("homeVisit")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable interventionCode __attribute__((swift_name("interventionCode")));
@property (readonly) NSString * _Nullable latitude __attribute__((swift_name("latitude")));
@property (readonly) NSString * _Nullable letterBox __attribute__((swift_name("letterBox")));
@property (readonly) NSString * _Nullable longitude __attribute__((swift_name("longitude")));
@property (readonly) NSString * _Nullable municipality __attribute__((swift_name("municipality")));
@property (readonly) NSString * _Nullable notesContact __attribute__((swift_name("notesContact")));
@property (readonly) NSString * _Nullable notesOps __attribute__((swift_name("notesOps")));
@property (readonly) NSString * _Nullable patientFirstName __attribute__((swift_name("patientFirstName")));
@property (readonly) NSString * _Nullable patientId __attribute__((swift_name("patientId")));
@property (readonly) NSString * _Nullable patientLastName __attribute__((swift_name("patientLastName")));
@property (readonly) NSString * _Nullable phoneNumber __attribute__((swift_name("phoneNumber")));
@property (readonly) NSString * _Nullable processer __attribute__((swift_name("processer")));
@property (readonly) CDSSLLong * _Nullable processingDate __attribute__((swift_name("processingDate")));
@property (readonly) CDSSLLong * _Nullable receptionDate __attribute__((swift_name("receptionDate")));
@property (readonly) NSString * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable street __attribute__((swift_name("street")));
@property (readonly) NSString * _Nullable title __attribute__((swift_name("title")));
@property (readonly) NSString * _Nullable town __attribute__((swift_name("town")));
@property (readonly) NSString * _Nullable type __attribute__((swift_name("type")));
@property (readonly) NSString * _Nullable zipCode __attribute__((swift_name("zipCode")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCalendarItemTag")))
@interface CDSSLCardinal_sdkCalendarItemTag : CDSSLBase
- (instancetype)initWithCode:(NSString * _Nullable)code date:(CDSSLLong * _Nullable)date userId:(NSString * _Nullable)userId userName:(NSString * _Nullable)userName __attribute__((swift_name("init(code:date:userId:userName:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCalendarItemTagCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkCalendarItemTag *)doCopyCode:(NSString * _Nullable)code date:(CDSSLLong * _Nullable)date userId:(NSString * _Nullable)userId userName:(NSString * _Nullable)userName __attribute__((swift_name("doCopy(code:date:userId:userName:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) CDSSLLong * _Nullable date __attribute__((swift_name("date")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@property (readonly) NSString * _Nullable userName __attribute__((swift_name("userName")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedAddress")))
@interface CDSSLCardinal_sdkDecryptedAddress : CDSSLBase <CDSSLCardinal_sdkAddress>
- (instancetype)initWithAddressType:(CDSSLCardinal_sdkAddressType * _Nullable)addressType descr:(NSString * _Nullable)descr street:(NSString * _Nullable)street houseNumber:(NSString * _Nullable)houseNumber postboxNumber:(NSString * _Nullable)postboxNumber postalCode:(NSString * _Nullable)postalCode city:(NSString * _Nullable)city state:(NSString * _Nullable)state country:(NSString * _Nullable)country note:(NSString * _Nullable)note notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes telecoms:(NSArray<CDSSLCardinal_sdkDecryptedTelecom *> *)telecoms encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(addressType:descr:street:houseNumber:postboxNumber:postalCode:city:state:country:note:notes:telecoms:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedAddressCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedAddress *)doCopyAddressType:(CDSSLCardinal_sdkAddressType * _Nullable)addressType descr:(NSString * _Nullable)descr street:(NSString * _Nullable)street houseNumber:(NSString * _Nullable)houseNumber postboxNumber:(NSString * _Nullable)postboxNumber postalCode:(NSString * _Nullable)postalCode city:(NSString * _Nullable)city state:(NSString * _Nullable)state country:(NSString * _Nullable)country note:(NSString * _Nullable)note notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes telecoms:(NSArray<CDSSLCardinal_sdkDecryptedTelecom *> *)telecoms encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(addressType:descr:street:houseNumber:postboxNumber:postalCode:city:state:country:note:notes:telecoms:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkAddressType * _Nullable addressType __attribute__((swift_name("addressType")));
@property (readonly) NSString * _Nullable city __attribute__((swift_name("city")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable houseNumber __attribute__((swift_name("houseNumber")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSString * _Nullable postalCode __attribute__((swift_name("postalCode")));
@property (readonly) NSString * _Nullable postboxNumber __attribute__((swift_name("postboxNumber")));
@property (readonly) NSString * _Nullable state __attribute__((swift_name("state")));
@property (readonly) NSString * _Nullable street __attribute__((swift_name("street")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedTelecom *> *telecoms __attribute__((swift_name("telecoms")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedCalendarItem.Companion")))
@interface CDSSLCardinal_sdkDecryptedCalendarItemCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedCalendarItemCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedAddress")))
@interface CDSSLCardinal_sdkEncryptedAddress : CDSSLBase <CDSSLCardinal_sdkAddress>
- (instancetype)initWithAddressType:(CDSSLCardinal_sdkAddressType * _Nullable)addressType descr:(NSString * _Nullable)descr street:(NSString * _Nullable)street houseNumber:(NSString * _Nullable)houseNumber postboxNumber:(NSString * _Nullable)postboxNumber postalCode:(NSString * _Nullable)postalCode city:(NSString * _Nullable)city state:(NSString * _Nullable)state country:(NSString * _Nullable)country note:(NSString * _Nullable)note notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes telecoms:(NSArray<CDSSLCardinal_sdkEncryptedTelecom *> *)telecoms encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(addressType:descr:street:houseNumber:postboxNumber:postalCode:city:state:country:note:notes:telecoms:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedAddressCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedAddress *)doCopyAddressType:(CDSSLCardinal_sdkAddressType * _Nullable)addressType descr:(NSString * _Nullable)descr street:(NSString * _Nullable)street houseNumber:(NSString * _Nullable)houseNumber postboxNumber:(NSString * _Nullable)postboxNumber postalCode:(NSString * _Nullable)postalCode city:(NSString * _Nullable)city state:(NSString * _Nullable)state country:(NSString * _Nullable)country note:(NSString * _Nullable)note notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes telecoms:(NSArray<CDSSLCardinal_sdkEncryptedTelecom *> *)telecoms encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(addressType:descr:street:houseNumber:postboxNumber:postalCode:city:state:country:note:notes:telecoms:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkAddressType * _Nullable addressType __attribute__((swift_name("addressType")));
@property (readonly) NSString * _Nullable city __attribute__((swift_name("city")));
@property (readonly) NSString * _Nullable country __attribute__((swift_name("country")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable houseNumber __attribute__((swift_name("houseNumber")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSString * _Nullable postalCode __attribute__((swift_name("postalCode")));
@property (readonly) NSString * _Nullable postboxNumber __attribute__((swift_name("postboxNumber")));
@property (readonly) NSString * _Nullable state __attribute__((swift_name("state")));
@property (readonly) NSString * _Nullable street __attribute__((swift_name("street")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedTelecom *> *telecoms __attribute__((swift_name("telecoms")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedCalendarItem.Companion")))
@interface CDSSLCardinal_sdkEncryptedCalendarItemCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedCalendarItemCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCalendarItemShareOptions.Companion")))
@interface CDSSLCardinal_sdkCalendarItemShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCalendarItemShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSubscriptionEventType.Companion")))
@interface CDSSLCardinal_sdkSubscriptionEventTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSubscriptionEventTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntitySubscriptionConfiguration.FullBufferBehaviour")))
@interface CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour : CDSSLKotlinEnum<CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviourCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *close __attribute__((swift_name("close")));
@property (class, readonly) CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *dropoldest __attribute__((swift_name("dropoldest")));
@property (class, readonly) CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *ignore __attribute__((swift_name("ignore")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviour *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntitySubscriptionConfiguration.Companion")))
@interface CDSSLCardinal_sdkEntitySubscriptionConfigurationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEntitySubscriptionConfigurationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntitySubscriptionCloseReason")))
@interface CDSSLCardinal_sdkEntitySubscriptionCloseReason : CDSSLKotlinEnum<CDSSLCardinal_sdkEntitySubscriptionCloseReason *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEntitySubscriptionCloseReasonCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkEntitySubscriptionCloseReason *channelfull __attribute__((swift_name("channelfull")));
@property (class, readonly) CDSSLCardinal_sdkEntitySubscriptionCloseReason *connectionlost __attribute__((swift_name("connectionlost")));
@property (class, readonly) CDSSLCardinal_sdkEntitySubscriptionCloseReason *intentionallyclosed __attribute__((swift_name("intentionallyclosed")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkEntitySubscriptionCloseReason *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkEntitySubscriptionCloseReason *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreReceiveChannel")))
@protocol CDSSLKotlinx_coroutines_coreReceiveChannel
@required
- (void)cancelCause:(CDSSLKotlinCancellationException * _Nullable)cause __attribute__((swift_name("cancel(cause:)")));
- (id<CDSSLKotlinx_coroutines_coreChannelIterator>)iterator __attribute__((swift_name("iterator()")));
- (id _Nullable)poll __attribute__((swift_name("poll()"))) __attribute__((unavailable("Deprecated in the favour of 'tryReceive'. Please note that the provided replacement does not rethrow channel's close cause as 'poll' did, for the precise replacement please refer to the 'poll' documentation")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receive(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveCatchingWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveCatching(completionHandler:)")));

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)receiveOrNullWithCompletionHandler:(void (^)(id _Nullable_result, NSError * _Nullable))completionHandler __attribute__((swift_name("receiveOrNull(completionHandler:)"))) __attribute__((unavailable("Deprecated in favor of 'receiveCatching'. Please note that the provided replacement does not rethrow channel's close cause as 'receiveOrNull' did, for the detailed replacement please refer to the 'receiveOrNull' documentation")));
- (id _Nullable)tryReceive __attribute__((swift_name("tryReceive()")));

/**
 * @note annotations
 *   kotlinx.coroutines.DelicateCoroutinesApi
*/
@property (readonly) BOOL isClosedForReceive __attribute__((swift_name("isClosedForReceive")));

/**
 * @note annotations
 *   kotlinx.coroutines.ExperimentalCoroutinesApi
*/
@property (readonly) BOOL isEmpty __attribute__((swift_name("isEmpty")));
@property (readonly) id<CDSSLKotlinx_coroutines_coreSelectClause1> onReceive __attribute__((swift_name("onReceive")));
@property (readonly) id<CDSSLKotlinx_coroutines_coreSelectClause1> onReceiveCatching __attribute__((swift_name("onReceiveCatching")));
@property (readonly) id<CDSSLKotlinx_coroutines_coreSelectClause1> onReceiveOrNull __attribute__((swift_name("onReceiveOrNull"))) __attribute__((unavailable("Deprecated in favor of onReceiveCatching extension")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkKeyPairUpdateNotification.Companion")))
@interface CDSSLCardinal_sdkKeyPairUpdateNotificationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkKeyPairUpdateNotificationCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLCardinal_sdkKeyPairUpdateNotification *)parseFromMaintenanceTaskTask:(CDSSLCardinal_sdkDecryptedMaintenanceTask *)task __attribute__((swift_name("parseFromMaintenanceTask(task:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@property (readonly) NSString *TASK_TYPE __attribute__((swift_name("TASK_TYPE")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedClassification.Companion")))
@interface CDSSLCardinal_sdkDecryptedClassificationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedClassificationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedClassification.Companion")))
@interface CDSSLCardinal_sdkEncryptedClassificationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedClassificationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkClassificationShareOptions.Companion")))
@interface CDSSLCardinal_sdkClassificationShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkClassificationShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkParticipantType")))
@interface CDSSLCardinal_sdkParticipantType : CDSSLKotlinEnum<CDSSLCardinal_sdkParticipantType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkParticipantTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *admitter __attribute__((swift_name("admitter")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *attender __attribute__((swift_name("attender")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *callbackcontact __attribute__((swift_name("callbackcontact")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *consultant __attribute__((swift_name("consultant")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *discharger __attribute__((swift_name("discharger")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *escort __attribute__((swift_name("escort")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *referrer __attribute__((swift_name("referrer")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *secondaryperformer __attribute__((swift_name("secondaryperformer")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *primaryperformer __attribute__((swift_name("primaryperformer")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *participation __attribute__((swift_name("participation")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *translator __attribute__((swift_name("translator")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *emergency __attribute__((swift_name("emergency")));
@property (class, readonly) CDSSLCardinal_sdkParticipantType *location __attribute__((swift_name("location")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkParticipantType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkParticipantType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Cardinal_sdkSubContact")))
@protocol CDSSLCardinal_sdkSubContact <CDSSLCardinal_sdkEncryptable, CDSSLCardinal_sdkICureDocument>
@required
@property (readonly) NSString * _Nullable classificationId __attribute__((swift_name("classificationId")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString * _Nullable planOfActionId __attribute__((swift_name("planOfActionId")));
@property (readonly) NSString * _Nullable protocol __attribute__((swift_name("protocol")));
@property (readonly) NSArray<CDSSLCardinal_sdkServiceLink *> *services __attribute__((swift_name("services")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedSubContact")))
@interface CDSSLCardinal_sdkDecryptedSubContact : CDSSLBase <CDSSLCardinal_sdkSubContact>
- (instancetype)initWithId:(NSString * _Nullable)id created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife descr:(NSString * _Nullable)descr protocol:(NSString * _Nullable)protocol status:(CDSSLInt * _Nullable)status formId:(NSString * _Nullable)formId planOfActionId:(NSString * _Nullable)planOfActionId healthElementId:(NSString * _Nullable)healthElementId classificationId:(NSString * _Nullable)classificationId services:(NSArray<CDSSLCardinal_sdkServiceLink *> *)services encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:descr:protocol:status:formId:planOfActionId:healthElementId:classificationId:services:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedSubContactCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedSubContact *)doCopyId:(NSString * _Nullable)id created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife descr:(NSString * _Nullable)descr protocol:(NSString * _Nullable)protocol status:(CDSSLInt * _Nullable)status formId:(NSString * _Nullable)formId planOfActionId:(NSString * _Nullable)planOfActionId healthElementId:(NSString * _Nullable)healthElementId classificationId:(NSString * _Nullable)classificationId services:(NSArray<CDSSLCardinal_sdkServiceLink *> *)services encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:descr:protocol:status:formId:planOfActionId:healthElementId:classificationId:services:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSString * _Nullable classificationId __attribute__((swift_name("classificationId")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable planOfActionId __attribute__((swift_name("planOfActionId")));
@property (readonly) NSString * _Nullable protocol __attribute__((swift_name("protocol")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSArray<CDSSLCardinal_sdkServiceLink *> *services __attribute__((swift_name("services")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedContact.Companion")))
@interface CDSSLCardinal_sdkDecryptedContactCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedContactCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedSubContact")))
@interface CDSSLCardinal_sdkEncryptedSubContact : CDSSLBase <CDSSLCardinal_sdkSubContact>
- (instancetype)initWithId:(NSString * _Nullable)id created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife descr:(NSString * _Nullable)descr protocol:(NSString * _Nullable)protocol status:(CDSSLInt * _Nullable)status formId:(NSString * _Nullable)formId planOfActionId:(NSString * _Nullable)planOfActionId healthElementId:(NSString * _Nullable)healthElementId classificationId:(NSString * _Nullable)classificationId services:(NSArray<CDSSLCardinal_sdkServiceLink *> *)services encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:descr:protocol:status:formId:planOfActionId:healthElementId:classificationId:services:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedSubContactCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedSubContact *)doCopyId:(NSString * _Nullable)id created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife descr:(NSString * _Nullable)descr protocol:(NSString * _Nullable)protocol status:(CDSSLInt * _Nullable)status formId:(NSString * _Nullable)formId planOfActionId:(NSString * _Nullable)planOfActionId healthElementId:(NSString * _Nullable)healthElementId classificationId:(NSString * _Nullable)classificationId services:(NSArray<CDSSLCardinal_sdkServiceLink *> *)services encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:descr:protocol:status:formId:planOfActionId:healthElementId:classificationId:services:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSString * _Nullable classificationId __attribute__((swift_name("classificationId")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString * _Nullable formId __attribute__((swift_name("formId")));
@property (readonly) NSString * _Nullable healthElementId __attribute__((swift_name("healthElementId")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable planOfActionId __attribute__((swift_name("planOfActionId")));
@property (readonly) NSString * _Nullable protocol __attribute__((swift_name("protocol")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) NSArray<CDSSLCardinal_sdkServiceLink *> *services __attribute__((swift_name("services")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedContact.Companion")))
@interface CDSSLCardinal_sdkEncryptedContactCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedContactCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("Cardinal_sdkContent")))
@protocol CDSSLCardinal_sdkContent
@required
- (BOOL)isCompound __attribute__((swift_name("isCompound()")));
@property (readonly) CDSSLKotlinByteArray * _Nullable binaryValue __attribute__((swift_name("binaryValue")));
@property (readonly) CDSSLBoolean * _Nullable booleanValue __attribute__((swift_name("booleanValue")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkService>> * _Nullable compoundValue __attribute__((swift_name("compoundValue")));
@property (readonly) NSString * _Nullable documentId __attribute__((swift_name("documentId")));
@property (readonly) CDSSLLong * _Nullable fuzzyDateValue __attribute__((swift_name("fuzzyDateValue")));
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable instantValue __attribute__((swift_name("instantValue")));
@property (readonly) CDSSLCardinal_sdkMeasure * _Nullable measureValue __attribute__((swift_name("measureValue")));
@property (readonly) CDSSLCardinal_sdkMedication * _Nullable medicationValue __attribute__((swift_name("medicationValue")));
@property (readonly) CDSSLDouble * _Nullable numberValue __attribute__((swift_name("numberValue")));
@property (readonly) NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable range __attribute__((swift_name("range")));
@property (readonly) NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable ratio __attribute__((swift_name("ratio")));
@property (readonly) NSString * _Nullable stringValue __attribute__((swift_name("stringValue")));
@property (readonly) CDSSLCardinal_sdkTimeSeries * _Nullable timeSeries __attribute__((swift_name("timeSeries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLinkQualification")))
@interface CDSSLCardinal_sdkLinkQualification : CDSSLKotlinEnum<CDSSLCardinal_sdkLinkQualification *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkLinkQualificationCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *exact __attribute__((swift_name("exact")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *narrower __attribute__((swift_name("narrower")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *broader __attribute__((swift_name("broader")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *approximate __attribute__((swift_name("approximate")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *sequence __attribute__((swift_name("sequence")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *parent __attribute__((swift_name("parent")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *child __attribute__((swift_name("child")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *relatedcode __attribute__((swift_name("relatedcode")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *linkedpackage __attribute__((swift_name("linkedpackage")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *relatedservice __attribute__((swift_name("relatedservice")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *inresponseto __attribute__((swift_name("inresponseto")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *replaces __attribute__((swift_name("replaces")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *transforms __attribute__((swift_name("transforms")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *transformsandreplaces __attribute__((swift_name("transformsandreplaces")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *appendsto __attribute__((swift_name("appendsto")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *basedon __attribute__((swift_name("basedon")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *derivedfrom __attribute__((swift_name("derivedfrom")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *device __attribute__((swift_name("device")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *focus __attribute__((swift_name("focus")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *hasmember __attribute__((swift_name("hasmember")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *performer __attribute__((swift_name("performer")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *specimen __attribute__((swift_name("specimen")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *resultinterpreter __attribute__((swift_name("resultinterpreter")));
@property (class, readonly) CDSSLCardinal_sdkLinkQualification *request __attribute__((swift_name("request")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkLinkQualification *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkLinkQualification *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedContent")))
@interface CDSSLCardinal_sdkEncryptedContent : CDSSLBase <CDSSLCardinal_sdkContent>
- (instancetype)initWithStringValue:(NSString * _Nullable)stringValue numberValue:(CDSSLDouble * _Nullable)numberValue booleanValue:(CDSSLBoolean * _Nullable)booleanValue instantValue:(CDSSLKotlinx_datetimeInstant * _Nullable)instantValue fuzzyDateValue:(CDSSLLong * _Nullable)fuzzyDateValue binaryValue:(CDSSLKotlinByteArray * _Nullable)binaryValue documentId:(NSString * _Nullable)documentId measureValue:(CDSSLCardinal_sdkMeasure * _Nullable)measureValue medicationValue:(CDSSLCardinal_sdkMedication * _Nullable)medicationValue timeSeries:(CDSSLCardinal_sdkTimeSeries * _Nullable)timeSeries compoundValue:(NSArray<CDSSLCardinal_sdkEncryptedService *> * _Nullable)compoundValue ratio:(NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable)ratio range:(NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable)range __attribute__((swift_name("init(stringValue:numberValue:booleanValue:instantValue:fuzzyDateValue:binaryValue:documentId:measureValue:medicationValue:timeSeries:compoundValue:ratio:range:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedContentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedContent *)doCopyStringValue:(NSString * _Nullable)stringValue numberValue:(CDSSLDouble * _Nullable)numberValue booleanValue:(CDSSLBoolean * _Nullable)booleanValue instantValue:(CDSSLKotlinx_datetimeInstant * _Nullable)instantValue fuzzyDateValue:(CDSSLLong * _Nullable)fuzzyDateValue binaryValue:(CDSSLKotlinByteArray * _Nullable)binaryValue documentId:(NSString * _Nullable)documentId measureValue:(CDSSLCardinal_sdkMeasure * _Nullable)measureValue medicationValue:(CDSSLCardinal_sdkMedication * _Nullable)medicationValue timeSeries:(CDSSLCardinal_sdkTimeSeries * _Nullable)timeSeries compoundValue:(NSArray<CDSSLCardinal_sdkEncryptedService *> * _Nullable)compoundValue ratio:(NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable)ratio range:(NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable)range __attribute__((swift_name("doCopy(stringValue:numberValue:booleanValue:instantValue:fuzzyDateValue:binaryValue:documentId:measureValue:medicationValue:timeSeries:compoundValue:ratio:range:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable binaryValue __attribute__((swift_name("binaryValue")));
@property (readonly) CDSSLBoolean * _Nullable booleanValue __attribute__((swift_name("booleanValue")));
@property (readonly) NSArray<CDSSLCardinal_sdkEncryptedService *> * _Nullable compoundValue __attribute__((swift_name("compoundValue")));
@property (readonly) NSString * _Nullable documentId __attribute__((swift_name("documentId")));
@property (readonly) CDSSLLong * _Nullable fuzzyDateValue __attribute__((swift_name("fuzzyDateValue")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable instantValue __attribute__((swift_name("instantValue")));
@property (readonly) CDSSLCardinal_sdkMeasure * _Nullable measureValue __attribute__((swift_name("measureValue")));
@property (readonly) CDSSLCardinal_sdkMedication * _Nullable medicationValue __attribute__((swift_name("medicationValue")));
@property (readonly) CDSSLDouble * _Nullable numberValue __attribute__((swift_name("numberValue")));
@property (readonly) NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable range __attribute__((swift_name("range")));
@property (readonly) NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable ratio __attribute__((swift_name("ratio")));
@property (readonly) NSString * _Nullable stringValue __attribute__((swift_name("stringValue")));
@property (readonly) CDSSLCardinal_sdkTimeSeries * _Nullable timeSeries __attribute__((swift_name("timeSeries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedService.Companion")))
@interface CDSSLCardinal_sdkEncryptedServiceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedServiceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedContent")))
@interface CDSSLCardinal_sdkDecryptedContent : CDSSLBase <CDSSLCardinal_sdkContent>
- (instancetype)initWithStringValue:(NSString * _Nullable)stringValue numberValue:(CDSSLDouble * _Nullable)numberValue booleanValue:(CDSSLBoolean * _Nullable)booleanValue instantValue:(CDSSLKotlinx_datetimeInstant * _Nullable)instantValue fuzzyDateValue:(CDSSLLong * _Nullable)fuzzyDateValue binaryValue:(CDSSLKotlinByteArray * _Nullable)binaryValue documentId:(NSString * _Nullable)documentId measureValue:(CDSSLCardinal_sdkMeasure * _Nullable)measureValue medicationValue:(CDSSLCardinal_sdkMedication * _Nullable)medicationValue timeSeries:(CDSSLCardinal_sdkTimeSeries * _Nullable)timeSeries compoundValue:(NSArray<CDSSLCardinal_sdkDecryptedService *> * _Nullable)compoundValue ratio:(NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable)ratio range:(NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable)range __attribute__((swift_name("init(stringValue:numberValue:booleanValue:instantValue:fuzzyDateValue:binaryValue:documentId:measureValue:medicationValue:timeSeries:compoundValue:ratio:range:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedContentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedContent *)doCopyStringValue:(NSString * _Nullable)stringValue numberValue:(CDSSLDouble * _Nullable)numberValue booleanValue:(CDSSLBoolean * _Nullable)booleanValue instantValue:(CDSSLKotlinx_datetimeInstant * _Nullable)instantValue fuzzyDateValue:(CDSSLLong * _Nullable)fuzzyDateValue binaryValue:(CDSSLKotlinByteArray * _Nullable)binaryValue documentId:(NSString * _Nullable)documentId measureValue:(CDSSLCardinal_sdkMeasure * _Nullable)measureValue medicationValue:(CDSSLCardinal_sdkMedication * _Nullable)medicationValue timeSeries:(CDSSLCardinal_sdkTimeSeries * _Nullable)timeSeries compoundValue:(NSArray<CDSSLCardinal_sdkDecryptedService *> * _Nullable)compoundValue ratio:(NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable)ratio range:(NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable)range __attribute__((swift_name("doCopy(stringValue:numberValue:booleanValue:instantValue:fuzzyDateValue:binaryValue:documentId:measureValue:medicationValue:timeSeries:compoundValue:ratio:range:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ByteArraySerializer))
*/
@property (readonly) CDSSLKotlinByteArray * _Nullable binaryValue __attribute__((swift_name("binaryValue")));
@property (readonly) CDSSLBoolean * _Nullable booleanValue __attribute__((swift_name("booleanValue")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedService *> * _Nullable compoundValue __attribute__((swift_name("compoundValue")));
@property (readonly) NSString * _Nullable documentId __attribute__((swift_name("documentId")));
@property (readonly) CDSSLLong * _Nullable fuzzyDateValue __attribute__((swift_name("fuzzyDateValue")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable instantValue __attribute__((swift_name("instantValue")));
@property (readonly) CDSSLCardinal_sdkMeasure * _Nullable measureValue __attribute__((swift_name("measureValue")));
@property (readonly) CDSSLCardinal_sdkMedication * _Nullable medicationValue __attribute__((swift_name("medicationValue")));
@property (readonly) CDSSLDouble * _Nullable numberValue __attribute__((swift_name("numberValue")));
@property (readonly) NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable range __attribute__((swift_name("range")));
@property (readonly) NSArray<CDSSLCardinal_sdkMeasure *> * _Nullable ratio __attribute__((swift_name("ratio")));
@property (readonly) NSString * _Nullable stringValue __attribute__((swift_name("stringValue")));
@property (readonly) CDSSLCardinal_sdkTimeSeries * _Nullable timeSeries __attribute__((swift_name("timeSeries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedService.Companion")))
@interface CDSSLCardinal_sdkDecryptedServiceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedServiceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIcureStub.Companion")))
@interface CDSSLCardinal_sdkIcureStubCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkIcureStubCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLabelledOccurence.Companion")))
@interface CDSSLCardinal_sdkLabelledOccurenceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkLabelledOccurenceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkContactShareOptions.Companion")))
@interface CDSSLCardinal_sdkContactShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkContactShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShamirUpdateRequest")))
@interface CDSSLCardinal_sdkShamirUpdateRequest : CDSSLBase
- (instancetype)initWithNotariesIds:(NSSet<NSString *> *)notariesIds minShares:(int32_t)minShares __attribute__((swift_name("init(notariesIds:minShares:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkShamirUpdateRequestCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkShamirUpdateRequest *)doCopyNotariesIds:(NSSet<NSString *> *)notariesIds minShares:(int32_t)minShares __attribute__((swift_name("doCopy(notariesIds:minShares:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t minShares __attribute__((swift_name("minShares")));
@property (readonly) NSSet<NSString *> *notariesIds __attribute__((swift_name("notariesIds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDeletedAttachment")))
@interface CDSSLCardinal_sdkDeletedAttachment : CDSSLBase
- (instancetype)initWithCouchDbAttachmentId:(NSString * _Nullable)couchDbAttachmentId objectStoreAttachmentId:(NSString * _Nullable)objectStoreAttachmentId key:(NSString * _Nullable)key deletionTime:(CDSSLLong * _Nullable)deletionTime __attribute__((swift_name("init(couchDbAttachmentId:objectStoreAttachmentId:key:deletionTime:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDeletedAttachmentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDeletedAttachment *)doCopyCouchDbAttachmentId:(NSString * _Nullable)couchDbAttachmentId objectStoreAttachmentId:(NSString * _Nullable)objectStoreAttachmentId key:(NSString * _Nullable)key deletionTime:(CDSSLLong * _Nullable)deletionTime __attribute__((swift_name("doCopy(couchDbAttachmentId:objectStoreAttachmentId:key:deletionTime:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable couchDbAttachmentId __attribute__((swift_name("couchDbAttachmentId")));
@property (readonly) CDSSLLong * _Nullable deletionTime __attribute__((swift_name("deletionTime")));
@property (readonly) NSString * _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable objectStoreAttachmentId __attribute__((swift_name("objectStoreAttachmentId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentLocation")))
@interface CDSSLCardinal_sdkDocumentLocation : CDSSLKotlinEnum<CDSSLCardinal_sdkDocumentLocation *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDocumentLocationCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkDocumentLocation *annex __attribute__((swift_name("annex")));
@property (class, readonly) CDSSLCardinal_sdkDocumentLocation *body __attribute__((swift_name("body")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkDocumentLocation *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkDocumentLocation *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentStatus")))
@interface CDSSLCardinal_sdkDocumentStatus : CDSSLKotlinEnum<CDSSLCardinal_sdkDocumentStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDocumentStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *draft __attribute__((swift_name("draft")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *finalized __attribute__((swift_name("finalized")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *pendingreview __attribute__((swift_name("pendingreview")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *reviewed __attribute__((swift_name("reviewed")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *pendingsignature __attribute__((swift_name("pendingsignature")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *signed_ __attribute__((swift_name("signed_")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *canceled __attribute__((swift_name("canceled")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *sent __attribute__((swift_name("sent")));
@property (class, readonly) CDSSLCardinal_sdkDocumentStatus *delivered __attribute__((swift_name("delivered")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkDocumentStatus *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkDocumentStatus *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentType")))
@interface CDSSLCardinal_sdkDocumentType : CDSSLKotlinEnum<CDSSLCardinal_sdkDocumentType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDocumentTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *admission __attribute__((swift_name("admission")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *alert __attribute__((swift_name("alert")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *bvtsample __attribute__((swift_name("bvtsample")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *clinicalpath __attribute__((swift_name("clinicalpath")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *clinicalsummary __attribute__((swift_name("clinicalsummary")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *contactreport __attribute__((swift_name("contactreport")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *quote __attribute__((swift_name("quote")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *invoice __attribute__((swift_name("invoice")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *death __attribute__((swift_name("death")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *discharge __attribute__((swift_name("discharge")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *dischargereport __attribute__((swift_name("dischargereport")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *ebirthbabymedicalform __attribute__((swift_name("ebirthbabymedicalform")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *ebirthbabynotification __attribute__((swift_name("ebirthbabynotification")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *ebirthmothermedicalform __attribute__((swift_name("ebirthmothermedicalform")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *ebirthmothernotification __attribute__((swift_name("ebirthmothernotification")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *ecaresafeconsultation __attribute__((swift_name("ecaresafeconsultation")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *epidemiology __attribute__((swift_name("epidemiology")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *intervention __attribute__((swift_name("intervention")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *labrequest __attribute__((swift_name("labrequest")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *labresult __attribute__((swift_name("labresult")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *medicaladvisoragreement __attribute__((swift_name("medicaladvisoragreement")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *medicationschemeelement __attribute__((swift_name("medicationschemeelement")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *note __attribute__((swift_name("note")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *notification __attribute__((swift_name("notification")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *pharmaceuticalprescription __attribute__((swift_name("pharmaceuticalprescription")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *prescription __attribute__((swift_name("prescription")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *productdelivery __attribute__((swift_name("productdelivery")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *quickdischargereport __attribute__((swift_name("quickdischargereport")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *radiationexposuremonitoring __attribute__((swift_name("radiationexposuremonitoring")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *referral __attribute__((swift_name("referral")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *report __attribute__((swift_name("report")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *request __attribute__((swift_name("request")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *result __attribute__((swift_name("result")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *sumehr __attribute__((swift_name("sumehr")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *telemonitoring __attribute__((swift_name("telemonitoring")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *template_ __attribute__((swift_name("template_")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *templateadmin __attribute__((swift_name("templateadmin")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *treatmentsuspension __attribute__((swift_name("treatmentsuspension")));
@property (class, readonly) CDSSLCardinal_sdkDocumentType *vaccination __attribute__((swift_name("vaccination")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkDocumentType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkDocumentType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDataAttachment")))
@interface CDSSLCardinal_sdkDataAttachment : CDSSLBase
- (instancetype)initWithCouchDbAttachmentId:(NSString * _Nullable)couchDbAttachmentId objectStoreAttachmentId:(NSString * _Nullable)objectStoreAttachmentId utis:(NSArray<NSString *> *)utis __attribute__((swift_name("init(couchDbAttachmentId:objectStoreAttachmentId:utis:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDataAttachmentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDataAttachment *)doCopyCouchDbAttachmentId:(NSString * _Nullable)couchDbAttachmentId objectStoreAttachmentId:(NSString * _Nullable)objectStoreAttachmentId utis:(NSArray<NSString *> *)utis __attribute__((swift_name("doCopy(couchDbAttachmentId:objectStoreAttachmentId:utis:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable couchDbAttachmentId __attribute__((swift_name("couchDbAttachmentId")));
@property (readonly) NSString * _Nullable objectStoreAttachmentId __attribute__((swift_name("objectStoreAttachmentId")));
@property (readonly) NSArray<NSString *> *utis __attribute__((swift_name("utis")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedDocument.Companion")))
@interface CDSSLCardinal_sdkDecryptedDocumentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedDocumentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedDocument.Companion")))
@interface CDSSLCardinal_sdkEncryptedDocumentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedDocumentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMessageAttachment")))
@interface CDSSLCardinal_sdkMessageAttachment : CDSSLBase
- (instancetype)initWithType:(CDSSLCardinal_sdkDocumentLocation * _Nullable)type ids:(NSArray<NSString *> *)ids __attribute__((swift_name("init(type:ids:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMessageAttachmentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkMessageAttachment *)doCopyType:(CDSSLCardinal_sdkDocumentLocation * _Nullable)type ids:(NSArray<NSString *> *)ids __attribute__((swift_name("doCopy(type:ids:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *ids __attribute__((swift_name("ids")));
@property (readonly) CDSSLCardinal_sdkDocumentLocation * _Nullable type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMessageReadStatus")))
@interface CDSSLCardinal_sdkMessageReadStatus : CDSSLBase
- (instancetype)initWithTime:(CDSSLLong * _Nullable)time read:(BOOL)read __attribute__((swift_name("init(time:read:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMessageReadStatusCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkMessageReadStatus *)doCopyTime:(CDSSLLong * _Nullable)time read:(BOOL)read __attribute__((swift_name("doCopy(time:read:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL read __attribute__((swift_name("read")));
@property (readonly) CDSSLLong * _Nullable time __attribute__((swift_name("time")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentShareOptions.Companion")))
@interface CDSSLCardinal_sdkDocumentShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDocumentShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedForm.Companion")))
@interface CDSSLCardinal_sdkDecryptedFormCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedFormCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedForm.Companion")))
@interface CDSSLCardinal_sdkEncryptedFormCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedFormCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFormTemplateLayout")))
@interface CDSSLCardinal_sdkFormTemplateLayout : CDSSLBase
- (instancetype)initWithForm:(NSString *)form actions:(NSArray<CDSSLCardinal_sdkAction *> *)actions sections:(NSArray<CDSSLCardinal_sdkSection *> *)sections description:(NSString * _Nullable)description keywords:(NSArray<NSString *> * _Nullable)keywords __attribute__((swift_name("init(form:actions:sections:description:keywords:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkFormTemplateLayoutCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkFormTemplateLayout *)doCopyForm:(NSString *)form actions:(NSArray<CDSSLCardinal_sdkAction *> *)actions sections:(NSArray<CDSSLCardinal_sdkSection *> *)sections description:(NSString * _Nullable)description keywords:(NSArray<NSString *> * _Nullable)keywords __attribute__((swift_name("doCopy(form:actions:sections:description:keywords:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<CDSSLCardinal_sdkAction *> *actions __attribute__((swift_name("actions")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) NSString *form __attribute__((swift_name("form")));
@property (readonly) NSArray<NSString *> * _Nullable keywords __attribute__((swift_name("keywords")));
@property (readonly) NSArray<CDSSLCardinal_sdkSection *> *sections __attribute__((swift_name("sections")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentGroup")))
@interface CDSSLCardinal_sdkDocumentGroup : CDSSLBase
- (instancetype)initWithGuid:(NSString * _Nullable)guid name:(NSString * _Nullable)name __attribute__((swift_name("init(guid:name:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDocumentGroupCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDocumentGroup *)doCopyGuid:(NSString * _Nullable)guid name:(NSString * _Nullable)name __attribute__((swift_name("doCopy(guid:name:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable guid __attribute__((swift_name("guid")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFormTemplate.Companion")))
@interface CDSSLCardinal_sdkFormTemplateCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkFormTemplateCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFormShareOptions.Companion")))
@interface CDSSLCardinal_sdkFormShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkFormShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("Cardinal_sdkCareTeamMember")))
@protocol CDSSLCardinal_sdkCareTeamMember <CDSSLCardinal_sdkEncryptable, CDSSLCardinal_sdkIdentifiable>
@required
@property (readonly) CDSSLCardinal_sdkCareTeamMemberType * _Nullable careTeamMemberType __attribute__((swift_name("careTeamMemberType")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable quality __attribute__((swift_name("quality")));
@end

__attribute__((swift_name("Cardinal_sdkEpisode")))
@protocol CDSSLCardinal_sdkEpisode <CDSSLCardinal_sdkEncryptable, CDSSLCardinal_sdkIdentifiable, CDSSLCardinal_sdkNamed>
@required
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLaterality")))
@interface CDSSLCardinal_sdkLaterality : CDSSLKotlinEnum<CDSSLCardinal_sdkLaterality *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkLateralityCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkLaterality *left __attribute__((swift_name("left")));
@property (class, readonly) CDSSLCardinal_sdkLaterality *right __attribute__((swift_name("right")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkLaterality *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkLaterality *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Cardinal_sdkPlanOfAction")))
@protocol CDSSLCardinal_sdkPlanOfAction <CDSSLCardinal_sdkEncryptable, CDSSLCardinal_sdkICureDocument, CDSSLCardinal_sdkNamed>
@required
@property (readonly) NSArray<id> *careTeamMemberships __attribute__((swift_name("careTeamMemberships")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) CDSSLLong * _Nullable deadlineDate __attribute__((swift_name("deadlineDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSSet<NSString *> *documentIds __attribute__((swift_name("documentIds")));
@property (readonly) NSString * _Nullable idClosingContact __attribute__((swift_name("idClosingContact")));
@property (readonly) NSString * _Nullable idOpeningContact __attribute__((swift_name("idOpeningContact")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) CDSSLInt * _Nullable numberOfCares __attribute__((swift_name("numberOfCares")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSString * _Nullable prescriberId __attribute__((swift_name("prescriberId")));
@property (readonly) BOOL relevant __attribute__((swift_name("relevant")));
@property (readonly) int32_t status_ __attribute__((swift_name("status_")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedPlanOfAction")))
@interface CDSSLCardinal_sdkDecryptedPlanOfAction : CDSSLBase <CDSSLCardinal_sdkPlanOfAction>
- (instancetype)initWithId:(NSString *)id created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife prescriberId:(NSString * _Nullable)prescriberId valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate deadlineDate:(CDSSLLong * _Nullable)deadlineDate name:(NSString * _Nullable)name descr:(NSString * _Nullable)descr note:(NSString * _Nullable)note idOpeningContact:(NSString * _Nullable)idOpeningContact idClosingContact:(NSString * _Nullable)idClosingContact status:(int32_t)status documentIds:(NSSet<NSString *> *)documentIds numberOfCares:(CDSSLInt * _Nullable)numberOfCares careTeamMemberships:(NSArray<id> *)careTeamMemberships relevant:(BOOL)relevant encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:prescriberId:valueDate:openingDate:closingDate:deadlineDate:name:descr:note:idOpeningContact:idClosingContact:status:documentIds:numberOfCares:careTeamMemberships:relevant:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedPlanOfActionCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedPlanOfAction *)doCopyId:(NSString *)id created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife prescriberId:(NSString * _Nullable)prescriberId valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate deadlineDate:(CDSSLLong * _Nullable)deadlineDate name:(NSString * _Nullable)name descr:(NSString * _Nullable)descr note:(NSString * _Nullable)note idOpeningContact:(NSString * _Nullable)idOpeningContact idClosingContact:(NSString * _Nullable)idClosingContact status:(int32_t)status documentIds:(NSSet<NSString *> *)documentIds numberOfCares:(CDSSLInt * _Nullable)numberOfCares careTeamMemberships:(NSArray<id> *)careTeamMemberships relevant:(BOOL)relevant encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:prescriberId:valueDate:openingDate:closingDate:deadlineDate:name:descr:note:idOpeningContact:idClosingContact:status:documentIds:numberOfCares:careTeamMemberships:relevant:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSArray<id> *careTeamMemberships __attribute__((swift_name("careTeamMemberships")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable deadlineDate __attribute__((swift_name("deadlineDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSSet<NSString *> *documentIds __attribute__((swift_name("documentIds")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable idClosingContact __attribute__((swift_name("idClosingContact")));
@property (readonly) NSString * _Nullable idOpeningContact __attribute__((swift_name("idOpeningContact")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) CDSSLInt * _Nullable numberOfCares __attribute__((swift_name("numberOfCares")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSString * _Nullable prescriberId __attribute__((swift_name("prescriberId")));
@property (readonly) BOOL relevant __attribute__((swift_name("relevant")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) int32_t status_ __attribute__((swift_name("status_")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedEpisode")))
@interface CDSSLCardinal_sdkDecryptedEpisode : CDSSLBase <CDSSLCardinal_sdkEpisode>
- (instancetype)initWithId:(NSString *)id name:(NSString * _Nullable)name comment:(NSString * _Nullable)comment startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:name:comment:startDate:endDate:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedEpisodeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedEpisode *)doCopyId:(NSString *)id name:(NSString * _Nullable)name comment:(NSString * _Nullable)comment startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:name:comment:startDate:endDate:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedCareTeamMember")))
@interface CDSSLCardinal_sdkDecryptedCareTeamMember : CDSSLBase <CDSSLCardinal_sdkCareTeamMember>
- (instancetype)initWithId:(NSString *)id careTeamMemberType:(CDSSLCardinal_sdkCareTeamMemberType * _Nullable)careTeamMemberType healthcarePartyId:(NSString * _Nullable)healthcarePartyId quality:(CDSSLCardinal_sdkCodeStub * _Nullable)quality encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:careTeamMemberType:healthcarePartyId:quality:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedCareTeamMemberCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedCareTeamMember *)doCopyId:(NSString *)id careTeamMemberType:(CDSSLCardinal_sdkCareTeamMemberType * _Nullable)careTeamMemberType healthcarePartyId:(NSString * _Nullable)healthcarePartyId quality:(CDSSLCardinal_sdkCodeStub * _Nullable)quality encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:careTeamMemberType:healthcarePartyId:quality:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkCareTeamMemberType * _Nullable careTeamMemberType __attribute__((swift_name("careTeamMemberType")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable quality __attribute__((swift_name("quality")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedHealthElement.Companion")))
@interface CDSSLCardinal_sdkDecryptedHealthElementCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedHealthElementCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedPlanOfAction")))
@interface CDSSLCardinal_sdkEncryptedPlanOfAction : CDSSLBase <CDSSLCardinal_sdkPlanOfAction>
- (instancetype)initWithId:(NSString *)id created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife prescriberId:(NSString * _Nullable)prescriberId valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate deadlineDate:(CDSSLLong * _Nullable)deadlineDate name:(NSString * _Nullable)name descr:(NSString * _Nullable)descr note:(NSString * _Nullable)note idOpeningContact:(NSString * _Nullable)idOpeningContact idClosingContact:(NSString * _Nullable)idClosingContact status:(int32_t)status documentIds:(NSSet<NSString *> *)documentIds numberOfCares:(CDSSLInt * _Nullable)numberOfCares careTeamMemberships:(NSArray<id> *)careTeamMemberships relevant:(BOOL)relevant encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:prescriberId:valueDate:openingDate:closingDate:deadlineDate:name:descr:note:idOpeningContact:idClosingContact:status:documentIds:numberOfCares:careTeamMemberships:relevant:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedPlanOfActionCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedPlanOfAction *)doCopyId:(NSString *)id created:(CDSSLLong * _Nullable)created modified:(CDSSLLong * _Nullable)modified author:(NSString * _Nullable)author responsible:(NSString * _Nullable)responsible medicalLocationId:(NSString * _Nullable)medicalLocationId tags:(NSSet<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSSet<CDSSLCardinal_sdkCodeStub *> *)codes endOfLife:(CDSSLLong * _Nullable)endOfLife prescriberId:(NSString * _Nullable)prescriberId valueDate:(CDSSLLong * _Nullable)valueDate openingDate:(CDSSLLong * _Nullable)openingDate closingDate:(CDSSLLong * _Nullable)closingDate deadlineDate:(CDSSLLong * _Nullable)deadlineDate name:(NSString * _Nullable)name descr:(NSString * _Nullable)descr note:(NSString * _Nullable)note idOpeningContact:(NSString * _Nullable)idOpeningContact idClosingContact:(NSString * _Nullable)idClosingContact status:(int32_t)status documentIds:(NSSet<NSString *> *)documentIds numberOfCares:(CDSSLInt * _Nullable)numberOfCares careTeamMemberships:(NSArray<id> *)careTeamMemberships relevant:(BOOL)relevant encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:created:modified:author:responsible:medicalLocationId:tags:codes:endOfLife:prescriberId:valueDate:openingDate:closingDate:deadlineDate:name:descr:note:idOpeningContact:idClosingContact:status:documentIds:numberOfCares:careTeamMemberships:relevant:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable author __attribute__((swift_name("author")));
@property (readonly) NSArray<id> *careTeamMemberships __attribute__((swift_name("careTeamMemberships")));
@property (readonly) CDSSLLong * _Nullable closingDate __attribute__((swift_name("closingDate")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLLong * _Nullable created __attribute__((swift_name("created")));
@property (readonly) CDSSLLong * _Nullable deadlineDate __attribute__((swift_name("deadlineDate")));
@property (readonly) NSString * _Nullable descr __attribute__((swift_name("descr")));
@property (readonly) NSSet<NSString *> *documentIds __attribute__((swift_name("documentIds")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endOfLife __attribute__((swift_name("endOfLife")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable idClosingContact __attribute__((swift_name("idClosingContact")));
@property (readonly) NSString * _Nullable idOpeningContact __attribute__((swift_name("idOpeningContact")));
@property (readonly) NSString * _Nullable medicalLocationId __attribute__((swift_name("medicalLocationId")));
@property (readonly) CDSSLLong * _Nullable modified __attribute__((swift_name("modified")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable note __attribute__((swift_name("note")));
@property (readonly) CDSSLInt * _Nullable numberOfCares __attribute__((swift_name("numberOfCares")));
@property (readonly) CDSSLLong * _Nullable openingDate __attribute__((swift_name("openingDate")));
@property (readonly) NSString * _Nullable prescriberId __attribute__((swift_name("prescriberId")));
@property (readonly) BOOL relevant __attribute__((swift_name("relevant")));
@property (readonly) NSString * _Nullable responsible __attribute__((swift_name("responsible")));
@property (readonly) int32_t status_ __attribute__((swift_name("status_")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@property (readonly) CDSSLLong * _Nullable valueDate __attribute__((swift_name("valueDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedEpisode")))
@interface CDSSLCardinal_sdkEncryptedEpisode : CDSSLBase <CDSSLCardinal_sdkEpisode>
- (instancetype)initWithId:(NSString *)id name:(NSString * _Nullable)name comment:(NSString * _Nullable)comment startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:name:comment:startDate:endDate:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedEpisodeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedEpisode *)doCopyId:(NSString *)id name:(NSString * _Nullable)name comment:(NSString * _Nullable)comment startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:name:comment:startDate:endDate:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedCareTeamMember")))
@interface CDSSLCardinal_sdkEncryptedCareTeamMember : CDSSLBase <CDSSLCardinal_sdkCareTeamMember>
- (instancetype)initWithId:(NSString *)id careTeamMemberType:(CDSSLCardinal_sdkCareTeamMemberType * _Nullable)careTeamMemberType healthcarePartyId:(NSString * _Nullable)healthcarePartyId quality:(CDSSLCardinal_sdkCodeStub * _Nullable)quality encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:careTeamMemberType:healthcarePartyId:quality:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedCareTeamMemberCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedCareTeamMember *)doCopyId:(NSString *)id careTeamMemberType:(CDSSLCardinal_sdkCareTeamMemberType * _Nullable)careTeamMemberType healthcarePartyId:(NSString * _Nullable)healthcarePartyId quality:(CDSSLCardinal_sdkCodeStub * _Nullable)quality encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:careTeamMemberType:healthcarePartyId:quality:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkCareTeamMemberType * _Nullable careTeamMemberType __attribute__((swift_name("careTeamMemberType")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable quality __attribute__((swift_name("quality")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedHealthElement.Companion")))
@interface CDSSLCardinal_sdkEncryptedHealthElementCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedHealthElementCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkHealthElementShareOptions.Companion")))
@interface CDSSLCardinal_sdkHealthElementShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkHealthElementShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIdentityDocumentReader")))
@interface CDSSLCardinal_sdkIdentityDocumentReader : CDSSLBase
- (instancetype)initWithJustificatifDocumentNumber:(NSString * _Nullable)justificatifDocumentNumber supportSerialNumber:(NSString * _Nullable)supportSerialNumber timeReadingEIdDocument:(CDSSLLong * _Nullable)timeReadingEIdDocument eidDocumentSupportType:(int32_t)eidDocumentSupportType reasonManualEncoding:(int32_t)reasonManualEncoding reasonUsingVignette:(int32_t)reasonUsingVignette __attribute__((swift_name("init(justificatifDocumentNumber:supportSerialNumber:timeReadingEIdDocument:eidDocumentSupportType:reasonManualEncoding:reasonUsingVignette:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkIdentityDocumentReaderCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkIdentityDocumentReader *)doCopyJustificatifDocumentNumber:(NSString * _Nullable)justificatifDocumentNumber supportSerialNumber:(NSString * _Nullable)supportSerialNumber timeReadingEIdDocument:(CDSSLLong * _Nullable)timeReadingEIdDocument eidDocumentSupportType:(int32_t)eidDocumentSupportType reasonManualEncoding:(int32_t)reasonManualEncoding reasonUsingVignette:(int32_t)reasonUsingVignette __attribute__((swift_name("doCopy(justificatifDocumentNumber:supportSerialNumber:timeReadingEIdDocument:eidDocumentSupportType:reasonManualEncoding:reasonUsingVignette:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t eidDocumentSupportType __attribute__((swift_name("eidDocumentSupportType")));
@property (readonly) NSString * _Nullable justificatifDocumentNumber __attribute__((swift_name("justificatifDocumentNumber")));
@property (readonly) int32_t reasonManualEncoding __attribute__((swift_name("reasonManualEncoding")));
@property (readonly) int32_t reasonUsingVignette __attribute__((swift_name("reasonUsingVignette")));
@property (readonly) NSString * _Nullable supportSerialNumber __attribute__((swift_name("supportSerialNumber")));
@property (readonly) CDSSLLong * _Nullable timeReadingEIdDocument __attribute__((swift_name("timeReadingEIdDocument")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkInvoiceInterventionType")))
@interface CDSSLCardinal_sdkInvoiceInterventionType : CDSSLKotlinEnum<CDSSLCardinal_sdkInvoiceInterventionType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkInvoiceInterventionTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkInvoiceInterventionType *total __attribute__((swift_name("total")));
@property (class, readonly) CDSSLCardinal_sdkInvoiceInterventionType *userfees __attribute__((swift_name("userfees")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkInvoiceInterventionType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkInvoiceInterventionType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPaymentType")))
@interface CDSSLCardinal_sdkPaymentType : CDSSLKotlinEnum<CDSSLCardinal_sdkPaymentType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPaymentTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkPaymentType *cash __attribute__((swift_name("cash")));
@property (class, readonly) CDSSLCardinal_sdkPaymentType *wired __attribute__((swift_name("wired")));
@property (class, readonly) CDSSLCardinal_sdkPaymentType *insurance __attribute__((swift_name("insurance")));
@property (class, readonly) CDSSLCardinal_sdkPaymentType *creditcard __attribute__((swift_name("creditcard")));
@property (class, readonly) CDSSLCardinal_sdkPaymentType *debitcard __attribute__((swift_name("debitcard")));
@property (class, readonly) CDSSLCardinal_sdkPaymentType *paypal __attribute__((swift_name("paypal")));
@property (class, readonly) CDSSLCardinal_sdkPaymentType *bitcoin __attribute__((swift_name("bitcoin")));
@property (class, readonly) CDSSLCardinal_sdkPaymentType *other __attribute__((swift_name("other")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkPaymentType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkPaymentType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPayment")))
@interface CDSSLCardinal_sdkPayment : CDSSLBase
- (instancetype)initWithPaymentDate:(int64_t)paymentDate paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid __attribute__((swift_name("init(paymentDate:paymentType:paid:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPaymentCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPayment *)doCopyPaymentDate:(int64_t)paymentDate paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid __attribute__((swift_name("doCopy(paymentDate:paymentType:paid:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLDouble * _Nullable paid __attribute__((swift_name("paid")));
@property (readonly) int64_t paymentDate __attribute__((swift_name("paymentDate")));
@property (readonly) CDSSLCardinal_sdkPaymentType * _Nullable paymentType __attribute__((swift_name("paymentType")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedInvoicingCode")))
@interface CDSSLCardinal_sdkDecryptedInvoicingCode : CDSSLBase <CDSSLCardinal_sdkInvoicingCode>
- (instancetype)initWithId:(NSString * _Nullable)id dateCode:(CDSSLLong * _Nullable)dateCode logicalId:(NSString * _Nullable)logicalId label:(NSString * _Nullable)label userId:(NSString * _Nullable)userId contactId:(NSString * _Nullable)contactId serviceId:(NSString * _Nullable)serviceId tarificationId:(NSString * _Nullable)tarificationId code:(NSString * _Nullable)code paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid totalAmount:(CDSSLDouble * _Nullable)totalAmount reimbursement:(CDSSLDouble * _Nullable)reimbursement patientIntervention:(CDSSLDouble * _Nullable)patientIntervention doctorSupplement:(CDSSLDouble * _Nullable)doctorSupplement conventionAmount:(CDSSLDouble * _Nullable)conventionAmount vat:(CDSSLDouble * _Nullable)vat error:(NSString * _Nullable)error contract:(NSString * _Nullable)contract contractDate:(CDSSLLong * _Nullable)contractDate units:(CDSSLInt * _Nullable)units side:(CDSSLInt * _Nullable)side timeOfDay:(CDSSLInt * _Nullable)timeOfDay eidReadingHour:(CDSSLInt * _Nullable)eidReadingHour eidReadingValue:(NSString * _Nullable)eidReadingValue override3rdPayerCode:(CDSSLInt * _Nullable)override3rdPayerCode override3rdPayerReason:(NSString * _Nullable)override3rdPayerReason transplantationCode:(CDSSLInt * _Nullable)transplantationCode prescriberNorm:(CDSSLInt * _Nullable)prescriberNorm percentNorm:(CDSSLInt * _Nullable)percentNorm prescriberNihii:(NSString * _Nullable)prescriberNihii relatedCode:(NSString * _Nullable)relatedCode prescriptionDate:(CDSSLLong * _Nullable)prescriptionDate derogationMaxNumber:(CDSSLInt * _Nullable)derogationMaxNumber prescriberSsin:(NSString * _Nullable)prescriberSsin prescriberLastName:(NSString * _Nullable)prescriberLastName prescriberFirstName:(NSString * _Nullable)prescriberFirstName prescriberCdHcParty:(NSString * _Nullable)prescriberCdHcParty locationNihii:(NSString * _Nullable)locationNihii locationCdHcParty:(NSString * _Nullable)locationCdHcParty locationService:(CDSSLInt * _Nullable)locationService admissionDate:(CDSSLLong * _Nullable)admissionDate canceled:(CDSSLBoolean * _Nullable)canceled accepted:(CDSSLBoolean * _Nullable)accepted pending:(CDSSLBoolean * _Nullable)pending resent:(CDSSLBoolean * _Nullable)resent archived:(CDSSLBoolean * _Nullable)archived lost:(CDSSLBoolean * _Nullable)lost insuranceJustification:(CDSSLInt * _Nullable)insuranceJustification cancelPatientInterventionReason:(CDSSLInt * _Nullable)cancelPatientInterventionReason status:(CDSSLLong * _Nullable)status encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(id:dateCode:logicalId:label:userId:contactId:serviceId:tarificationId:code:paymentType:paid:totalAmount:reimbursement:patientIntervention:doctorSupplement:conventionAmount:vat:error:contract:contractDate:units:side:timeOfDay:eidReadingHour:eidReadingValue:override3rdPayerCode:override3rdPayerReason:transplantationCode:prescriberNorm:percentNorm:prescriberNihii:relatedCode:prescriptionDate:derogationMaxNumber:prescriberSsin:prescriberLastName:prescriberFirstName:prescriberCdHcParty:locationNihii:locationCdHcParty:locationService:admissionDate:canceled:accepted:pending:resent:archived:lost:insuranceJustification:cancelPatientInterventionReason:status:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedInvoicingCodeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedInvoicingCode *)doCopyId:(NSString * _Nullable)id dateCode:(CDSSLLong * _Nullable)dateCode logicalId:(NSString * _Nullable)logicalId label:(NSString * _Nullable)label userId:(NSString * _Nullable)userId contactId:(NSString * _Nullable)contactId serviceId:(NSString * _Nullable)serviceId tarificationId:(NSString * _Nullable)tarificationId code:(NSString * _Nullable)code paymentType:(CDSSLCardinal_sdkPaymentType * _Nullable)paymentType paid:(CDSSLDouble * _Nullable)paid totalAmount:(CDSSLDouble * _Nullable)totalAmount reimbursement:(CDSSLDouble * _Nullable)reimbursement patientIntervention:(CDSSLDouble * _Nullable)patientIntervention doctorSupplement:(CDSSLDouble * _Nullable)doctorSupplement conventionAmount:(CDSSLDouble * _Nullable)conventionAmount vat:(CDSSLDouble * _Nullable)vat error:(NSString * _Nullable)error contract:(NSString * _Nullable)contract contractDate:(CDSSLLong * _Nullable)contractDate units:(CDSSLInt * _Nullable)units side:(CDSSLInt * _Nullable)side timeOfDay:(CDSSLInt * _Nullable)timeOfDay eidReadingHour:(CDSSLInt * _Nullable)eidReadingHour eidReadingValue:(NSString * _Nullable)eidReadingValue override3rdPayerCode:(CDSSLInt * _Nullable)override3rdPayerCode override3rdPayerReason:(NSString * _Nullable)override3rdPayerReason transplantationCode:(CDSSLInt * _Nullable)transplantationCode prescriberNorm:(CDSSLInt * _Nullable)prescriberNorm percentNorm:(CDSSLInt * _Nullable)percentNorm prescriberNihii:(NSString * _Nullable)prescriberNihii relatedCode:(NSString * _Nullable)relatedCode prescriptionDate:(CDSSLLong * _Nullable)prescriptionDate derogationMaxNumber:(CDSSLInt * _Nullable)derogationMaxNumber prescriberSsin:(NSString * _Nullable)prescriberSsin prescriberLastName:(NSString * _Nullable)prescriberLastName prescriberFirstName:(NSString * _Nullable)prescriberFirstName prescriberCdHcParty:(NSString * _Nullable)prescriberCdHcParty locationNihii:(NSString * _Nullable)locationNihii locationCdHcParty:(NSString * _Nullable)locationCdHcParty locationService:(CDSSLInt * _Nullable)locationService admissionDate:(CDSSLLong * _Nullable)admissionDate canceled:(CDSSLBoolean * _Nullable)canceled accepted:(CDSSLBoolean * _Nullable)accepted pending:(CDSSLBoolean * _Nullable)pending resent:(CDSSLBoolean * _Nullable)resent archived:(CDSSLBoolean * _Nullable)archived lost:(CDSSLBoolean * _Nullable)lost insuranceJustification:(CDSSLInt * _Nullable)insuranceJustification cancelPatientInterventionReason:(CDSSLInt * _Nullable)cancelPatientInterventionReason status:(CDSSLLong * _Nullable)status encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(id:dateCode:logicalId:label:userId:contactId:serviceId:tarificationId:code:paymentType:paid:totalAmount:reimbursement:patientIntervention:doctorSupplement:conventionAmount:vat:error:contract:contractDate:units:side:timeOfDay:eidReadingHour:eidReadingValue:override3rdPayerCode:override3rdPayerReason:transplantationCode:prescriberNorm:percentNorm:prescriberNihii:relatedCode:prescriptionDate:derogationMaxNumber:prescriberSsin:prescriberLastName:prescriberFirstName:prescriberCdHcParty:locationNihii:locationCdHcParty:locationService:admissionDate:canceled:accepted:pending:resent:archived:lost:insuranceJustification:cancelPatientInterventionReason:status:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable accepted __attribute__((swift_name("accepted")));
@property (readonly) CDSSLLong * _Nullable admissionDate __attribute__((swift_name("admissionDate")));
@property (readonly) CDSSLBoolean * _Nullable archived __attribute__((swift_name("archived")));
@property (readonly) CDSSLInt * _Nullable cancelPatientInterventionReason __attribute__((swift_name("cancelPatientInterventionReason")));
@property (readonly) CDSSLBoolean * _Nullable canceled __attribute__((swift_name("canceled")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) NSString * _Nullable contactId __attribute__((swift_name("contactId")));
@property (readonly) NSString * _Nullable contract __attribute__((swift_name("contract")));
@property (readonly) CDSSLLong * _Nullable contractDate __attribute__((swift_name("contractDate")));
@property (readonly) CDSSLDouble * _Nullable conventionAmount __attribute__((swift_name("conventionAmount")));
@property (readonly) CDSSLLong * _Nullable dateCode __attribute__((swift_name("dateCode")));
@property (readonly) CDSSLInt * _Nullable derogationMaxNumber __attribute__((swift_name("derogationMaxNumber")));
@property (readonly) CDSSLDouble * _Nullable doctorSupplement __attribute__((swift_name("doctorSupplement")));
@property (readonly) CDSSLInt * _Nullable eidReadingHour __attribute__((swift_name("eidReadingHour")));
@property (readonly) NSString * _Nullable eidReadingValue __attribute__((swift_name("eidReadingValue")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) NSString * _Nullable id __attribute__((swift_name("id")));
@property (readonly) CDSSLInt * _Nullable insuranceJustification __attribute__((swift_name("insuranceJustification")));
@property (readonly) NSString * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSString * _Nullable locationCdHcParty __attribute__((swift_name("locationCdHcParty")));
@property (readonly) NSString * _Nullable locationNihii __attribute__((swift_name("locationNihii")));
@property (readonly) CDSSLInt * _Nullable locationService __attribute__((swift_name("locationService")));
@property (readonly) NSString * _Nullable logicalId __attribute__((swift_name("logicalId")));
@property (readonly) CDSSLBoolean * _Nullable lost __attribute__((swift_name("lost")));
@property (readonly) CDSSLInt * _Nullable override3rdPayerCode __attribute__((swift_name("override3rdPayerCode")));
@property (readonly) NSString * _Nullable override3rdPayerReason __attribute__((swift_name("override3rdPayerReason")));
@property (readonly) CDSSLDouble * _Nullable paid __attribute__((swift_name("paid")));
@property (readonly) CDSSLDouble * _Nullable patientIntervention __attribute__((swift_name("patientIntervention")));
@property (readonly) CDSSLCardinal_sdkPaymentType * _Nullable paymentType __attribute__((swift_name("paymentType")));
@property (readonly) CDSSLBoolean * _Nullable pending __attribute__((swift_name("pending")));
@property (readonly) CDSSLInt * _Nullable percentNorm __attribute__((swift_name("percentNorm")));
@property (readonly) NSString * _Nullable prescriberCdHcParty __attribute__((swift_name("prescriberCdHcParty")));
@property (readonly) NSString * _Nullable prescriberFirstName __attribute__((swift_name("prescriberFirstName")));
@property (readonly) NSString * _Nullable prescriberLastName __attribute__((swift_name("prescriberLastName")));
@property (readonly) NSString * _Nullable prescriberNihii __attribute__((swift_name("prescriberNihii")));
@property (readonly) CDSSLInt * _Nullable prescriberNorm __attribute__((swift_name("prescriberNorm")));
@property (readonly) NSString * _Nullable prescriberSsin __attribute__((swift_name("prescriberSsin")));
@property (readonly) CDSSLLong * _Nullable prescriptionDate __attribute__((swift_name("prescriptionDate")));
@property (readonly) CDSSLDouble * _Nullable reimbursement __attribute__((swift_name("reimbursement")));
@property (readonly) NSString * _Nullable relatedCode __attribute__((swift_name("relatedCode")));
@property (readonly) CDSSLBoolean * _Nullable resent __attribute__((swift_name("resent")));
@property (readonly) NSString * _Nullable serviceId __attribute__((swift_name("serviceId")));
@property (readonly) CDSSLInt * _Nullable side __attribute__((swift_name("side")));
@property (readonly) CDSSLLong * _Nullable status __attribute__((swift_name("status")));
@property (readonly) NSString * _Nullable tarificationId __attribute__((swift_name("tarificationId")));
@property (readonly) CDSSLInt * _Nullable timeOfDay __attribute__((swift_name("timeOfDay")));
@property (readonly) CDSSLDouble * _Nullable totalAmount __attribute__((swift_name("totalAmount")));
@property (readonly) CDSSLInt * _Nullable transplantationCode __attribute__((swift_name("transplantationCode")));
@property (readonly) CDSSLInt * _Nullable units __attribute__((swift_name("units")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@property (readonly) CDSSLDouble * _Nullable vat __attribute__((swift_name("vat")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedInvoice.Companion")))
@interface CDSSLCardinal_sdkDecryptedInvoiceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedInvoiceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedInvoice.Companion")))
@interface CDSSLCardinal_sdkEncryptedInvoiceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedInvoiceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkInvoiceShareOptions.Companion")))
@interface CDSSLCardinal_sdkInvoiceShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkInvoiceShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedInvoicingCode.Companion")))
@interface CDSSLCardinal_sdkEncryptedInvoicingCodeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedInvoicingCodeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMediumType.Companion")))
@interface CDSSLCardinal_sdkMediumTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMediumTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkInvoiceType.Companion")))
@interface CDSSLCardinal_sdkInvoiceTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkInvoiceTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTaskStatus")))
@interface CDSSLCardinal_sdkTaskStatus : CDSSLKotlinEnum<CDSSLCardinal_sdkTaskStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTaskStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkTaskStatus *pending __attribute__((swift_name("pending")));
@property (class, readonly) CDSSLCardinal_sdkTaskStatus *ongoing __attribute__((swift_name("ongoing")));
@property (class, readonly) CDSSLCardinal_sdkTaskStatus *cancelled __attribute__((swift_name("cancelled")));
@property (class, readonly) CDSSLCardinal_sdkTaskStatus *completed __attribute__((swift_name("completed")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkTaskStatus *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkTaskStatus *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedMaintenanceTask.Companion")))
@interface CDSSLCardinal_sdkDecryptedMaintenanceTaskCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedMaintenanceTaskCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedMaintenanceTask.Companion")))
@interface CDSSLCardinal_sdkEncryptedMaintenanceTaskCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedMaintenanceTaskCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMaintenanceTaskShareOptions.Companion")))
@interface CDSSLCardinal_sdkMaintenanceTaskShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMaintenanceTaskShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedMessage.Companion")))
@interface CDSSLCardinal_sdkDecryptedMessageCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedMessageCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedMessage.Companion")))
@interface CDSSLCardinal_sdkEncryptedMessageCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedMessageCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMessageShareOptions.Companion")))
@interface CDSSLCardinal_sdkMessageShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMessageShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedInsurability")))
@interface CDSSLCardinal_sdkDecryptedInsurability : CDSSLBase <CDSSLCardinal_sdkInsurability>
- (instancetype)initWithParameters:(NSDictionary<NSString *, NSString *> *)parameters hospitalisation:(CDSSLBoolean * _Nullable)hospitalisation ambulatory:(CDSSLBoolean * _Nullable)ambulatory dental:(CDSSLBoolean * _Nullable)dental identificationNumber:(NSString * _Nullable)identificationNumber insuranceId:(NSString * _Nullable)insuranceId startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate titularyId:(NSString * _Nullable)titularyId encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(parameters:hospitalisation:ambulatory:dental:identificationNumber:insuranceId:startDate:endDate:titularyId:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedInsurabilityCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedInsurability *)doCopyParameters:(NSDictionary<NSString *, NSString *> *)parameters hospitalisation:(CDSSLBoolean * _Nullable)hospitalisation ambulatory:(CDSSLBoolean * _Nullable)ambulatory dental:(CDSSLBoolean * _Nullable)dental identificationNumber:(NSString * _Nullable)identificationNumber insuranceId:(NSString * _Nullable)insuranceId startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate titularyId:(NSString * _Nullable)titularyId encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(parameters:hospitalisation:ambulatory:dental:identificationNumber:insuranceId:startDate:endDate:titularyId:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable ambulatory __attribute__((swift_name("ambulatory")));
@property (readonly) CDSSLBoolean * _Nullable dental __attribute__((swift_name("dental")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) CDSSLBoolean * _Nullable hospitalisation __attribute__((swift_name("hospitalisation")));
@property (readonly) NSString * _Nullable identificationNumber __attribute__((swift_name("identificationNumber")));
@property (readonly) NSString * _Nullable insuranceId __attribute__((swift_name("insuranceId")));
@property (readonly) NSDictionary<NSString *, NSString *> *parameters __attribute__((swift_name("parameters")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString * _Nullable titularyId __attribute__((swift_name("titularyId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedPatientHealthCareParty")))
@interface CDSSLCardinal_sdkDecryptedPatientHealthCareParty : CDSSLBase <CDSSLCardinal_sdkPatientHealthCareParty>
- (instancetype)initWithType:(CDSSLCardinal_sdkPatientHealthCarePartyType * _Nullable)type healthcarePartyId:(NSString * _Nullable)healthcarePartyId sendFormats:(NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *)sendFormats referralPeriods:(NSArray<CDSSLCardinal_sdkReferralPeriod *> *)referralPeriods referral:(BOOL)referral encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(type:healthcarePartyId:sendFormats:referralPeriods:referral:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedPatientHealthCarePartyCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedPatientHealthCareParty *)doCopyType:(CDSSLCardinal_sdkPatientHealthCarePartyType * _Nullable)type healthcarePartyId:(NSString * _Nullable)healthcarePartyId sendFormats:(NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *)sendFormats referralPeriods:(NSArray<CDSSLCardinal_sdkReferralPeriod *> *)referralPeriods referral:(BOOL)referral encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(type:healthcarePartyId:sendFormats:referralPeriods:referral:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) BOOL referral __attribute__((swift_name("referral")));
@property (readonly) NSArray<CDSSLCardinal_sdkReferralPeriod *> *referralPeriods __attribute__((swift_name("referralPeriods")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *sendFormats __attribute__((swift_name("sendFormats")));
@property (readonly) CDSSLCardinal_sdkPatientHealthCarePartyType * _Nullable type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedFinancialInstitutionInformation")))
@interface CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation : CDSSLBase <CDSSLCardinal_sdkFinancialInstitutionInformation>
- (instancetype)initWithName:(NSString * _Nullable)name key:(NSString * _Nullable)key bankAccount:(NSString * _Nullable)bankAccount bic:(NSString * _Nullable)bic proxyBankAccount:(NSString * _Nullable)proxyBankAccount proxyBic:(NSString * _Nullable)proxyBic preferredFiiForPartners:(NSSet<NSString *> *)preferredFiiForPartners encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(name:key:bankAccount:bic:proxyBankAccount:proxyBic:preferredFiiForPartners:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedFinancialInstitutionInformationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedFinancialInstitutionInformation *)doCopyName:(NSString * _Nullable)name key:(NSString * _Nullable)key bankAccount:(NSString * _Nullable)bankAccount bic:(NSString * _Nullable)bic proxyBankAccount:(NSString * _Nullable)proxyBankAccount proxyBic:(NSString * _Nullable)proxyBic preferredFiiForPartners:(NSSet<NSString *> *)preferredFiiForPartners encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(name:key:bankAccount:bic:proxyBankAccount:proxyBic:preferredFiiForPartners:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable bankAccount __attribute__((swift_name("bankAccount")));
@property (readonly) NSString * _Nullable bic __attribute__((swift_name("bic")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSSet<NSString *> *preferredFiiForPartners __attribute__((swift_name("preferredFiiForPartners")));
@property (readonly) NSString * _Nullable proxyBankAccount __attribute__((swift_name("proxyBankAccount")));
@property (readonly) NSString * _Nullable proxyBic __attribute__((swift_name("proxyBic")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedMedicalHouseContract")))
@interface CDSSLCardinal_sdkDecryptedMedicalHouseContract : CDSSLBase <CDSSLCardinal_sdkMedicalHouseContract>
- (instancetype)initWithContractId:(NSString * _Nullable)contractId validFrom:(CDSSLLong * _Nullable)validFrom validTo:(CDSSLLong * _Nullable)validTo mmNihii:(NSString * _Nullable)mmNihii hcpId:(NSString * _Nullable)hcpId changeType:(CDSSLCardinal_sdkContractChangeType * _Nullable)changeType parentContractId:(NSString * _Nullable)parentContractId changedBy:(NSString * _Nullable)changedBy startOfContract:(CDSSLLong * _Nullable)startOfContract startOfCoverage:(CDSSLLong * _Nullable)startOfCoverage endOfContract:(CDSSLLong * _Nullable)endOfContract endOfCoverage:(CDSSLLong * _Nullable)endOfCoverage kine:(BOOL)kine gp:(BOOL)gp ptd:(BOOL)ptd nurse:(BOOL)nurse noKine:(BOOL)noKine noGp:(BOOL)noGp noNurse:(BOOL)noNurse unsubscriptionReasonId:(CDSSLInt * _Nullable)unsubscriptionReasonId ptdStart:(CDSSLLong * _Nullable)ptdStart ptdEnd:(CDSSLLong * _Nullable)ptdEnd ptdLastInvoiced:(CDSSLLong * _Nullable)ptdLastInvoiced startOfSuspension:(CDSSLLong * _Nullable)startOfSuspension endOfSuspension:(CDSSLLong * _Nullable)endOfSuspension suspensionReason:(CDSSLCardinal_sdkSuspensionReason * _Nullable)suspensionReason suspensionSource:(NSString * _Nullable)suspensionSource forcedSuspension:(BOOL)forcedSuspension signatureType:(CDSSLCardinal_sdkMhcSignatureType * _Nullable)signatureType status:(CDSSLInt * _Nullable)status options:(NSDictionary<NSString *, NSString *> *)options receipts:(NSDictionary<NSString *, NSString *> *)receipts encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(contractId:validFrom:validTo:mmNihii:hcpId:changeType:parentContractId:changedBy:startOfContract:startOfCoverage:endOfContract:endOfCoverage:kine:gp:ptd:nurse:noKine:noGp:noNurse:unsubscriptionReasonId:ptdStart:ptdEnd:ptdLastInvoiced:startOfSuspension:endOfSuspension:suspensionReason:suspensionSource:forcedSuspension:signatureType:status:options:receipts:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedMedicalHouseContractCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedMedicalHouseContract *)doCopyContractId:(NSString * _Nullable)contractId validFrom:(CDSSLLong * _Nullable)validFrom validTo:(CDSSLLong * _Nullable)validTo mmNihii:(NSString * _Nullable)mmNihii hcpId:(NSString * _Nullable)hcpId changeType:(CDSSLCardinal_sdkContractChangeType * _Nullable)changeType parentContractId:(NSString * _Nullable)parentContractId changedBy:(NSString * _Nullable)changedBy startOfContract:(CDSSLLong * _Nullable)startOfContract startOfCoverage:(CDSSLLong * _Nullable)startOfCoverage endOfContract:(CDSSLLong * _Nullable)endOfContract endOfCoverage:(CDSSLLong * _Nullable)endOfCoverage kine:(BOOL)kine gp:(BOOL)gp ptd:(BOOL)ptd nurse:(BOOL)nurse noKine:(BOOL)noKine noGp:(BOOL)noGp noNurse:(BOOL)noNurse unsubscriptionReasonId:(CDSSLInt * _Nullable)unsubscriptionReasonId ptdStart:(CDSSLLong * _Nullable)ptdStart ptdEnd:(CDSSLLong * _Nullable)ptdEnd ptdLastInvoiced:(CDSSLLong * _Nullable)ptdLastInvoiced startOfSuspension:(CDSSLLong * _Nullable)startOfSuspension endOfSuspension:(CDSSLLong * _Nullable)endOfSuspension suspensionReason:(CDSSLCardinal_sdkSuspensionReason * _Nullable)suspensionReason suspensionSource:(NSString * _Nullable)suspensionSource forcedSuspension:(BOOL)forcedSuspension signatureType:(CDSSLCardinal_sdkMhcSignatureType * _Nullable)signatureType status:(CDSSLInt * _Nullable)status options:(NSDictionary<NSString *, NSString *> *)options receipts:(NSDictionary<NSString *, NSString *> *)receipts encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(contractId:validFrom:validTo:mmNihii:hcpId:changeType:parentContractId:changedBy:startOfContract:startOfCoverage:endOfContract:endOfCoverage:kine:gp:ptd:nurse:noKine:noGp:noNurse:unsubscriptionReasonId:ptdStart:ptdEnd:ptdLastInvoiced:startOfSuspension:endOfSuspension:suspensionReason:suspensionSource:forcedSuspension:signatureType:status:options:receipts:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkContractChangeType * _Nullable changeType __attribute__((swift_name("changeType")));
@property (readonly) NSString * _Nullable changedBy __attribute__((swift_name("changedBy")));
@property (readonly) NSString * _Nullable contractId __attribute__((swift_name("contractId")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endOfContract __attribute__((swift_name("endOfContract")));
@property (readonly) CDSSLLong * _Nullable endOfCoverage __attribute__((swift_name("endOfCoverage")));
@property (readonly) CDSSLLong * _Nullable endOfSuspension __attribute__((swift_name("endOfSuspension")));
@property (readonly) BOOL forcedSuspension __attribute__((swift_name("forcedSuspension")));
@property (readonly) BOOL gp __attribute__((swift_name("gp")));
@property (readonly) NSString * _Nullable hcpId __attribute__((swift_name("hcpId")));
@property (readonly) BOOL kine __attribute__((swift_name("kine")));
@property (readonly) NSString * _Nullable mmNihii __attribute__((swift_name("mmNihii")));
@property (readonly) BOOL noGp __attribute__((swift_name("noGp")));
@property (readonly) BOOL noKine __attribute__((swift_name("noKine")));
@property (readonly) BOOL noNurse __attribute__((swift_name("noNurse")));
@property (readonly) BOOL nurse __attribute__((swift_name("nurse")));
@property (readonly) NSDictionary<NSString *, NSString *> *options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable parentContractId __attribute__((swift_name("parentContractId")));
@property (readonly) BOOL ptd __attribute__((swift_name("ptd")));
@property (readonly) CDSSLLong * _Nullable ptdEnd __attribute__((swift_name("ptdEnd")));
@property (readonly) CDSSLLong * _Nullable ptdLastInvoiced __attribute__((swift_name("ptdLastInvoiced")));
@property (readonly) CDSSLLong * _Nullable ptdStart __attribute__((swift_name("ptdStart")));
@property (readonly) NSDictionary<NSString *, NSString *> *receipts __attribute__((swift_name("receipts")));
@property (readonly) CDSSLCardinal_sdkMhcSignatureType * _Nullable signatureType __attribute__((swift_name("signatureType")));
@property (readonly) CDSSLLong * _Nullable startOfContract __attribute__((swift_name("startOfContract")));
@property (readonly) CDSSLLong * _Nullable startOfCoverage __attribute__((swift_name("startOfCoverage")));
@property (readonly) CDSSLLong * _Nullable startOfSuspension __attribute__((swift_name("startOfSuspension")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) CDSSLCardinal_sdkSuspensionReason * _Nullable suspensionReason __attribute__((swift_name("suspensionReason")));
@property (readonly) NSString * _Nullable suspensionSource __attribute__((swift_name("suspensionSource")));
@property (readonly) CDSSLInt * _Nullable unsubscriptionReasonId __attribute__((swift_name("unsubscriptionReasonId")));
@property (readonly) CDSSLLong * _Nullable validFrom __attribute__((swift_name("validFrom")));
@property (readonly) CDSSLLong * _Nullable validTo __attribute__((swift_name("validTo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedPatient.Companion")))
@interface CDSSLCardinal_sdkDecryptedPatientCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedPatientCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIdWithRev.Companion")))
@interface CDSSLCardinal_sdkIdWithRevCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkIdWithRevCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedInsurability")))
@interface CDSSLCardinal_sdkEncryptedInsurability : CDSSLBase <CDSSLCardinal_sdkInsurability>
- (instancetype)initWithParameters:(NSDictionary<NSString *, NSString *> *)parameters hospitalisation:(CDSSLBoolean * _Nullable)hospitalisation ambulatory:(CDSSLBoolean * _Nullable)ambulatory dental:(CDSSLBoolean * _Nullable)dental identificationNumber:(NSString * _Nullable)identificationNumber insuranceId:(NSString * _Nullable)insuranceId startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate titularyId:(NSString * _Nullable)titularyId encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(parameters:hospitalisation:ambulatory:dental:identificationNumber:insuranceId:startDate:endDate:titularyId:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedInsurabilityCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedInsurability *)doCopyParameters:(NSDictionary<NSString *, NSString *> *)parameters hospitalisation:(CDSSLBoolean * _Nullable)hospitalisation ambulatory:(CDSSLBoolean * _Nullable)ambulatory dental:(CDSSLBoolean * _Nullable)dental identificationNumber:(NSString * _Nullable)identificationNumber insuranceId:(NSString * _Nullable)insuranceId startDate:(CDSSLLong * _Nullable)startDate endDate:(CDSSLLong * _Nullable)endDate titularyId:(NSString * _Nullable)titularyId encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(parameters:hospitalisation:ambulatory:dental:identificationNumber:insuranceId:startDate:endDate:titularyId:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable ambulatory __attribute__((swift_name("ambulatory")));
@property (readonly) CDSSLBoolean * _Nullable dental __attribute__((swift_name("dental")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endDate __attribute__((swift_name("endDate")));
@property (readonly) CDSSLBoolean * _Nullable hospitalisation __attribute__((swift_name("hospitalisation")));
@property (readonly) NSString * _Nullable identificationNumber __attribute__((swift_name("identificationNumber")));
@property (readonly) NSString * _Nullable insuranceId __attribute__((swift_name("insuranceId")));
@property (readonly) NSDictionary<NSString *, NSString *> *parameters __attribute__((swift_name("parameters")));
@property (readonly) CDSSLLong * _Nullable startDate __attribute__((swift_name("startDate")));
@property (readonly) NSString * _Nullable titularyId __attribute__((swift_name("titularyId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedPatientHealthCareParty")))
@interface CDSSLCardinal_sdkEncryptedPatientHealthCareParty : CDSSLBase <CDSSLCardinal_sdkPatientHealthCareParty>
- (instancetype)initWithType:(CDSSLCardinal_sdkPatientHealthCarePartyType * _Nullable)type healthcarePartyId:(NSString * _Nullable)healthcarePartyId sendFormats:(NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *)sendFormats referralPeriods:(NSArray<CDSSLCardinal_sdkReferralPeriod *> *)referralPeriods referral:(BOOL)referral encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(type:healthcarePartyId:sendFormats:referralPeriods:referral:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedPatientHealthCarePartyCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedPatientHealthCareParty *)doCopyType:(CDSSLCardinal_sdkPatientHealthCarePartyType * _Nullable)type healthcarePartyId:(NSString * _Nullable)healthcarePartyId sendFormats:(NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *)sendFormats referralPeriods:(NSArray<CDSSLCardinal_sdkReferralPeriod *> *)referralPeriods referral:(BOOL)referral encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(type:healthcarePartyId:sendFormats:referralPeriods:referral:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable healthcarePartyId __attribute__((swift_name("healthcarePartyId")));
@property (readonly) BOOL referral __attribute__((swift_name("referral")));
@property (readonly) NSArray<CDSSLCardinal_sdkReferralPeriod *> *referralPeriods __attribute__((swift_name("referralPeriods")));
@property (readonly) NSDictionary<CDSSLCardinal_sdkTelecomType *, NSString *> *sendFormats __attribute__((swift_name("sendFormats")));
@property (readonly) CDSSLCardinal_sdkPatientHealthCarePartyType * _Nullable type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedFinancialInstitutionInformation")))
@interface CDSSLCardinal_sdkEncryptedFinancialInstitutionInformation : CDSSLBase <CDSSLCardinal_sdkFinancialInstitutionInformation>
- (instancetype)initWithName:(NSString * _Nullable)name key:(NSString * _Nullable)key bankAccount:(NSString * _Nullable)bankAccount bic:(NSString * _Nullable)bic proxyBankAccount:(NSString * _Nullable)proxyBankAccount proxyBic:(NSString * _Nullable)proxyBic preferredFiiForPartners:(NSSet<NSString *> *)preferredFiiForPartners encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(name:key:bankAccount:bic:proxyBankAccount:proxyBic:preferredFiiForPartners:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedFinancialInstitutionInformationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedFinancialInstitutionInformation *)doCopyName:(NSString * _Nullable)name key:(NSString * _Nullable)key bankAccount:(NSString * _Nullable)bankAccount bic:(NSString * _Nullable)bic proxyBankAccount:(NSString * _Nullable)proxyBankAccount proxyBic:(NSString * _Nullable)proxyBic preferredFiiForPartners:(NSSet<NSString *> *)preferredFiiForPartners encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(name:key:bankAccount:bic:proxyBankAccount:proxyBic:preferredFiiForPartners:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable bankAccount __attribute__((swift_name("bankAccount")));
@property (readonly) NSString * _Nullable bic __attribute__((swift_name("bic")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable key __attribute__((swift_name("key")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSSet<NSString *> *preferredFiiForPartners __attribute__((swift_name("preferredFiiForPartners")));
@property (readonly) NSString * _Nullable proxyBankAccount __attribute__((swift_name("proxyBankAccount")));
@property (readonly) NSString * _Nullable proxyBic __attribute__((swift_name("proxyBic")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedMedicalHouseContract")))
@interface CDSSLCardinal_sdkEncryptedMedicalHouseContract : CDSSLBase <CDSSLCardinal_sdkMedicalHouseContract>
- (instancetype)initWithContractId:(NSString * _Nullable)contractId validFrom:(CDSSLLong * _Nullable)validFrom validTo:(CDSSLLong * _Nullable)validTo mmNihii:(NSString * _Nullable)mmNihii hcpId:(NSString * _Nullable)hcpId changeType:(CDSSLCardinal_sdkContractChangeType * _Nullable)changeType parentContractId:(NSString * _Nullable)parentContractId changedBy:(NSString * _Nullable)changedBy startOfContract:(CDSSLLong * _Nullable)startOfContract startOfCoverage:(CDSSLLong * _Nullable)startOfCoverage endOfContract:(CDSSLLong * _Nullable)endOfContract endOfCoverage:(CDSSLLong * _Nullable)endOfCoverage kine:(BOOL)kine gp:(BOOL)gp ptd:(BOOL)ptd nurse:(BOOL)nurse noKine:(BOOL)noKine noGp:(BOOL)noGp noNurse:(BOOL)noNurse unsubscriptionReasonId:(CDSSLInt * _Nullable)unsubscriptionReasonId ptdStart:(CDSSLLong * _Nullable)ptdStart ptdEnd:(CDSSLLong * _Nullable)ptdEnd ptdLastInvoiced:(CDSSLLong * _Nullable)ptdLastInvoiced startOfSuspension:(CDSSLLong * _Nullable)startOfSuspension endOfSuspension:(CDSSLLong * _Nullable)endOfSuspension suspensionReason:(CDSSLCardinal_sdkSuspensionReason * _Nullable)suspensionReason suspensionSource:(NSString * _Nullable)suspensionSource forcedSuspension:(BOOL)forcedSuspension signatureType:(CDSSLCardinal_sdkMhcSignatureType * _Nullable)signatureType status:(CDSSLInt * _Nullable)status options:(NSDictionary<NSString *, NSString *> *)options receipts:(NSDictionary<NSString *, NSString *> *)receipts encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(contractId:validFrom:validTo:mmNihii:hcpId:changeType:parentContractId:changedBy:startOfContract:startOfCoverage:endOfContract:endOfCoverage:kine:gp:ptd:nurse:noKine:noGp:noNurse:unsubscriptionReasonId:ptdStart:ptdEnd:ptdLastInvoiced:startOfSuspension:endOfSuspension:suspensionReason:suspensionSource:forcedSuspension:signatureType:status:options:receipts:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedMedicalHouseContractCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedMedicalHouseContract *)doCopyContractId:(NSString * _Nullable)contractId validFrom:(CDSSLLong * _Nullable)validFrom validTo:(CDSSLLong * _Nullable)validTo mmNihii:(NSString * _Nullable)mmNihii hcpId:(NSString * _Nullable)hcpId changeType:(CDSSLCardinal_sdkContractChangeType * _Nullable)changeType parentContractId:(NSString * _Nullable)parentContractId changedBy:(NSString * _Nullable)changedBy startOfContract:(CDSSLLong * _Nullable)startOfContract startOfCoverage:(CDSSLLong * _Nullable)startOfCoverage endOfContract:(CDSSLLong * _Nullable)endOfContract endOfCoverage:(CDSSLLong * _Nullable)endOfCoverage kine:(BOOL)kine gp:(BOOL)gp ptd:(BOOL)ptd nurse:(BOOL)nurse noKine:(BOOL)noKine noGp:(BOOL)noGp noNurse:(BOOL)noNurse unsubscriptionReasonId:(CDSSLInt * _Nullable)unsubscriptionReasonId ptdStart:(CDSSLLong * _Nullable)ptdStart ptdEnd:(CDSSLLong * _Nullable)ptdEnd ptdLastInvoiced:(CDSSLLong * _Nullable)ptdLastInvoiced startOfSuspension:(CDSSLLong * _Nullable)startOfSuspension endOfSuspension:(CDSSLLong * _Nullable)endOfSuspension suspensionReason:(CDSSLCardinal_sdkSuspensionReason * _Nullable)suspensionReason suspensionSource:(NSString * _Nullable)suspensionSource forcedSuspension:(BOOL)forcedSuspension signatureType:(CDSSLCardinal_sdkMhcSignatureType * _Nullable)signatureType status:(CDSSLInt * _Nullable)status options:(NSDictionary<NSString *, NSString *> *)options receipts:(NSDictionary<NSString *, NSString *> *)receipts encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(contractId:validFrom:validTo:mmNihii:hcpId:changeType:parentContractId:changedBy:startOfContract:startOfCoverage:endOfContract:endOfCoverage:kine:gp:ptd:nurse:noKine:noGp:noNurse:unsubscriptionReasonId:ptdStart:ptdEnd:ptdLastInvoiced:startOfSuspension:endOfSuspension:suspensionReason:suspensionSource:forcedSuspension:signatureType:status:options:receipts:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkContractChangeType * _Nullable changeType __attribute__((swift_name("changeType")));
@property (readonly) NSString * _Nullable changedBy __attribute__((swift_name("changedBy")));
@property (readonly) NSString * _Nullable contractId __attribute__((swift_name("contractId")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endOfContract __attribute__((swift_name("endOfContract")));
@property (readonly) CDSSLLong * _Nullable endOfCoverage __attribute__((swift_name("endOfCoverage")));
@property (readonly) CDSSLLong * _Nullable endOfSuspension __attribute__((swift_name("endOfSuspension")));
@property (readonly) BOOL forcedSuspension __attribute__((swift_name("forcedSuspension")));
@property (readonly) BOOL gp __attribute__((swift_name("gp")));
@property (readonly) NSString * _Nullable hcpId __attribute__((swift_name("hcpId")));
@property (readonly) BOOL kine __attribute__((swift_name("kine")));
@property (readonly) NSString * _Nullable mmNihii __attribute__((swift_name("mmNihii")));
@property (readonly) BOOL noGp __attribute__((swift_name("noGp")));
@property (readonly) BOOL noKine __attribute__((swift_name("noKine")));
@property (readonly) BOOL noNurse __attribute__((swift_name("noNurse")));
@property (readonly) BOOL nurse __attribute__((swift_name("nurse")));
@property (readonly) NSDictionary<NSString *, NSString *> *options __attribute__((swift_name("options")));
@property (readonly) NSString * _Nullable parentContractId __attribute__((swift_name("parentContractId")));
@property (readonly) BOOL ptd __attribute__((swift_name("ptd")));
@property (readonly) CDSSLLong * _Nullable ptdEnd __attribute__((swift_name("ptdEnd")));
@property (readonly) CDSSLLong * _Nullable ptdLastInvoiced __attribute__((swift_name("ptdLastInvoiced")));
@property (readonly) CDSSLLong * _Nullable ptdStart __attribute__((swift_name("ptdStart")));
@property (readonly) NSDictionary<NSString *, NSString *> *receipts __attribute__((swift_name("receipts")));
@property (readonly) CDSSLCardinal_sdkMhcSignatureType * _Nullable signatureType __attribute__((swift_name("signatureType")));
@property (readonly) CDSSLLong * _Nullable startOfContract __attribute__((swift_name("startOfContract")));
@property (readonly) CDSSLLong * _Nullable startOfCoverage __attribute__((swift_name("startOfCoverage")));
@property (readonly) CDSSLLong * _Nullable startOfSuspension __attribute__((swift_name("startOfSuspension")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) CDSSLCardinal_sdkSuspensionReason * _Nullable suspensionReason __attribute__((swift_name("suspensionReason")));
@property (readonly) NSString * _Nullable suspensionSource __attribute__((swift_name("suspensionSource")));
@property (readonly) CDSSLInt * _Nullable unsubscriptionReasonId __attribute__((swift_name("unsubscriptionReasonId")));
@property (readonly) CDSSLLong * _Nullable validFrom __attribute__((swift_name("validFrom")));
@property (readonly) CDSSLLong * _Nullable validTo __attribute__((swift_name("validTo")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedPatient.Companion")))
@interface CDSSLCardinal_sdkEncryptedPatientCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedPatientCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityWithEncryptionMetadataTypeName")))
@interface CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName : CDSSLKotlinEnum<CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeNameCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *article __attribute__((swift_name("article")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *accesslog __attribute__((swift_name("accesslog")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *calendaritem __attribute__((swift_name("calendaritem")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *classification __attribute__((swift_name("classification")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *classificationtemplate __attribute__((swift_name("classificationtemplate")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *contact __attribute__((swift_name("contact")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *service __attribute__((swift_name("service")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *document __attribute__((swift_name("document")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *form __attribute__((swift_name("form")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *healthelement __attribute__((swift_name("healthelement")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *invoice __attribute__((swift_name("invoice")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *maintenancetask __attribute__((swift_name("maintenancetask")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *message __attribute__((swift_name("message")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *patient __attribute__((swift_name("patient")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *receipt __attribute__((swift_name("receipt")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *timetable __attribute__((swift_name("timetable")));
@property (class, readonly) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *topic __attribute__((swift_name("topic")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeName *> *entries __attribute__((swift_name("entries")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityWithTypeInfoCompanion")))
@interface CDSSLCardinal_sdkEntityWithTypeInfoCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEntityWithTypeInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeSerial0:(id<CDSSLKotlinx_serialization_coreKSerializer>)typeSerial0 __attribute__((swift_name("serializer(typeSerial0:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptions.TagCompanion")))
@interface CDSSLCardinal_sdkShareAllPatientDataOptionsTagCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkShareAllPatientDataOptionsTagCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptions.ShareableEntity")))
@interface CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity : CDSSLKotlinEnum<CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntityCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *calendaritem __attribute__((swift_name("calendaritem")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *contact __attribute__((swift_name("contact")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *classification __attribute__((swift_name("classification")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *document __attribute__((swift_name("document")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *form __attribute__((swift_name("form")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *healthelement __attribute__((swift_name("healthelement")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *invoice __attribute__((swift_name("invoice")));
@property (class, readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *patient __attribute__((swift_name("patient")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntity *> *entries __attribute__((swift_name("entries")));
@property (readonly) CDSSLCardinal_sdkShareAllPatientDataOptionsTag *type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptions.EntityResult")))
@interface CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResult : CDSSLBase
- (instancetype)initWithSuccess:(CDSSLBoolean * _Nullable)success error:(id<CDSSLCardinal_sdkShareAllPatientDataOptionsSharePatientDataError> _Nullable)error modified:(int32_t)modified __attribute__((swift_name("init(success:error:modified:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResultCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResult *)doCopySuccess:(CDSSLBoolean * _Nullable)success error:(id<CDSSLCardinal_sdkShareAllPatientDataOptionsSharePatientDataError> _Nullable)error modified:(int32_t)modified __attribute__((swift_name("doCopy(success:error:modified:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLCardinal_sdkShareAllPatientDataOptionsSharePatientDataError> _Nullable error __attribute__((swift_name("error")));
@property (readonly) int32_t modified __attribute__((swift_name("modified")));
@property (readonly) CDSSLBoolean * _Nullable success __attribute__((swift_name("success")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptions.ResultCompanion")))
@interface CDSSLCardinal_sdkShareAllPatientDataOptionsResultCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkShareAllPatientDataOptionsResultCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityAccessInformation.Companion")))
@interface CDSSLCardinal_sdkEntityAccessInformationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEntityAccessInformationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPatientShareOptions.Companion")))
@interface CDSSLCardinal_sdkPatientShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPatientShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSortDirection.Companion")))
@interface CDSSLCardinal_sdkSortDirectionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSortDirectionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReceiptBlobType")))
@interface CDSSLCardinal_sdkReceiptBlobType : CDSSLKotlinEnum<CDSSLCardinal_sdkReceiptBlobType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReceiptBlobTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkReceiptBlobType *xades __attribute__((swift_name("xades")));
@property (class, readonly) CDSSLCardinal_sdkReceiptBlobType *kmehrrequest __attribute__((swift_name("kmehrrequest")));
@property (class, readonly) CDSSLCardinal_sdkReceiptBlobType *kmehrresponse __attribute__((swift_name("kmehrresponse")));
@property (class, readonly) CDSSLCardinal_sdkReceiptBlobType *soaprequest __attribute__((swift_name("soaprequest")));
@property (class, readonly) CDSSLCardinal_sdkReceiptBlobType *soapresponse __attribute__((swift_name("soapresponse")));
@property (class, readonly) CDSSLCardinal_sdkReceiptBlobType *soapconversation __attribute__((swift_name("soapconversation")));
@property (class, readonly) CDSSLCardinal_sdkReceiptBlobType *tack __attribute__((swift_name("tack")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkReceiptBlobType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkReceiptBlobType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedReceipt.Companion")))
@interface CDSSLCardinal_sdkDecryptedReceiptCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedReceiptCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedReceipt.Companion")))
@interface CDSSLCardinal_sdkEncryptedReceiptCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedReceiptCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReceiptShareOptions.Companion")))
@interface CDSSLCardinal_sdkReceiptShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReceiptShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRecoveryDataUseFailureReason.Companion")))
@interface CDSSLCardinal_sdkRecoveryDataUseFailureReasonCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRecoveryDataUseFailureReasonCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTimeTableItem")))
@interface CDSSLCardinal_sdkTimeTableItem : CDSSLBase
- (instancetype)initWithRruleStartDate:(CDSSLLong * _Nullable)rruleStartDate rrule:(NSString * _Nullable)rrule notBeforeInMinutes:(CDSSLInt * _Nullable)notBeforeInMinutes notAfterInMinutes:(CDSSLInt * _Nullable)notAfterInMinutes zoneId:(NSString * _Nullable)zoneId days:(NSArray<NSString *> *)days recurrenceTypes:(NSArray<NSString *> *)recurrenceTypes hours:(NSArray<CDSSLCardinal_sdkTimeTableHour *> *)hours calendarItemTypeId:(NSString * _Nullable)calendarItemTypeId homeVisit:(BOOL)homeVisit placeId:(NSString * _Nullable)placeId publicTimeTableItem:(BOOL)publicTimeTableItem acceptsNewPatient:(BOOL)acceptsNewPatient unavailable:(BOOL)unavailable __attribute__((swift_name("init(rruleStartDate:rrule:notBeforeInMinutes:notAfterInMinutes:zoneId:days:recurrenceTypes:hours:calendarItemTypeId:homeVisit:placeId:publicTimeTableItem:acceptsNewPatient:unavailable:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTimeTableItemCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkTimeTableItem *)doCopyRruleStartDate:(CDSSLLong * _Nullable)rruleStartDate rrule:(NSString * _Nullable)rrule notBeforeInMinutes:(CDSSLInt * _Nullable)notBeforeInMinutes notAfterInMinutes:(CDSSLInt * _Nullable)notAfterInMinutes zoneId:(NSString * _Nullable)zoneId days:(NSArray<NSString *> *)days recurrenceTypes:(NSArray<NSString *> *)recurrenceTypes hours:(NSArray<CDSSLCardinal_sdkTimeTableHour *> *)hours calendarItemTypeId:(NSString * _Nullable)calendarItemTypeId homeVisit:(BOOL)homeVisit placeId:(NSString * _Nullable)placeId publicTimeTableItem:(BOOL)publicTimeTableItem acceptsNewPatient:(BOOL)acceptsNewPatient unavailable:(BOOL)unavailable __attribute__((swift_name("doCopy(rruleStartDate:rrule:notBeforeInMinutes:notAfterInMinutes:zoneId:days:recurrenceTypes:hours:calendarItemTypeId:homeVisit:placeId:publicTimeTableItem:acceptsNewPatient:unavailable:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL acceptsNewPatient __attribute__((swift_name("acceptsNewPatient")));
@property (readonly) NSString * _Nullable calendarItemTypeId __attribute__((swift_name("calendarItemTypeId")));
@property (readonly) NSArray<NSString *> *days __attribute__((swift_name("days"))) __attribute__((deprecated("Will be replaced by rrule")));
@property (readonly) BOOL homeVisit __attribute__((swift_name("homeVisit")));
@property (readonly) NSArray<CDSSLCardinal_sdkTimeTableHour *> *hours __attribute__((swift_name("hours")));
@property (readonly) CDSSLInt * _Nullable notAfterInMinutes __attribute__((swift_name("notAfterInMinutes")));
@property (readonly) CDSSLInt * _Nullable notBeforeInMinutes __attribute__((swift_name("notBeforeInMinutes")));
@property (readonly) NSString * _Nullable placeId __attribute__((swift_name("placeId")));
@property (readonly) BOOL publicTimeTableItem __attribute__((swift_name("publicTimeTableItem")));
@property (readonly) NSArray<NSString *> *recurrenceTypes __attribute__((swift_name("recurrenceTypes"))) __attribute__((deprecated("Will be replaced by rrule")));
@property (readonly) NSString * _Nullable rrule __attribute__((swift_name("rrule")));
@property (readonly) CDSSLLong * _Nullable rruleStartDate __attribute__((swift_name("rruleStartDate")));
@property (readonly) BOOL unavailable __attribute__((swift_name("unavailable")));
@property (readonly) NSString * _Nullable zoneId __attribute__((swift_name("zoneId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedTimeTable.Companion")))
@interface CDSSLCardinal_sdkDecryptedTimeTableCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedTimeTableCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedTimeTable.Companion")))
@interface CDSSLCardinal_sdkEncryptedTimeTableCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedTimeTableCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTimeTableShareOptions.Companion")))
@interface CDSSLCardinal_sdkTimeTableShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTimeTableShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedTopic.Companion")))
@interface CDSSLCardinal_sdkDecryptedTopicCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedTopicCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedTopic.Companion")))
@interface CDSSLCardinal_sdkEncryptedTopicCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedTopicCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTopicShareOptions.Companion")))
@interface CDSSLCardinal_sdkTopicShareOptionsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTopicShareOptionsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTopicRole.Companion")))
@interface CDSSLCardinal_sdkTopicRoleCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTopicRoleCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRight")))
@interface CDSSLCardinal_sdkRight : CDSSLBase
- (instancetype)initWithUserId:(NSString * _Nullable)userId read:(BOOL)read write:(BOOL)write administration:(BOOL)administration __attribute__((swift_name("init(userId:read:write:administration:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRightCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRight *)doCopyUserId:(NSString * _Nullable)userId read:(BOOL)read write:(BOOL)write administration:(BOOL)administration __attribute__((swift_name("doCopy(userId:read:write:administration:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL administration __attribute__((swift_name("administration")));
@property (readonly) BOOL read __attribute__((swift_name("read")));
@property (readonly) NSString * _Nullable userId __attribute__((swift_name("userId")));
@property (readonly) BOOL write __attribute__((swift_name("write")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAgenda.Companion")))
@interface CDSSLCardinal_sdkAgendaCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAgendaCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkApplicationSettings.Companion")))
@interface CDSSLCardinal_sdkApplicationSettingsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkApplicationSettingsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPeriodicity")))
@interface CDSSLCardinal_sdkPeriodicity : CDSSLBase
- (instancetype)initWithRelatedCode:(CDSSLCardinal_sdkCodeStub * _Nullable)relatedCode relatedPeriodicity:(CDSSLCardinal_sdkCodeStub * _Nullable)relatedPeriodicity __attribute__((swift_name("init(relatedCode:relatedPeriodicity:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPeriodicityCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPeriodicity *)doCopyRelatedCode:(CDSSLCardinal_sdkCodeStub * _Nullable)relatedCode relatedPeriodicity:(CDSSLCardinal_sdkCodeStub * _Nullable)relatedPeriodicity __attribute__((swift_name("doCopy(relatedCode:relatedPeriodicity:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable relatedCode __attribute__((swift_name("relatedCode")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable relatedPeriodicity __attribute__((swift_name("relatedPeriodicity")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCodeFlag")))
@interface CDSSLCardinal_sdkCodeFlag : CDSSLKotlinEnum<CDSSLCardinal_sdkCodeFlag *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCodeFlagCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *maleonly __attribute__((swift_name("maleonly")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *femaleonly __attribute__((swift_name("femaleonly")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptkinesitherapy __attribute__((swift_name("deptkinesitherapy")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptnursing __attribute__((swift_name("deptnursing")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptgeneralpractice __attribute__((swift_name("deptgeneralpractice")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptsocialworker __attribute__((swift_name("deptsocialworker")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpsychology __attribute__((swift_name("deptpsychology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptadministrative __attribute__((swift_name("deptadministrative")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptdietetics __attribute__((swift_name("deptdietetics")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptspeechtherapy __attribute__((swift_name("deptspeechtherapy")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptdentistry __attribute__((swift_name("deptdentistry")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptoccupationaltherapy __attribute__((swift_name("deptoccupationaltherapy")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *depthealthcare __attribute__((swift_name("depthealthcare")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptgynecology __attribute__((swift_name("deptgynecology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpediatry __attribute__((swift_name("deptpediatry")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptalgology __attribute__((swift_name("deptalgology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptanatomopathology __attribute__((swift_name("deptanatomopathology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptanesthesiology __attribute__((swift_name("deptanesthesiology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptbacteriology __attribute__((swift_name("deptbacteriology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptcardiacsurgery __attribute__((swift_name("deptcardiacsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptcardiology __attribute__((swift_name("deptcardiology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptchildandadolescentpsychiatry __attribute__((swift_name("deptchildandadolescentpsychiatry")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptdermatology __attribute__((swift_name("deptdermatology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptdiabetology __attribute__((swift_name("deptdiabetology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptemergency __attribute__((swift_name("deptemergency")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptendocrinology __attribute__((swift_name("deptendocrinology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptgastroenterology __attribute__((swift_name("deptgastroenterology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptgenetics __attribute__((swift_name("deptgenetics")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptgeriatry __attribute__((swift_name("deptgeriatry")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *depthandsurgery __attribute__((swift_name("depthandsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *depthematology __attribute__((swift_name("depthematology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptinfectiousdisease __attribute__((swift_name("deptinfectiousdisease")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptintensivecare __attribute__((swift_name("deptintensivecare")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptlaboratory __attribute__((swift_name("deptlaboratory")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptmajorburns __attribute__((swift_name("deptmajorburns")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptmaxillofacialsurgery __attribute__((swift_name("deptmaxillofacialsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptmedicine __attribute__((swift_name("deptmedicine")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptmolecularbiology __attribute__((swift_name("deptmolecularbiology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptneonatalogy __attribute__((swift_name("deptneonatalogy")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptnephrology __attribute__((swift_name("deptnephrology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptneurology __attribute__((swift_name("deptneurology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptneurosurgery __attribute__((swift_name("deptneurosurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptnte __attribute__((swift_name("deptnte")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptnuclear __attribute__((swift_name("deptnuclear")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptnutritiondietetics __attribute__((swift_name("deptnutritiondietetics")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptobstetrics __attribute__((swift_name("deptobstetrics")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptoncology __attribute__((swift_name("deptoncology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptophtalmology __attribute__((swift_name("deptophtalmology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptorthopedy __attribute__((swift_name("deptorthopedy")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpalliativecare __attribute__((swift_name("deptpalliativecare")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpediatricintensivecare __attribute__((swift_name("deptpediatricintensivecare")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpediatricsurgery __attribute__((swift_name("deptpediatricsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpharmacy __attribute__((swift_name("deptpharmacy")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptphysicalmedecine __attribute__((swift_name("deptphysicalmedecine")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptphysiotherapy __attribute__((swift_name("deptphysiotherapy")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptplasticandreparatorysurgery __attribute__((swift_name("deptplasticandreparatorysurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpneumology __attribute__((swift_name("deptpneumology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpodiatry __attribute__((swift_name("deptpodiatry")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpsychiatry __attribute__((swift_name("deptpsychiatry")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptradiology __attribute__((swift_name("deptradiology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptradiotherapy __attribute__((swift_name("deptradiotherapy")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptrevalidation __attribute__((swift_name("deptrevalidation")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptrheumatology __attribute__((swift_name("deptrheumatology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptrhumatology __attribute__((swift_name("deptrhumatology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptsenology __attribute__((swift_name("deptsenology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptsocialservice __attribute__((swift_name("deptsocialservice")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptsportsmedecine __attribute__((swift_name("deptsportsmedecine")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptstomatology __attribute__((swift_name("deptstomatology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptsurgery __attribute__((swift_name("deptsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptthoracicsurgery __attribute__((swift_name("deptthoracicsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *depttoxicology __attribute__((swift_name("depttoxicology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *depttropicalmedecine __attribute__((swift_name("depttropicalmedecine")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *depturology __attribute__((swift_name("depturology")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptvascularsurgery __attribute__((swift_name("deptvascularsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptvisceraldigestiveabdominalsurgery __attribute__((swift_name("deptvisceraldigestiveabdominalsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *depttransplantsurgery __attribute__((swift_name("depttransplantsurgery")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptpercutaneous __attribute__((swift_name("deptpercutaneous")));
@property (class, readonly) CDSSLCardinal_sdkCodeFlag *deptchildbirth __attribute__((swift_name("deptchildbirth")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkCodeFlag *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkCodeFlag *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAppendixType")))
@interface CDSSLCardinal_sdkAppendixType : CDSSLKotlinEnum<CDSSLCardinal_sdkAppendixType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAppendixTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkAppendixType *externallink __attribute__((swift_name("externallink")));
@property (class, readonly) CDSSLCardinal_sdkAppendixType *video __attribute__((swift_name("video")));
@property (class, readonly) CDSSLCardinal_sdkAppendixType *description_ __attribute__((swift_name("description_")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkAppendixType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkAppendixType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCode.Companion")))
@interface CDSSLCardinal_sdkCodeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCodeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkBooleanResponse.Companion")))
@interface CDSSLCardinal_sdkBooleanResponseCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkBooleanResponseCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDevice.Companion")))
@interface CDSSLCardinal_sdkDeviceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDeviceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@property (readonly) NSString *KRAKEN_QUALIFIED_NAME __attribute__((swift_name("KRAKEN_QUALIFIED_NAME")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReportVersion")))
@interface CDSSLCardinal_sdkReportVersion : CDSSLKotlinEnum<CDSSLCardinal_sdkReportVersion *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReportVersionCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkReportVersion *v100 __attribute__((swift_name("v100")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkReportVersion *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkReportVersion *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentTemplate.Companion")))
@interface CDSSLCardinal_sdkDocumentTemplateCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDocumentTemplateCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityReference.Companion")))
@interface CDSSLCardinal_sdkEntityReferenceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEntityReferenceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityTemplate.Companion")))
@interface CDSSLCardinal_sdkEntityTemplateCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEntityTemplateCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFrontEndMigrationStatus")))
@interface CDSSLCardinal_sdkFrontEndMigrationStatus : CDSSLKotlinEnum<CDSSLCardinal_sdkFrontEndMigrationStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkFrontEndMigrationStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkFrontEndMigrationStatus *started __attribute__((swift_name("started")));
@property (class, readonly) CDSSLCardinal_sdkFrontEndMigrationStatus *paused __attribute__((swift_name("paused")));
@property (class, readonly) CDSSLCardinal_sdkFrontEndMigrationStatus *error __attribute__((swift_name("error")));
@property (class, readonly) CDSSLCardinal_sdkFrontEndMigrationStatus *success __attribute__((swift_name("success")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkFrontEndMigrationStatus *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkFrontEndMigrationStatus *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFrontEndMigration.Companion")))
@interface CDSSLCardinal_sdkFrontEndMigrationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkFrontEndMigrationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkOperationToken")))
@interface CDSSLCardinal_sdkOperationToken : CDSSLBase
- (instancetype)initWithTokenHash:(NSString *)tokenHash creationTime:(int64_t)creationTime validity:(int64_t)validity operation:(CDSSLCardinal_sdkOperation *)operation description:(NSString * _Nullable)description __attribute__((swift_name("init(tokenHash:creationTime:validity:operation:description:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkOperationTokenCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkOperationToken *)doCopyTokenHash:(NSString *)tokenHash creationTime:(int64_t)creationTime validity:(int64_t)validity operation:(CDSSLCardinal_sdkOperation *)operation description:(NSString * _Nullable)description __attribute__((swift_name("doCopy(tokenHash:creationTime:validity:operation:description:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int64_t creationTime __attribute__((swift_name("creationTime")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) CDSSLCardinal_sdkOperation *operation __attribute__((swift_name("operation")));
@property (readonly) NSString *tokenHash __attribute__((swift_name("tokenHash")));
@property (readonly) int64_t validity __attribute__((swift_name("validity")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAuthenticationClass")))
@interface CDSSLCardinal_sdkAuthenticationClass : CDSSLKotlinEnum<CDSSLCardinal_sdkAuthenticationClass *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAuthenticationClassCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkAuthenticationClass *digitalid __attribute__((swift_name("digitalid")));
@property (class, readonly) CDSSLCardinal_sdkAuthenticationClass *twofactorauthentication __attribute__((swift_name("twofactorauthentication")));
@property (class, readonly) CDSSLCardinal_sdkAuthenticationClass *shortlivedtoken __attribute__((swift_name("shortlivedtoken")));
@property (class, readonly) CDSSLCardinal_sdkAuthenticationClass *externalauthentication __attribute__((swift_name("externalauthentication")));
@property (class, readonly) CDSSLCardinal_sdkAuthenticationClass *password __attribute__((swift_name("password")));
@property (class, readonly) CDSSLCardinal_sdkAuthenticationClass *longlivedtoken __attribute__((swift_name("longlivedtoken")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkAuthenticationClass *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkAuthenticationClass *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGroup.Companion")))
@interface CDSSLCardinal_sdkGroupCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkGroupCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGroupType.Companion")))
@interface CDSSLCardinal_sdkGroupTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkGroupTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReplication")))
@interface CDSSLCardinal_sdkReplication : CDSSLBase <CDSSLCardinal_sdkStoredDocument, CDSSLCardinal_sdkIdentifiable, CDSSLCardinal_sdkNamed>
- (instancetype)initWithId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name context:(NSString * _Nullable)context databaseSynchronizations:(NSArray<CDSSLCardinal_sdkDatabaseSynchronization *> *)databaseSynchronizations __attribute__((swift_name("init(id:rev:deletionDate:name:context:databaseSynchronizations:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReplicationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkReplication *)doCopyId:(NSString *)id rev:(NSString * _Nullable)rev deletionDate:(CDSSLLong * _Nullable)deletionDate name:(NSString * _Nullable)name context:(NSString * _Nullable)context databaseSynchronizations:(NSArray<CDSSLCardinal_sdkDatabaseSynchronization *> *)databaseSynchronizations __attribute__((swift_name("doCopy(id:rev:deletionDate:name:context:databaseSynchronizations:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable context __attribute__((swift_name("context")));
@property (readonly) NSArray<CDSSLCardinal_sdkDatabaseSynchronization *> *databaseSynchronizations __attribute__((swift_name("databaseSynchronizations")));
@property (readonly) CDSSLLong * _Nullable deletionDate __attribute__((swift_name("deletionDate")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@property (readonly) NSString * _Nullable rev __attribute__((swift_name("rev")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDatabaseInitialisation.Companion")))
@interface CDSSLCardinal_sdkDatabaseInitialisationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDatabaseInitialisationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUserType.Companion")))
@interface CDSSLCardinal_sdkUserTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkUserTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRoleConfiguration.Source")))
@interface CDSSLCardinal_sdkRoleConfigurationSource : CDSSLKotlinEnum<CDSSLCardinal_sdkRoleConfigurationSource *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRoleConfigurationSourceCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkRoleConfigurationSource *configuration __attribute__((swift_name("configuration")));
@property (class, readonly) CDSSLCardinal_sdkRoleConfigurationSource *inherited __attribute__((swift_name("inherited")));
@property (class, readonly) CDSSLCardinal_sdkRoleConfigurationSource *default_ __attribute__((swift_name("default_")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkRoleConfigurationSource *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkRoleConfigurationSource *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRoleConfiguration.Companion")))
@interface CDSSLCardinal_sdkRoleConfigurationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRoleConfigurationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDatabaseInfo")))
@interface CDSSLCardinal_sdkDatabaseInfo : CDSSLBase
- (instancetype)initWithId:(NSString *)id updateSeq:(NSString * _Nullable)updateSeq fileSize:(CDSSLLong * _Nullable)fileSize externalSize:(CDSSLLong * _Nullable)externalSize activeSize:(CDSSLLong * _Nullable)activeSize docs:(CDSSLLong * _Nullable)docs q:(CDSSLInt * _Nullable)q n:(CDSSLInt * _Nullable)n w:(CDSSLInt * _Nullable)w r:(CDSSLInt * _Nullable)r __attribute__((swift_name("init(id:updateSeq:fileSize:externalSize:activeSize:docs:q:n:w:r:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDatabaseInfoCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDatabaseInfo *)doCopyId:(NSString *)id updateSeq:(NSString * _Nullable)updateSeq fileSize:(CDSSLLong * _Nullable)fileSize externalSize:(CDSSLLong * _Nullable)externalSize activeSize:(CDSSLLong * _Nullable)activeSize docs:(CDSSLLong * _Nullable)docs q:(CDSSLInt * _Nullable)q n:(CDSSLInt * _Nullable)n w:(CDSSLInt * _Nullable)w r:(CDSSLInt * _Nullable)r __attribute__((swift_name("doCopy(id:updateSeq:fileSize:externalSize:activeSize:docs:q:n:w:r:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable activeSize __attribute__((swift_name("activeSize")));
@property (readonly) CDSSLLong * _Nullable docs __attribute__((swift_name("docs")));
@property (readonly) CDSSLLong * _Nullable externalSize __attribute__((swift_name("externalSize")));
@property (readonly) CDSSLLong * _Nullable fileSize __attribute__((swift_name("fileSize")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLInt * _Nullable n __attribute__((swift_name("n")));
@property (readonly) CDSSLInt * _Nullable q __attribute__((swift_name("q")));
@property (readonly) CDSSLInt * _Nullable r __attribute__((swift_name("r")));
@property (readonly) NSString * _Nullable updateSeq __attribute__((swift_name("updateSeq")));
@property (readonly) CDSSLInt * _Nullable w __attribute__((swift_name("w")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGroupDatabasesInfo.Companion")))
@interface CDSSLCardinal_sdkGroupDatabasesInfoCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkGroupDatabasesInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkOperation.Companion")))
@interface CDSSLCardinal_sdkOperationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkOperationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReplicationInfo.Companion")))
@interface CDSSLCardinal_sdkReplicationInfoCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReplicationInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGroupDeletionReport.Companion")))
@interface CDSSLCardinal_sdkGroupDeletionReportCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkGroupDeletionReportCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkView")))
@interface CDSSLCardinal_sdkView : CDSSLBase
- (instancetype)initWithMap:(NSString *)map reduce:(NSString * _Nullable)reduce __attribute__((swift_name("init(map:reduce:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkViewCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkView *)doCopyMap:(NSString *)map reduce:(NSString * _Nullable)reduce __attribute__((swift_name("doCopy(map:reduce:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *map __attribute__((swift_name("map")));
@property (readonly) NSString * _Nullable reduce __attribute__((swift_name("reduce")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDesignDocument.Companion")))
@interface CDSSLCardinal_sdkDesignDocumentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDesignDocumentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkListOfProperties.Companion")))
@interface CDSSLCardinal_sdkListOfPropertiesCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkListOfPropertiesCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPermissionType.Companion")))
@interface CDSSLCardinal_sdkPermissionTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPermissionTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRegistrationInformation.Companion")))
@interface CDSSLCardinal_sdkRegistrationInformationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRegistrationInformationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRegistrationSuccess.Companion")))
@interface CDSSLCardinal_sdkRegistrationSuccessCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRegistrationSuccessCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkHealthcarePartyStatus")))
@interface CDSSLCardinal_sdkHealthcarePartyStatus : CDSSLKotlinEnum<CDSSLCardinal_sdkHealthcarePartyStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkHealthcarePartyStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkHealthcarePartyStatus *trainee __attribute__((swift_name("trainee")));
@property (class, readonly) CDSSLCardinal_sdkHealthcarePartyStatus *withconvention __attribute__((swift_name("withconvention")));
@property (class, readonly) CDSSLCardinal_sdkHealthcarePartyStatus *accreditated __attribute__((swift_name("accreditated")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkHealthcarePartyStatus *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkHealthcarePartyStatus *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkHealthcarePartyHistoryStatus")))
@interface CDSSLCardinal_sdkHealthcarePartyHistoryStatus : CDSSLBase
- (instancetype)initWithStatus:(CDSSLCardinal_sdkHealthcarePartyStatus *)status specialisationCode:(NSString *)specialisationCode startDate:(int64_t)startDate active:(BOOL)active __attribute__((swift_name("init(status:specialisationCode:startDate:active:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkHealthcarePartyHistoryStatusCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkHealthcarePartyHistoryStatus *)doCopyStatus:(CDSSLCardinal_sdkHealthcarePartyStatus *)status specialisationCode:(NSString *)specialisationCode startDate:(int64_t)startDate active:(BOOL)active __attribute__((swift_name("doCopy(status:specialisationCode:startDate:active:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL active __attribute__((swift_name("active")));
@property (readonly) NSString *specialisationCode __attribute__((swift_name("specialisationCode")));
@property (readonly) int64_t startDate __attribute__((swift_name("startDate")));
@property (readonly) CDSSLCardinal_sdkHealthcarePartyStatus *status __attribute__((swift_name("status")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTelecomType")))
@interface CDSSLCardinal_sdkTelecomType : CDSSLKotlinEnum<CDSSLCardinal_sdkTelecomType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTelecomTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *mobile __attribute__((swift_name("mobile")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *phone __attribute__((swift_name("phone")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *email __attribute__((swift_name("email")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *fax __attribute__((swift_name("fax")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *skype __attribute__((swift_name("skype")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *im __attribute__((swift_name("im")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *medibridge __attribute__((swift_name("medibridge")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *ehealthbox __attribute__((swift_name("ehealthbox")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *apicrypt __attribute__((swift_name("apicrypt")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *web __attribute__((swift_name("web")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *print __attribute__((swift_name("print")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *disk __attribute__((swift_name("disk")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *other __attribute__((swift_name("other")));
@property (class, readonly) CDSSLCardinal_sdkTelecomType *pager __attribute__((swift_name("pager")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkTelecomType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkTelecomType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Cardinal_sdkFlatRateTarification")))
@protocol CDSSLCardinal_sdkFlatRateTarification <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) CDSSLCardinal_sdkFlatRateType * _Nullable flatRateType __attribute__((swift_name("flatRateType")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkValorisation>> *valorisations __attribute__((swift_name("valorisations")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedFlatRateTarification")))
@interface CDSSLCardinal_sdkDecryptedFlatRateTarification : CDSSLBase <CDSSLCardinal_sdkFlatRateTarification>
- (instancetype)initWithCode:(NSString * _Nullable)code flatRateType:(CDSSLCardinal_sdkFlatRateType * _Nullable)flatRateType label:(NSDictionary<NSString *, NSString *> * _Nullable)label valorisations:(NSArray<CDSSLCardinal_sdkDecryptedValorisation *> *)valorisations encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(code:flatRateType:label:valorisations:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedFlatRateTarificationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedFlatRateTarification *)doCopyCode:(NSString * _Nullable)code flatRateType:(CDSSLCardinal_sdkFlatRateType * _Nullable)flatRateType label:(NSDictionary<NSString *, NSString *> * _Nullable)label valorisations:(NSArray<CDSSLCardinal_sdkDecryptedValorisation *> *)valorisations encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(code:flatRateType:label:valorisations:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable code __attribute__((swift_name("code")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLCardinal_sdkFlatRateType * _Nullable flatRateType __attribute__((swift_name("flatRateType")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable label __attribute__((swift_name("label")));
@property (readonly) NSArray<CDSSLCardinal_sdkDecryptedValorisation *> *valorisations __attribute__((swift_name("valorisations")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkHealthcareParty.Companion")))
@interface CDSSLCardinal_sdkHealthcarePartyCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkHealthcarePartyCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@property (readonly) NSString *KRAKEN_QUALIFIED_NAME __attribute__((swift_name("KRAKEN_QUALIFIED_NAME")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPublicKey.Companion")))
@interface CDSSLCardinal_sdkPublicKeyCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPublicKeyCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDataOwnerRegistrationSuccess.Companion")))
@interface CDSSLCardinal_sdkDataOwnerRegistrationSuccessCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDataOwnerRegistrationSuccessCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkInsurance.Companion")))
@interface CDSSLCardinal_sdkInsuranceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkInsuranceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkKeywordSubword")))
@interface CDSSLCardinal_sdkKeywordSubword : CDSSLBase
- (instancetype)initWithValue:(NSString * _Nullable)value subWords:(NSArray<CDSSLCardinal_sdkKeywordSubword *> * _Nullable)subWords __attribute__((swift_name("init(value:subWords:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkKeywordSubwordCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkKeywordSubword *)doCopyValue:(NSString * _Nullable)value subWords:(NSArray<CDSSLCardinal_sdkKeywordSubword *> * _Nullable)subWords __attribute__((swift_name("doCopy(value:subWords:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<CDSSLCardinal_sdkKeywordSubword *> * _Nullable subWords __attribute__((swift_name("subWords")));
@property (readonly) NSString * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkKeyword.Companion")))
@interface CDSSLCardinal_sdkKeywordCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkKeywordCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMedicalLocation.Companion")))
@interface CDSSLCardinal_sdkMedicalLocationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMedicalLocationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkListOfIds.Companion")))
@interface CDSSLCardinal_sdkListOfIdsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkListOfIdsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkPermissionItem")))
@protocol CDSSLCardinal_sdkPermissionItem
@required
@property (readonly) id<CDSSLCardinal_sdkPredicate> predicate __attribute__((swift_name("predicate")));
@property (readonly) CDSSLCardinal_sdkPermissionType *type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPermission.Companion")))
@interface CDSSLCardinal_sdkPermissionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPermissionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPlace.Companion")))
@interface CDSSLCardinal_sdkPlaceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPlaceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRole.Companion")))
@interface CDSSLCardinal_sdkRoleCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRoleCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIndexingInfo.Companion")))
@interface CDSSLCardinal_sdkIndexingInfoCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkIndexingInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRemote")))
@interface CDSSLCardinal_sdkRemote : CDSSLBase
- (instancetype)initWithUrl:(NSString *)url auth:(CDSSLCardinal_sdkRemoteAuthentication * _Nullable)auth __attribute__((swift_name("init(url:auth:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRemoteCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRemote *)doCopyUrl:(NSString *)url auth:(CDSSLCardinal_sdkRemoteAuthentication * _Nullable)auth __attribute__((swift_name("doCopy(url:auth:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRemoteAuthentication * _Nullable auth __attribute__((swift_name("auth")));
@property (readonly) NSString *url __attribute__((swift_name("url")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkZonedDateTime")))
@interface CDSSLCardinal_sdkZonedDateTime : CDSSLBase
- (instancetype)initWithDateTime:(CDSSLKotlinx_datetimeLocalDateTime *)dateTime zoneOffset:(CDSSLKotlinx_datetimeUtcOffset *)zoneOffset zoneId:(CDSSLKotlinx_datetimeTimeZone *)zoneId __attribute__((swift_name("init(dateTime:zoneOffset:zoneId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkZonedDateTimeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkZonedDateTime *)doCopyDateTime:(CDSSLKotlinx_datetimeLocalDateTime *)dateTime zoneOffset:(CDSSLKotlinx_datetimeUtcOffset *)zoneOffset zoneId:(CDSSLKotlinx_datetimeTimeZone *)zoneId __attribute__((swift_name("doCopy(dateTime:zoneOffset:zoneId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)toIso8601String __attribute__((swift_name("toIso8601String()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLKotlinx_datetimeLocalDateTime *dateTime __attribute__((swift_name("dateTime")));
@property (readonly) CDSSLKotlinx_datetimeTimeZone *zoneId __attribute__((swift_name("zoneId")));
@property (readonly) CDSSLKotlinx_datetimeUtcOffset *zoneOffset __attribute__((swift_name("zoneOffset")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReplicationStats")))
@interface CDSSLCardinal_sdkReplicationStats : CDSSLBase
- (instancetype)initWithRevisionsChecked:(CDSSLInt * _Nullable)revisionsChecked missingRevisionsFound:(CDSSLInt * _Nullable)missingRevisionsFound docsRead:(CDSSLInt * _Nullable)docsRead docsWritten:(CDSSLInt * _Nullable)docsWritten changesPending:(CDSSLInt * _Nullable)changesPending docWriteFailures:(CDSSLInt * _Nullable)docWriteFailures checkpointedSourceSeq:(NSString * _Nullable)checkpointedSourceSeq startTime:(CDSSLCardinal_sdkZonedDateTime * _Nullable)startTime error:(NSString * _Nullable)error __attribute__((swift_name("init(revisionsChecked:missingRevisionsFound:docsRead:docsWritten:changesPending:docWriteFailures:checkpointedSourceSeq:startTime:error:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReplicationStatsCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkReplicationStats *)doCopyRevisionsChecked:(CDSSLInt * _Nullable)revisionsChecked missingRevisionsFound:(CDSSLInt * _Nullable)missingRevisionsFound docsRead:(CDSSLInt * _Nullable)docsRead docsWritten:(CDSSLInt * _Nullable)docsWritten changesPending:(CDSSLInt * _Nullable)changesPending docWriteFailures:(CDSSLInt * _Nullable)docWriteFailures checkpointedSourceSeq:(NSString * _Nullable)checkpointedSourceSeq startTime:(CDSSLCardinal_sdkZonedDateTime * _Nullable)startTime error:(NSString * _Nullable)error __attribute__((swift_name("doCopy(revisionsChecked:missingRevisionsFound:docsRead:docsWritten:changesPending:docWriteFailures:checkpointedSourceSeq:startTime:error:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLInt * _Nullable changesPending __attribute__((swift_name("changesPending")));
@property (readonly) NSString * _Nullable checkpointedSourceSeq __attribute__((swift_name("checkpointedSourceSeq")));
@property (readonly) CDSSLInt * _Nullable docWriteFailures __attribute__((swift_name("docWriteFailures")));
@property (readonly) CDSSLInt * _Nullable docsRead __attribute__((swift_name("docsRead")));
@property (readonly) CDSSLInt * _Nullable docsWritten __attribute__((swift_name("docsWritten")));
@property (readonly) NSString * _Nullable error __attribute__((swift_name("error")));
@property (readonly) CDSSLInt * _Nullable missingRevisionsFound __attribute__((swift_name("missingRevisionsFound")));
@property (readonly) CDSSLInt * _Nullable revisionsChecked __attribute__((swift_name("revisionsChecked")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/ZonedDateTimeSerializer))
*/
@property (readonly) CDSSLCardinal_sdkZonedDateTime * _Nullable startTime __attribute__((swift_name("startTime")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReplicatorDocument.Companion")))
@interface CDSSLCardinal_sdkReplicatorDocumentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReplicatorDocumentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("Cardinal_sdkValorisation")))
@protocol CDSSLCardinal_sdkValorisation <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLDouble * _Nullable doctorSupplement __attribute__((swift_name("doctorSupplement")));
@property (readonly) CDSSLLong * _Nullable endOfValidity __attribute__((swift_name("endOfValidity")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable label __attribute__((swift_name("label")));
@property (readonly) CDSSLDouble * _Nullable patientIntervention __attribute__((swift_name("patientIntervention")));
@property (readonly) NSString * _Nullable predicate __attribute__((swift_name("predicate")));
@property (readonly) NSArray<CDSSLInt *> * _Nullable reference __attribute__((swift_name("reference")));
@property (readonly) CDSSLDouble * _Nullable reimbursement __attribute__((swift_name("reimbursement")));
@property (readonly) CDSSLLong * _Nullable startOfValidity __attribute__((swift_name("startOfValidity")));
@property (readonly) CDSSLDouble * _Nullable totalAmount __attribute__((swift_name("totalAmount")));
@property (readonly) CDSSLDouble * _Nullable vat __attribute__((swift_name("vat")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedValorisation")))
@interface CDSSLCardinal_sdkDecryptedValorisation : CDSSLBase <CDSSLCardinal_sdkValorisation>
- (instancetype)initWithStartOfValidity:(CDSSLLong * _Nullable)startOfValidity endOfValidity:(CDSSLLong * _Nullable)endOfValidity predicate:(NSString * _Nullable)predicate reference:(NSArray<CDSSLInt *> * _Nullable)reference totalAmount:(CDSSLDouble * _Nullable)totalAmount reimbursement:(CDSSLDouble * _Nullable)reimbursement patientIntervention:(CDSSLDouble * _Nullable)patientIntervention doctorSupplement:(CDSSLDouble * _Nullable)doctorSupplement vat:(CDSSLDouble * _Nullable)vat label:(NSDictionary<NSString *, NSString *> * _Nullable)label encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(startOfValidity:endOfValidity:predicate:reference:totalAmount:reimbursement:patientIntervention:doctorSupplement:vat:label:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedValorisationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedValorisation *)doCopyStartOfValidity:(CDSSLLong * _Nullable)startOfValidity endOfValidity:(CDSSLLong * _Nullable)endOfValidity predicate:(NSString * _Nullable)predicate reference:(NSArray<CDSSLInt *> * _Nullable)reference totalAmount:(CDSSLDouble * _Nullable)totalAmount reimbursement:(CDSSLDouble * _Nullable)reimbursement patientIntervention:(CDSSLDouble * _Nullable)patientIntervention doctorSupplement:(CDSSLDouble * _Nullable)doctorSupplement vat:(CDSSLDouble * _Nullable)vat label:(NSDictionary<NSString *, NSString *> * _Nullable)label encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(startOfValidity:endOfValidity:predicate:reference:totalAmount:reimbursement:patientIntervention:doctorSupplement:vat:label:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLDouble * _Nullable doctorSupplement __attribute__((swift_name("doctorSupplement")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable endOfValidity __attribute__((swift_name("endOfValidity")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable label __attribute__((swift_name("label")));
@property (readonly) CDSSLDouble * _Nullable patientIntervention __attribute__((swift_name("patientIntervention")));
@property (readonly) NSString * _Nullable predicate __attribute__((swift_name("predicate")));
@property (readonly) NSArray<CDSSLInt *> * _Nullable reference __attribute__((swift_name("reference")));
@property (readonly) CDSSLDouble * _Nullable reimbursement __attribute__((swift_name("reimbursement")));
@property (readonly) CDSSLLong * _Nullable startOfValidity __attribute__((swift_name("startOfValidity")));
@property (readonly) CDSSLDouble * _Nullable totalAmount __attribute__((swift_name("totalAmount")));
@property (readonly) CDSSLDouble * _Nullable vat __attribute__((swift_name("vat")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLetterValue")))
@interface CDSSLCardinal_sdkLetterValue : CDSSLBase
- (instancetype)initWithLetter:(NSString * _Nullable)letter index:(NSString * _Nullable)index coefficient:(CDSSLDouble * _Nullable)coefficient value:(CDSSLDouble * _Nullable)value __attribute__((swift_name("init(letter:index:coefficient:value:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkLetterValueCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkLetterValue *)doCopyLetter:(NSString * _Nullable)letter index:(NSString * _Nullable)index coefficient:(CDSSLDouble * _Nullable)coefficient value:(CDSSLDouble * _Nullable)value __attribute__((swift_name("doCopy(letter:index:coefficient:value:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLDouble * _Nullable coefficient __attribute__((swift_name("coefficient")));
@property (readonly) NSString * _Nullable index __attribute__((swift_name("index")));
@property (readonly) NSString * _Nullable letter __attribute__((swift_name("letter")));
@property (readonly) CDSSLDouble * _Nullable value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTarification.Companion")))
@interface CDSSLCardinal_sdkTarificationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTarificationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEnable2faRequest.Companion")))
@interface CDSSLCardinal_sdkEnable2faRequestCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEnable2faRequestCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUserGroup.Companion")))
@interface CDSSLCardinal_sdkUserGroupCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkUserGroupCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTokenWithGroup.Companion")))
@interface CDSSLCardinal_sdkTokenWithGroupCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTokenWithGroupCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPropertyTypeStub")))
@interface CDSSLCardinal_sdkPropertyTypeStub : CDSSLBase
- (instancetype)initWithIdentifier:(NSString * _Nullable)identifier type:(CDSSLCardinal_sdkTypedValuesType * _Nullable)type __attribute__((swift_name("init(identifier:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPropertyTypeStubCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkPropertyTypeStub *)doCopyIdentifier:(NSString * _Nullable)identifier type:(CDSSLCardinal_sdkTypedValuesType * _Nullable)type __attribute__((swift_name("doCopy(identifier:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable identifier __attribute__((swift_name("identifier")));
@property (readonly) CDSSLCardinal_sdkTypedValuesType * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((swift_name("Cardinal_sdkTypedValue")))
@protocol CDSSLCardinal_sdkTypedValue <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) CDSSLBoolean * _Nullable booleanValue __attribute__((swift_name("booleanValue")));
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable dateValue __attribute__((swift_name("dateValue")));
@property (readonly) CDSSLDouble * _Nullable doubleValue __attribute__((swift_name("doubleValue")));
@property (readonly) CDSSLLong * _Nullable integerValue __attribute__((swift_name("integerValue")));
@property (readonly) NSString * _Nullable stringValue __attribute__((swift_name("stringValue")));
@property (readonly) CDSSLCardinal_sdkTypedValuesType * _Nullable type __attribute__((swift_name("type")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedTypedValue")))
@interface CDSSLCardinal_sdkEncryptedTypedValue : CDSSLBase <CDSSLCardinal_sdkTypedValue>
- (instancetype)initWithType:(CDSSLCardinal_sdkTypedValuesType * _Nullable)type booleanValue:(CDSSLBoolean * _Nullable)booleanValue integerValue:(CDSSLLong * _Nullable)integerValue doubleValue:(CDSSLDouble * _Nullable)doubleValue stringValue:(NSString * _Nullable)stringValue dateValue:(CDSSLKotlinx_datetimeInstant * _Nullable)dateValue encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(type:booleanValue:integerValue:doubleValue:stringValue:dateValue:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedTypedValueCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedTypedValue *)doCopyType:(CDSSLCardinal_sdkTypedValuesType * _Nullable)type booleanValue:(CDSSLBoolean * _Nullable)booleanValue integerValue:(CDSSLLong * _Nullable)integerValue doubleValue:(CDSSLDouble * _Nullable)doubleValue stringValue:(NSString * _Nullable)stringValue dateValue:(CDSSLKotlinx_datetimeInstant * _Nullable)dateValue encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(type:booleanValue:integerValue:doubleValue:stringValue:dateValue:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable booleanValue __attribute__((swift_name("booleanValue")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable dateValue __attribute__((swift_name("dateValue")));
@property (readonly) CDSSLDouble * _Nullable doubleValue __attribute__((swift_name("doubleValue")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable integerValue __attribute__((swift_name("integerValue")));
@property (readonly) NSString * _Nullable stringValue __attribute__((swift_name("stringValue")));
@property (readonly) CDSSLCardinal_sdkTypedValuesType * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedPropertyStub.Companion")))
@interface CDSSLCardinal_sdkEncryptedPropertyStubCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedPropertyStubCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpURLProtocol.Companion")))
@interface CDSSLKtor_httpURLProtocolCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_httpURLProtocolCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKtor_httpURLProtocol *)createOrDefaultName:(NSString *)name __attribute__((swift_name("createOrDefault(name:)")));
@property (readonly) CDSSLKtor_httpURLProtocol *HTTP __attribute__((swift_name("HTTP")));
@property (readonly) CDSSLKtor_httpURLProtocol *HTTPS __attribute__((swift_name("HTTPS")));
@property (readonly) CDSSLKtor_httpURLProtocol *SOCKS __attribute__((swift_name("SOCKS")));
@property (readonly) CDSSLKtor_httpURLProtocol *WS __attribute__((swift_name("WS")));
@property (readonly) CDSSLKtor_httpURLProtocol *WSS __attribute__((swift_name("WSS")));
@property (readonly) NSDictionary<NSString *, CDSSLKtor_httpURLProtocol *> *byName __attribute__((swift_name("byName")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeaderValueParam")))
@interface CDSSLKtor_httpHeaderValueParam : CDSSLBase
- (instancetype)initWithName:(NSString *)name value:(NSString *)value __attribute__((swift_name("init(name:value:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithName:(NSString *)name value:(NSString *)value escapeValue:(BOOL)escapeValue __attribute__((swift_name("init(name:value:escapeValue:)"))) __attribute__((objc_designated_initializer));
- (CDSSLKtor_httpHeaderValueParam *)doCopyName:(NSString *)name value:(NSString *)value escapeValue:(BOOL)escapeValue __attribute__((swift_name("doCopy(name:value:escapeValue:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) BOOL escapeValue __attribute__((swift_name("escapeValue")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) NSString *value __attribute__((swift_name("value")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpHeaderValueWithParameters.Companion")))
@interface CDSSLKtor_httpHeaderValueWithParametersCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_httpHeaderValueWithParametersCompanion *shared __attribute__((swift_name("shared")));
- (id _Nullable)parseValue:(NSString *)value init:(id _Nullable (^)(NSString *, NSArray<CDSSLKtor_httpHeaderValueParam *> *))init __attribute__((swift_name("parse(value:init:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_httpContentType.Companion")))
@interface CDSSLKtor_httpContentTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_httpContentTypeCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKtor_httpContentType *)parseValue:(NSString *)value __attribute__((swift_name("parse(value:)")));
@property (readonly) CDSSLKtor_httpContentType *Any __attribute__((swift_name("Any")));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
__attribute__((swift_name("Kotlinx_coroutines_coreParentJob")))
@protocol CDSSLKotlinx_coroutines_coreParentJob <CDSSLKotlinx_coroutines_coreJob>
@required

/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
- (CDSSLKotlinCancellationException *)getChildJobCancellationCause __attribute__((swift_name("getChildJobCancellationCause()")));
@end


/**
 * @note annotations
 *   kotlinx.coroutines.InternalCoroutinesApi
*/
__attribute__((swift_name("Kotlinx_coroutines_coreSelectInstance")))
@protocol CDSSLKotlinx_coroutines_coreSelectInstance
@required
- (void)disposeOnCompletionDisposableHandle:(id<CDSSLKotlinx_coroutines_coreDisposableHandle>)disposableHandle __attribute__((swift_name("disposeOnCompletion(disposableHandle:)")));
- (void)selectInRegistrationPhaseInternalResult:(id _Nullable)internalResult __attribute__((swift_name("selectInRegistrationPhase(internalResult:)")));
- (BOOL)trySelectClauseObject:(id)clauseObject result:(id _Nullable)result __attribute__((swift_name("trySelect(clauseObject:result:)")));
@property (readonly) id<CDSSLKotlinCoroutineContext> context __attribute__((swift_name("context")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsWeekDay.Companion")))
@interface CDSSLKtor_utilsWeekDayCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_utilsWeekDayCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKtor_utilsWeekDay *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (CDSSLKtor_utilsWeekDay *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Ktor_utilsMonth.Companion")))
@interface CDSSLKtor_utilsMonthCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKtor_utilsMonthCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKtor_utilsMonth *)fromOrdinal:(int32_t)ordinal __attribute__((swift_name("from(ordinal:)")));
- (CDSSLKtor_utilsMonth *)fromValue:(NSString *)value __attribute__((swift_name("from(value:)")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection")))
@interface CDSSLKotlinKTypeProjection : CDSSLBase
- (instancetype)initWithVariance:(CDSSLKotlinKVariance * _Nullable)variance type:(id<CDSSLKotlinKType> _Nullable)type __attribute__((swift_name("init(variance:type:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKotlinKTypeProjectionCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLKotlinKTypeProjection *)doCopyVariance:(CDSSLKotlinKVariance * _Nullable)variance type:(id<CDSSLKotlinKType> _Nullable)type __attribute__((swift_name("doCopy(variance:type:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id<CDSSLKotlinKType> _Nullable type __attribute__((swift_name("type")));
@property (readonly) CDSSLKotlinKVariance * _Nullable variance __attribute__((swift_name("variance")));
@end

__attribute__((swift_name("Kotlinx_io_coreRawSink")))
@protocol CDSSLKotlinx_io_coreRawSink <CDSSLKotlinAutoCloseable>
@required
- (void)flush __attribute__((swift_name("flush()")));
- (void)writeSource:(CDSSLKotlinx_io_coreBuffer *)source byteCount:(int64_t)byteCount __attribute__((swift_name("write(source:byteCount:)")));
@end

__attribute__((swift_name("Kotlinx_io_coreSink")))
@protocol CDSSLKotlinx_io_coreSink <CDSSLKotlinx_io_coreRawSink>
@required
- (void)emit __attribute__((swift_name("emit()")));

/**
 * @note annotations
 *   kotlinx.io.InternalIoApi
*/
- (void)hintEmit __attribute__((swift_name("hintEmit()")));
- (int64_t)transferFromSource:(id<CDSSLKotlinx_io_coreRawSource>)source __attribute__((swift_name("transferFrom(source:)")));
- (void)writeSource:(id<CDSSLKotlinx_io_coreRawSource>)source byteCount_:(int64_t)byteCount __attribute__((swift_name("write(source:byteCount_:)")));
- (void)writeSource:(CDSSLKotlinByteArray *)source startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("write(source:startIndex:endIndex:)")));
- (void)writeByteByte:(int8_t)byte __attribute__((swift_name("writeByte(byte:)")));
- (void)writeIntInt:(int32_t)int_ __attribute__((swift_name("writeInt(int:)")));
- (void)writeLongLong:(int64_t)long_ __attribute__((swift_name("writeLong(long:)")));
- (void)writeShortShort:(int16_t)short_ __attribute__((swift_name("writeShort(short:)")));

/**
 * @note annotations
 *   kotlinx.io.InternalIoApi
*/
@property (readonly) CDSSLKotlinx_io_coreBuffer *buffer __attribute__((swift_name("buffer")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_io_coreBuffer")))
@interface CDSSLKotlinx_io_coreBuffer : CDSSLBase <CDSSLKotlinx_io_coreSource, CDSSLKotlinx_io_coreSink>
- (instancetype)init __attribute__((swift_name("init()"))) __attribute__((objc_designated_initializer));
+ (instancetype)new __attribute__((availability(swift, unavailable, message="use object initializers instead")));
- (void)clear __attribute__((swift_name("clear()")));
- (void)close __attribute__((swift_name("close()")));
- (CDSSLKotlinx_io_coreBuffer *)doCopy __attribute__((swift_name("doCopy()")));
- (void)doCopyToOut:(CDSSLKotlinx_io_coreBuffer *)out startIndex:(int64_t)startIndex endIndex:(int64_t)endIndex __attribute__((swift_name("doCopyTo(out:startIndex:endIndex:)")));
- (void)emit __attribute__((swift_name("emit()")));
- (BOOL)exhausted __attribute__((swift_name("exhausted()")));
- (void)flush __attribute__((swift_name("flush()")));
- (int8_t)getPosition:(int64_t)position __attribute__((swift_name("get(position:)")));

/**
 * @note annotations
 *   kotlinx.io.InternalIoApi
*/
- (void)hintEmit __attribute__((swift_name("hintEmit()")));
- (id<CDSSLKotlinx_io_coreSource>)peek __attribute__((swift_name("peek()")));
- (int64_t)readAtMostToSink:(CDSSLKotlinx_io_coreBuffer *)sink byteCount:(int64_t)byteCount __attribute__((swift_name("readAtMostTo(sink:byteCount:)")));
- (int32_t)readAtMostToSink:(CDSSLKotlinByteArray *)sink startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("readAtMostTo(sink:startIndex:endIndex:)")));
- (int8_t)readByte __attribute__((swift_name("readByte()")));
- (int32_t)readInt __attribute__((swift_name("readInt()")));
- (int64_t)readLong __attribute__((swift_name("readLong()")));
- (int16_t)readShort __attribute__((swift_name("readShort()")));
- (void)readToSink:(id<CDSSLKotlinx_io_coreRawSink>)sink byteCount:(int64_t)byteCount __attribute__((swift_name("readTo(sink:byteCount:)")));
- (BOOL)requestByteCount:(int64_t)byteCount __attribute__((swift_name("request(byteCount:)")));
- (void)requireByteCount:(int64_t)byteCount __attribute__((swift_name("require(byteCount:)")));
- (void)skipByteCount:(int64_t)byteCount __attribute__((swift_name("skip(byteCount:)")));
- (NSString *)description __attribute__((swift_name("description()")));
- (int64_t)transferFromSource:(id<CDSSLKotlinx_io_coreRawSource>)source __attribute__((swift_name("transferFrom(source:)")));
- (int64_t)transferToSink:(id<CDSSLKotlinx_io_coreRawSink>)sink __attribute__((swift_name("transferTo(sink:)")));
- (void)writeSource:(CDSSLKotlinx_io_coreBuffer *)source byteCount:(int64_t)byteCount __attribute__((swift_name("write(source:byteCount:)")));
- (void)writeSource:(id<CDSSLKotlinx_io_coreRawSource>)source byteCount_:(int64_t)byteCount __attribute__((swift_name("write(source:byteCount_:)")));
- (void)writeSource:(CDSSLKotlinByteArray *)source startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("write(source:startIndex:endIndex:)")));
- (void)writeByteByte:(int8_t)byte __attribute__((swift_name("writeByte(byte:)")));
- (void)writeIntInt:(int32_t)int_ __attribute__((swift_name("writeInt(int:)")));
- (void)writeLongLong:(int64_t)long_ __attribute__((swift_name("writeLong(long:)")));
- (void)writeShortShort:(int16_t)short_ __attribute__((swift_name("writeShort(short:)")));

/**
 * @note annotations
 *   kotlinx.io.InternalIoApi
*/
@property (readonly) CDSSLKotlinx_io_coreBuffer *buffer __attribute__((swift_name("buffer")));
@property (readonly) int64_t size __attribute__((swift_name("size")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeInstant.Companion")))
@interface CDSSLKotlinx_datetimeInstantCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeInstantCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKotlinx_datetimeInstant *)fromEpochMillisecondsEpochMilliseconds:(int64_t)epochMilliseconds __attribute__((swift_name("fromEpochMilliseconds(epochMilliseconds:)")));
- (CDSSLKotlinx_datetimeInstant *)fromEpochSecondsEpochSeconds:(int64_t)epochSeconds nanosecondAdjustment:(int32_t)nanosecondAdjustment __attribute__((swift_name("fromEpochSeconds(epochSeconds:nanosecondAdjustment:)")));
- (CDSSLKotlinx_datetimeInstant *)fromEpochSecondsEpochSeconds:(int64_t)epochSeconds nanosecondAdjustment_:(int64_t)nanosecondAdjustment __attribute__((swift_name("fromEpochSeconds(epochSeconds:nanosecondAdjustment_:)")));
- (CDSSLKotlinx_datetimeInstant *)now __attribute__((swift_name("now()"))) __attribute__((unavailable("Use Clock.System.now() instead")));
- (CDSSLKotlinx_datetimeInstant *)parseInput:(id)input format:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("parse(input:format:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@property (readonly) CDSSLKotlinx_datetimeInstant *DISTANT_FUTURE __attribute__((swift_name("DISTANT_FUTURE")));
@property (readonly) CDSSLKotlinx_datetimeInstant *DISTANT_PAST __attribute__((swift_name("DISTANT_PAST")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSecureDelegation")))
@interface CDSSLCardinal_sdkSecureDelegation : CDSSLBase
- (instancetype)initWithDelegator:(NSString * _Nullable)delegator delegate:(NSString * _Nullable)delegate secretIds:(NSSet<id> *)secretIds encryptionKeys:(NSSet<id> *)encryptionKeys owningEntityIds:(NSSet<id> *)owningEntityIds parentDelegations:(NSSet<id> *)parentDelegations exchangeDataId:(NSString * _Nullable)exchangeDataId permissions:(CDSSLCardinal_sdkAccessLevel *)permissions __attribute__((swift_name("init(delegator:delegate:secretIds:encryptionKeys:owningEntityIds:parentDelegations:exchangeDataId:permissions:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSecureDelegationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkSecureDelegation *)doCopyDelegator:(NSString * _Nullable)delegator delegate:(NSString * _Nullable)delegate secretIds:(NSSet<id> *)secretIds encryptionKeys:(NSSet<id> *)encryptionKeys owningEntityIds:(NSSet<id> *)owningEntityIds parentDelegations:(NSSet<id> *)parentDelegations exchangeDataId:(NSString * _Nullable)exchangeDataId permissions:(CDSSLCardinal_sdkAccessLevel *)permissions __attribute__((swift_name("doCopy(delegator:delegate:secretIds:encryptionKeys:owningEntityIds:parentDelegations:exchangeDataId:permissions:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable delegate __attribute__((swift_name("delegate")));
@property (readonly) NSString * _Nullable delegator __attribute__((swift_name("delegator")));
@property (readonly) NSSet<id> *encryptionKeys __attribute__((swift_name("encryptionKeys")));
@property (readonly) NSString * _Nullable exchangeDataId __attribute__((swift_name("exchangeDataId")));
@property (readonly) NSSet<id> *owningEntityIds __attribute__((swift_name("owningEntityIds")));
@property (readonly) NSSet<id> *parentDelegations __attribute__((swift_name("parentDelegations")));
@property (readonly) CDSSLCardinal_sdkAccessLevel *permissions __attribute__((swift_name("permissions")));
@property (readonly) NSSet<id> *secretIds __attribute__((swift_name("secretIds")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSecurityMetadata.Companion")))
@interface CDSSLCardinal_sdkSecurityMetadataCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSecurityMetadataCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDelegation.Companion")))
@interface CDSSLCardinal_sdkDelegationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDelegationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkGender.Companion")))
@interface CDSSLCardinal_sdkGenderCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkGenderCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDeactivationReason.Companion")))
@interface CDSSLCardinal_sdkDeactivationReasonCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDeactivationReasonCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEmployer")))
@interface CDSSLCardinal_sdkEmployer : CDSSLBase <CDSSLCardinal_sdkNamed>
- (instancetype)initWithName:(NSString * _Nullable)name addresse:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)addresse __attribute__((swift_name("init(name:addresse:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEmployerCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEmployer *)doCopyName:(NSString * _Nullable)name addresse:(CDSSLCardinal_sdkDecryptedAddress * _Nullable)addresse __attribute__((swift_name("doCopy(name:addresse:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkDecryptedAddress * _Nullable addresse __attribute__((swift_name("addresse")));
@property (readonly) NSString * _Nullable name __attribute__((swift_name("name")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEmploymentInfo.Companion")))
@interface CDSSLCardinal_sdkEmploymentInfoCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEmploymentInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIdentifier.Companion")))
@interface CDSSLCardinal_sdkIdentifierCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkIdentifierCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkContractChangeType")))
@interface CDSSLCardinal_sdkContractChangeType : CDSSLKotlinEnum<CDSSLCardinal_sdkContractChangeType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkContractChangeTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkContractChangeType *inscriptionstart __attribute__((swift_name("inscriptionstart")));
@property (class, readonly) CDSSLCardinal_sdkContractChangeType *inscriptionend __attribute__((swift_name("inscriptionend")));
@property (class, readonly) CDSSLCardinal_sdkContractChangeType *suspension __attribute__((swift_name("suspension")));
@property (class, readonly) CDSSLCardinal_sdkContractChangeType *coveragechange __attribute__((swift_name("coveragechange")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkContractChangeType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkContractChangeType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMhcSignatureType")))
@interface CDSSLCardinal_sdkMhcSignatureType : CDSSLKotlinEnum<CDSSLCardinal_sdkMhcSignatureType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMhcSignatureTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkMhcSignatureType *holdereid __attribute__((swift_name("holdereid")));
@property (class, readonly) CDSSLCardinal_sdkMhcSignatureType *holderpaper __attribute__((swift_name("holderpaper")));
@property (class, readonly) CDSSLCardinal_sdkMhcSignatureType *legalrepresentativeeid __attribute__((swift_name("legalrepresentativeeid")));
@property (class, readonly) CDSSLCardinal_sdkMhcSignatureType *legalrepresentativepaper __attribute__((swift_name("legalrepresentativepaper")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkMhcSignatureType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkMhcSignatureType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSuspensionReason")))
@interface CDSSLCardinal_sdkSuspensionReason : CDSSLKotlinEnum<CDSSLCardinal_sdkSuspensionReason *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSuspensionReasonCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkSuspensionReason *notinsured __attribute__((swift_name("notinsured")));
@property (class, readonly) CDSSLCardinal_sdkSuspensionReason *noreasongiven __attribute__((swift_name("noreasongiven")));
@property (class, readonly) CDSSLCardinal_sdkSuspensionReason *ishospitalized __attribute__((swift_name("ishospitalized")));
@property (class, readonly) CDSSLCardinal_sdkSuspensionReason *outsideofcountry __attribute__((swift_name("outsideofcountry")));
@property (class, readonly) CDSSLCardinal_sdkSuspensionReason *changeofmutuality __attribute__((swift_name("changeofmutuality")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkSuspensionReason *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkSuspensionReason *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAnnotation.Companion")))
@interface CDSSLCardinal_sdkAnnotationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAnnotationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPartnershipType")))
@interface CDSSLCardinal_sdkPartnershipType : CDSSLKotlinEnum<CDSSLCardinal_sdkPartnershipType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPartnershipTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *primarycontact __attribute__((swift_name("primarycontact")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *primarycontactfor __attribute__((swift_name("primarycontactfor")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *family __attribute__((swift_name("family")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *friend_ __attribute__((swift_name("friend_")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *counselor __attribute__((swift_name("counselor")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *contact __attribute__((swift_name("contact")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *brother __attribute__((swift_name("brother")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *brotherinlaw __attribute__((swift_name("brotherinlaw")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *child __attribute__((swift_name("child")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *daughter __attribute__((swift_name("daughter")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *employer __attribute__((swift_name("employer")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *father __attribute__((swift_name("father")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *grandchild __attribute__((swift_name("grandchild")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *grandparent __attribute__((swift_name("grandparent")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *husband __attribute__((swift_name("husband")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *lawyer __attribute__((swift_name("lawyer")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *mother __attribute__((swift_name("mother")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *neighbour __attribute__((swift_name("neighbour")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *notary __attribute__((swift_name("notary")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *partner __attribute__((swift_name("partner")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *sister __attribute__((swift_name("sister")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *sisterinlaw __attribute__((swift_name("sisterinlaw")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *son __attribute__((swift_name("son")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *spouse __attribute__((swift_name("spouse")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *stepdaughter __attribute__((swift_name("stepdaughter")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *stepfather __attribute__((swift_name("stepfather")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *stepmother __attribute__((swift_name("stepmother")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *stepson __attribute__((swift_name("stepson")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *tutor __attribute__((swift_name("tutor")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *cohabiting __attribute__((swift_name("cohabiting")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *registeredpartner __attribute__((swift_name("registeredpartner")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *nextofkin __attribute__((swift_name("nextofkin")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *federalagency __attribute__((swift_name("federalagency")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *insurancecompany __attribute__((swift_name("insurancecompany")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *stateagency __attribute__((swift_name("stateagency")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *unknown __attribute__((swift_name("unknown")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *seealso __attribute__((swift_name("seealso")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipType *refer __attribute__((swift_name("refer")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkPartnershipType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkPartnershipType *> *entries __attribute__((swift_name("entries")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPartnershipStatus")))
@interface CDSSLCardinal_sdkPartnershipStatus : CDSSLKotlinEnum<CDSSLCardinal_sdkPartnershipStatus *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPartnershipStatusCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipStatus *active __attribute__((swift_name("active")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipStatus *complicated __attribute__((swift_name("complicated")));
@property (class, readonly) CDSSLCardinal_sdkPartnershipStatus *past __attribute__((swift_name("past")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkPartnershipStatus *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkPartnershipStatus *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPartnership.Companion")))
@interface CDSSLCardinal_sdkPartnershipCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPartnershipCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReferralPeriod")))
@interface CDSSLCardinal_sdkReferralPeriod : CDSSLBase
- (instancetype)initWithStartDate:(CDSSLKotlinx_datetimeInstant * _Nullable)startDate endDate:(CDSSLKotlinx_datetimeInstant * _Nullable)endDate comment:(NSString * _Nullable)comment __attribute__((swift_name("init(startDate:endDate:comment:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReferralPeriodCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkReferralPeriod *)doCopyStartDate:(CDSSLKotlinx_datetimeInstant * _Nullable)startDate endDate:(CDSSLKotlinx_datetimeInstant * _Nullable)endDate comment:(NSString * _Nullable)comment __attribute__((swift_name("doCopy(startDate:endDate:comment:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable endDate __attribute__((swift_name("endDate")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable startDate __attribute__((swift_name("startDate")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPatientHealthCarePartyType")))
@interface CDSSLCardinal_sdkPatientHealthCarePartyType : CDSSLKotlinEnum<CDSSLCardinal_sdkPatientHealthCarePartyType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPatientHealthCarePartyTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkPatientHealthCarePartyType *doctor __attribute__((swift_name("doctor")));
@property (class, readonly) CDSSLCardinal_sdkPatientHealthCarePartyType *referral __attribute__((swift_name("referral")));
@property (class, readonly) CDSSLCardinal_sdkPatientHealthCarePartyType *medicalhouse __attribute__((swift_name("medicalhouse")));
@property (class, readonly) CDSSLCardinal_sdkPatientHealthCarePartyType *retirementhome __attribute__((swift_name("retirementhome")));
@property (class, readonly) CDSSLCardinal_sdkPatientHealthCarePartyType *hospital __attribute__((swift_name("hospital")));
@property (class, readonly) CDSSLCardinal_sdkPatientHealthCarePartyType *other __attribute__((swift_name("other")));
@property (class, readonly) CDSSLCardinal_sdkPatientHealthCarePartyType *referringphysician __attribute__((swift_name("referringphysician")));
@property (class, readonly) CDSSLCardinal_sdkPatientHealthCarePartyType *managingorganization __attribute__((swift_name("managingorganization")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkPatientHealthCarePartyType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkPatientHealthCarePartyType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPersonalStatus.Companion")))
@interface CDSSLCardinal_sdkPersonalStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPersonalStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSchoolingInfo.Companion")))
@interface CDSSLCardinal_sdkSchoolingInfoCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSchoolingInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAddressType")))
@interface CDSSLCardinal_sdkAddressType : CDSSLKotlinEnum<CDSSLCardinal_sdkAddressType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAddressTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *home __attribute__((swift_name("home")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *work __attribute__((swift_name("work")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *vacation __attribute__((swift_name("vacation")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *hospital __attribute__((swift_name("hospital")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *clinic __attribute__((swift_name("clinic")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *hq __attribute__((swift_name("hq")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *other __attribute__((swift_name("other")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *temporary __attribute__((swift_name("temporary")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *postal __attribute__((swift_name("postal")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *diplomatic __attribute__((swift_name("diplomatic")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *reference __attribute__((swift_name("reference")));
@property (class, readonly) CDSSLCardinal_sdkAddressType *careaddress __attribute__((swift_name("careaddress")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkAddressType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkAddressType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((swift_name("Cardinal_sdkTelecom")))
@protocol CDSSLCardinal_sdkTelecom <CDSSLCardinal_sdkEncryptable>
@required
@property (readonly) NSString * _Nullable telecomDescription __attribute__((swift_name("telecomDescription")));
@property (readonly) NSString * _Nullable telecomNumber __attribute__((swift_name("telecomNumber")));
@property (readonly) CDSSLCardinal_sdkTelecomType * _Nullable telecomType __attribute__((swift_name("telecomType")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPersonNameUse")))
@interface CDSSLCardinal_sdkPersonNameUse : CDSSLKotlinEnum<CDSSLCardinal_sdkPersonNameUse *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkPersonNameUseCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkPersonNameUse *usual __attribute__((swift_name("usual")));
@property (class, readonly) CDSSLCardinal_sdkPersonNameUse *official __attribute__((swift_name("official")));
@property (class, readonly) CDSSLCardinal_sdkPersonNameUse *temp __attribute__((swift_name("temp")));
@property (class, readonly) CDSSLCardinal_sdkPersonNameUse *nickname __attribute__((swift_name("nickname")));
@property (class, readonly) CDSSLCardinal_sdkPersonNameUse *anonymous __attribute__((swift_name("anonymous")));
@property (class, readonly) CDSSLCardinal_sdkPersonNameUse *maiden __attribute__((swift_name("maiden")));
@property (class, readonly) CDSSLCardinal_sdkPersonNameUse *old __attribute__((swift_name("old")));
@property (class, readonly) CDSSLCardinal_sdkPersonNameUse *other __attribute__((swift_name("other")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkPersonNameUse *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkPersonNameUse *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPersonName.Companion")))
@interface CDSSLCardinal_sdkPersonNameCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPersonNameCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedTypedValue")))
@interface CDSSLCardinal_sdkDecryptedTypedValue : CDSSLBase <CDSSLCardinal_sdkTypedValue>
- (instancetype)initWithType:(CDSSLCardinal_sdkTypedValuesType * _Nullable)type booleanValue:(CDSSLBoolean * _Nullable)booleanValue integerValue:(CDSSLLong * _Nullable)integerValue doubleValue:(CDSSLDouble * _Nullable)doubleValue stringValue:(NSString * _Nullable)stringValue dateValue:(CDSSLKotlinx_datetimeInstant * _Nullable)dateValue encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(type:booleanValue:integerValue:doubleValue:stringValue:dateValue:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedTypedValueCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedTypedValue *)doCopyType:(CDSSLCardinal_sdkTypedValuesType * _Nullable)type booleanValue:(CDSSLBoolean * _Nullable)booleanValue integerValue:(CDSSLLong * _Nullable)integerValue doubleValue:(CDSSLDouble * _Nullable)doubleValue stringValue:(NSString * _Nullable)stringValue dateValue:(CDSSLKotlinx_datetimeInstant * _Nullable)dateValue encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(type:booleanValue:integerValue:doubleValue:stringValue:dateValue:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable booleanValue __attribute__((swift_name("booleanValue")));

/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=com/icure/cardinal/sdk/serialization/InstantSerializer))
*/
@property (readonly) CDSSLKotlinx_datetimeInstant * _Nullable dateValue __attribute__((swift_name("dateValue")));
@property (readonly) CDSSLDouble * _Nullable doubleValue __attribute__((swift_name("doubleValue")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) CDSSLLong * _Nullable integerValue __attribute__((swift_name("integerValue")));
@property (readonly) NSString * _Nullable stringValue __attribute__((swift_name("stringValue")));
@property (readonly) CDSSLCardinal_sdkTypedValuesType * _Nullable type __attribute__((swift_name("type")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedPropertyStub.Companion")))
@interface CDSSLCardinal_sdkDecryptedPropertyStubCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedPropertyStubCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUsersType.Companion")))
@interface CDSSLCardinal_sdkUsersTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkUsersTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUsersStatus.Companion")))
@interface CDSSLCardinal_sdkUsersStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkUsersStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDelegationTag.Companion")))
@interface CDSSLCardinal_sdkDelegationTagCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDelegationTagCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAuthenticationToken.Companion")))
@interface CDSSLCardinal_sdkAuthenticationTokenCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAuthenticationTokenCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkUser.SystemMetadataCompanion")))
@interface CDSSLCardinal_sdkUserSystemMetadataCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkUserSystemMetadataCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRequestedPermission.Companion")))
@interface CDSSLCardinal_sdkRequestedPermissionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRequestedPermissionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareMetadataBehaviour.Companion")))
@interface CDSSLCardinal_sdkShareMetadataBehaviourCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkShareMetadataBehaviourCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPaginatedDocumentKeyIdPair.Companion")))
@interface CDSSLCardinal_sdkPaginatedDocumentKeyIdPairCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPaginatedDocumentKeyIdPairCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFlowItem.Companion")))
@interface CDSSLCardinal_sdkFlowItemCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkFlowItemCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCalendarItemTag.Companion")))
@interface CDSSLCardinal_sdkCalendarItemTagCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCalendarItemTagCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedTelecom")))
@interface CDSSLCardinal_sdkDecryptedTelecom : CDSSLBase <CDSSLCardinal_sdkTelecom>
- (instancetype)initWithTelecomType:(CDSSLCardinal_sdkTelecomType * _Nullable)telecomType telecomNumber:(NSString * _Nullable)telecomNumber telecomDescription:(NSString * _Nullable)telecomDescription encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(telecomType:telecomNumber:telecomDescription:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDecryptedTelecomCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDecryptedTelecom *)doCopyTelecomType:(CDSSLCardinal_sdkTelecomType * _Nullable)telecomType telecomNumber:(NSString * _Nullable)telecomNumber telecomDescription:(NSString * _Nullable)telecomDescription encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(telecomType:telecomNumber:telecomDescription:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable telecomDescription __attribute__((swift_name("telecomDescription")));
@property (readonly) NSString * _Nullable telecomNumber __attribute__((swift_name("telecomNumber")));
@property (readonly) CDSSLCardinal_sdkTelecomType * _Nullable telecomType __attribute__((swift_name("telecomType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedAddress.Companion")))
@interface CDSSLCardinal_sdkDecryptedAddressCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedAddressCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedTelecom")))
@interface CDSSLCardinal_sdkEncryptedTelecom : CDSSLBase <CDSSLCardinal_sdkTelecom>
- (instancetype)initWithTelecomType:(CDSSLCardinal_sdkTelecomType * _Nullable)telecomType telecomNumber:(NSString * _Nullable)telecomNumber telecomDescription:(NSString * _Nullable)telecomDescription encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("init(telecomType:telecomNumber:telecomDescription:encryptedSelf:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkEncryptedTelecomCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkEncryptedTelecom *)doCopyTelecomType:(CDSSLCardinal_sdkTelecomType * _Nullable)telecomType telecomNumber:(NSString * _Nullable)telecomNumber telecomDescription:(NSString * _Nullable)telecomDescription encryptedSelf:(id _Nullable)encryptedSelf __attribute__((swift_name("doCopy(telecomType:telecomNumber:telecomDescription:encryptedSelf:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) id _Nullable encryptedSelf __attribute__((swift_name("encryptedSelf")));
@property (readonly) NSString * _Nullable telecomDescription __attribute__((swift_name("telecomDescription")));
@property (readonly) NSString * _Nullable telecomNumber __attribute__((swift_name("telecomNumber")));
@property (readonly) CDSSLCardinal_sdkTelecomType * _Nullable telecomType __attribute__((swift_name("telecomType")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedAddress.Companion")))
@interface CDSSLCardinal_sdkEncryptedAddressCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedAddressCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntitySubscriptionConfiguration.FullBufferBehaviourCompanion")))
@interface CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviourCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEntitySubscriptionConfigurationFullBufferBehaviourCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntitySubscriptionCloseReason.Companion")))
@interface CDSSLCardinal_sdkEntitySubscriptionCloseReasonCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEntitySubscriptionCloseReasonCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreChannelIterator")))
@protocol CDSSLKotlinx_coroutines_coreChannelIterator
@required

/**
 * @note This method converts instances of CancellationException to errors.
 * Other uncaught Kotlin exceptions are fatal.
*/
- (void)hasNextWithCompletionHandler:(void (^)(CDSSLBoolean * _Nullable, NSError * _Nullable))completionHandler __attribute__((swift_name("hasNext(completionHandler:)")));
- (id _Nullable)next __attribute__((swift_name("next()")));
@end

__attribute__((swift_name("Kotlinx_coroutines_coreSelectClause1")))
@protocol CDSSLKotlinx_coroutines_coreSelectClause1 <CDSSLKotlinx_coroutines_coreSelectClause>
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkParticipantType.Companion")))
@interface CDSSLCardinal_sdkParticipantTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkParticipantTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkServiceLink")))
@interface CDSSLCardinal_sdkServiceLink : CDSSLBase
- (instancetype)initWithServiceId:(NSString * _Nullable)serviceId __attribute__((swift_name("init(serviceId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkServiceLinkCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkServiceLink *)doCopyServiceId:(NSString * _Nullable)serviceId __attribute__((swift_name("doCopy(serviceId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable serviceId __attribute__((swift_name("serviceId")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedSubContact.Companion")))
@interface CDSSLCardinal_sdkDecryptedSubContactCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedSubContactCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedSubContact.Companion")))
@interface CDSSLCardinal_sdkEncryptedSubContactCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedSubContactCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMeasure")))
@interface CDSSLCardinal_sdkMeasure : CDSSLBase
- (instancetype)initWithValue:(CDSSLDouble * _Nullable)value ref:(CDSSLDouble * _Nullable)ref severity:(CDSSLInt * _Nullable)severity severityCode:(NSString * _Nullable)severityCode evolution:(CDSSLInt * _Nullable)evolution unit:(NSString * _Nullable)unit unitCodes:(NSSet<CDSSLCardinal_sdkCodeStub *> * _Nullable)unitCodes comment:(NSString * _Nullable)comment comparator:(NSString * _Nullable)comparator sign:(NSString * _Nullable)sign referenceRanges:(NSArray<CDSSLCardinal_sdkReferenceRange *> *)referenceRanges __attribute__((swift_name("init(value:ref:severity:severityCode:evolution:unit:unitCodes:comment:comparator:sign:referenceRanges:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMeasureCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkMeasure *)doCopyValue:(CDSSLDouble * _Nullable)value ref:(CDSSLDouble * _Nullable)ref severity:(CDSSLInt * _Nullable)severity severityCode:(NSString * _Nullable)severityCode evolution:(CDSSLInt * _Nullable)evolution unit:(NSString * _Nullable)unit unitCodes:(NSSet<CDSSLCardinal_sdkCodeStub *> * _Nullable)unitCodes comment:(NSString * _Nullable)comment comparator:(NSString * _Nullable)comparator sign:(NSString * _Nullable)sign referenceRanges:(NSArray<CDSSLCardinal_sdkReferenceRange *> *)referenceRanges __attribute__((swift_name("doCopy(value:ref:severity:severityCode:evolution:unit:unitCodes:comment:comparator:sign:referenceRanges:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable comment __attribute__((swift_name("comment")));
@property (readonly) NSString * _Nullable comparator __attribute__((swift_name("comparator")));
@property (readonly) CDSSLInt * _Nullable evolution __attribute__((swift_name("evolution")));
@property (readonly) CDSSLDouble * _Nullable ref __attribute__((swift_name("ref")));
@property (readonly) NSArray<CDSSLCardinal_sdkReferenceRange *> *referenceRanges __attribute__((swift_name("referenceRanges")));
@property (readonly) CDSSLInt * _Nullable severity __attribute__((swift_name("severity")));
@property (readonly) NSString * _Nullable severityCode __attribute__((swift_name("severityCode")));
@property (readonly) NSString * _Nullable sign __attribute__((swift_name("sign")));
@property (readonly) NSString * _Nullable unit __attribute__((swift_name("unit")));
@property (readonly) NSSet<CDSSLCardinal_sdkCodeStub *> * _Nullable unitCodes __attribute__((swift_name("unitCodes")));
@property (readonly) CDSSLDouble * _Nullable value __attribute__((swift_name("value")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMedication")))
@interface CDSSLCardinal_sdkMedication : CDSSLBase
- (instancetype)initWithCompoundPrescription:(NSString * _Nullable)compoundPrescription substanceProduct:(CDSSLCardinal_sdkSubstanceproduct * _Nullable)substanceProduct medicinalProduct:(CDSSLCardinal_sdkMedicinalproduct * _Nullable)medicinalProduct numberOfPackages:(CDSSLInt * _Nullable)numberOfPackages batch:(NSString * _Nullable)batch expirationDate:(CDSSLLong * _Nullable)expirationDate instructionForPatient:(NSString * _Nullable)instructionForPatient instructionForReimbursement:(NSString * _Nullable)instructionForReimbursement commentForDelivery:(NSString * _Nullable)commentForDelivery drugRoute:(NSString * _Nullable)drugRoute temporality:(NSString * _Nullable)temporality frequency:(CDSSLCardinal_sdkCodeStub * _Nullable)frequency reimbursementReason:(CDSSLCardinal_sdkCodeStub * _Nullable)reimbursementReason substitutionAllowed:(CDSSLBoolean * _Nullable)substitutionAllowed beginMoment:(CDSSLLong * _Nullable)beginMoment endMoment:(CDSSLLong * _Nullable)endMoment deliveryMoment:(CDSSLLong * _Nullable)deliveryMoment endExecutionMoment:(CDSSLLong * _Nullable)endExecutionMoment duration:(CDSSLCardinal_sdkDuration * _Nullable)duration renewal:(CDSSLCardinal_sdkRenewal * _Nullable)renewal knownUsage:(CDSSLBoolean * _Nullable)knownUsage regimen:(NSArray<CDSSLCardinal_sdkRegimenItem *> * _Nullable)regimen posology:(NSString * _Nullable)posology agreements:(NSDictionary<NSString *, CDSSLCardinal_sdkParagraphAgreement *> * _Nullable)agreements medicationSchemeIdOnSafe:(NSString * _Nullable)medicationSchemeIdOnSafe medicationSchemeSafeVersion:(CDSSLInt * _Nullable)medicationSchemeSafeVersion medicationSchemeTimeStampOnSafe:(CDSSLLong * _Nullable)medicationSchemeTimeStampOnSafe medicationSchemeDocumentId:(NSString * _Nullable)medicationSchemeDocumentId safeIdName:(NSString * _Nullable)safeIdName idOnSafes:(NSString * _Nullable)idOnSafes timestampOnSafe:(CDSSLLong * _Nullable)timestampOnSafe changeValidated:(CDSSLBoolean * _Nullable)changeValidated newSafeMedication:(CDSSLBoolean * _Nullable)newSafeMedication medicationUse:(NSString * _Nullable)medicationUse beginCondition:(NSString * _Nullable)beginCondition endCondition:(NSString * _Nullable)endCondition origin:(NSString * _Nullable)origin medicationChanged:(CDSSLBoolean * _Nullable)medicationChanged posologyChanged:(CDSSLBoolean * _Nullable)posologyChanged suspension:(NSArray<CDSSLCardinal_sdkSuspension *> * _Nullable)suspension prescriptionRID:(NSString * _Nullable)prescriptionRID status:(CDSSLInt * _Nullable)status __attribute__((swift_name("init(compoundPrescription:substanceProduct:medicinalProduct:numberOfPackages:batch:expirationDate:instructionForPatient:instructionForReimbursement:commentForDelivery:drugRoute:temporality:frequency:reimbursementReason:substitutionAllowed:beginMoment:endMoment:deliveryMoment:endExecutionMoment:duration:renewal:knownUsage:regimen:posology:agreements:medicationSchemeIdOnSafe:medicationSchemeSafeVersion:medicationSchemeTimeStampOnSafe:medicationSchemeDocumentId:safeIdName:idOnSafes:timestampOnSafe:changeValidated:newSafeMedication:medicationUse:beginCondition:endCondition:origin:medicationChanged:posologyChanged:suspension:prescriptionRID:status:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMedicationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkMedication *)doCopyCompoundPrescription:(NSString * _Nullable)compoundPrescription substanceProduct:(CDSSLCardinal_sdkSubstanceproduct * _Nullable)substanceProduct medicinalProduct:(CDSSLCardinal_sdkMedicinalproduct * _Nullable)medicinalProduct numberOfPackages:(CDSSLInt * _Nullable)numberOfPackages batch:(NSString * _Nullable)batch expirationDate:(CDSSLLong * _Nullable)expirationDate instructionForPatient:(NSString * _Nullable)instructionForPatient instructionForReimbursement:(NSString * _Nullable)instructionForReimbursement commentForDelivery:(NSString * _Nullable)commentForDelivery drugRoute:(NSString * _Nullable)drugRoute temporality:(NSString * _Nullable)temporality frequency:(CDSSLCardinal_sdkCodeStub * _Nullable)frequency reimbursementReason:(CDSSLCardinal_sdkCodeStub * _Nullable)reimbursementReason substitutionAllowed:(CDSSLBoolean * _Nullable)substitutionAllowed beginMoment:(CDSSLLong * _Nullable)beginMoment endMoment:(CDSSLLong * _Nullable)endMoment deliveryMoment:(CDSSLLong * _Nullable)deliveryMoment endExecutionMoment:(CDSSLLong * _Nullable)endExecutionMoment duration:(CDSSLCardinal_sdkDuration * _Nullable)duration renewal:(CDSSLCardinal_sdkRenewal * _Nullable)renewal knownUsage:(CDSSLBoolean * _Nullable)knownUsage regimen:(NSArray<CDSSLCardinal_sdkRegimenItem *> * _Nullable)regimen posology:(NSString * _Nullable)posology agreements:(NSDictionary<NSString *, CDSSLCardinal_sdkParagraphAgreement *> * _Nullable)agreements medicationSchemeIdOnSafe:(NSString * _Nullable)medicationSchemeIdOnSafe medicationSchemeSafeVersion:(CDSSLInt * _Nullable)medicationSchemeSafeVersion medicationSchemeTimeStampOnSafe:(CDSSLLong * _Nullable)medicationSchemeTimeStampOnSafe medicationSchemeDocumentId:(NSString * _Nullable)medicationSchemeDocumentId safeIdName:(NSString * _Nullable)safeIdName idOnSafes:(NSString * _Nullable)idOnSafes timestampOnSafe:(CDSSLLong * _Nullable)timestampOnSafe changeValidated:(CDSSLBoolean * _Nullable)changeValidated newSafeMedication:(CDSSLBoolean * _Nullable)newSafeMedication medicationUse:(NSString * _Nullable)medicationUse beginCondition:(NSString * _Nullable)beginCondition endCondition:(NSString * _Nullable)endCondition origin:(NSString * _Nullable)origin medicationChanged:(CDSSLBoolean * _Nullable)medicationChanged posologyChanged:(CDSSLBoolean * _Nullable)posologyChanged suspension:(NSArray<CDSSLCardinal_sdkSuspension *> * _Nullable)suspension prescriptionRID:(NSString * _Nullable)prescriptionRID status:(CDSSLInt * _Nullable)status __attribute__((swift_name("doCopy(compoundPrescription:substanceProduct:medicinalProduct:numberOfPackages:batch:expirationDate:instructionForPatient:instructionForReimbursement:commentForDelivery:drugRoute:temporality:frequency:reimbursementReason:substitutionAllowed:beginMoment:endMoment:deliveryMoment:endExecutionMoment:duration:renewal:knownUsage:regimen:posology:agreements:medicationSchemeIdOnSafe:medicationSchemeSafeVersion:medicationSchemeTimeStampOnSafe:medicationSchemeDocumentId:safeIdName:idOnSafes:timestampOnSafe:changeValidated:newSafeMedication:medicationUse:beginCondition:endCondition:origin:medicationChanged:posologyChanged:suspension:prescriptionRID:status:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSDictionary<NSString *, CDSSLCardinal_sdkParagraphAgreement *> * _Nullable agreements __attribute__((swift_name("agreements")));
@property (readonly) NSString * _Nullable batch __attribute__((swift_name("batch")));
@property (readonly) NSString * _Nullable beginCondition __attribute__((swift_name("beginCondition")));
@property (readonly) CDSSLLong * _Nullable beginMoment __attribute__((swift_name("beginMoment")));
@property (readonly) CDSSLBoolean * _Nullable changeValidated __attribute__((swift_name("changeValidated")));
@property (readonly) NSString * _Nullable commentForDelivery __attribute__((swift_name("commentForDelivery")));
@property (readonly) NSString * _Nullable compoundPrescription __attribute__((swift_name("compoundPrescription")));
@property (readonly) CDSSLLong * _Nullable deliveryMoment __attribute__((swift_name("deliveryMoment")));
@property (readonly) NSString * _Nullable drugRoute __attribute__((swift_name("drugRoute")));
@property (readonly) CDSSLCardinal_sdkDuration * _Nullable duration __attribute__((swift_name("duration")));
@property (readonly) NSString * _Nullable endCondition __attribute__((swift_name("endCondition")));
@property (readonly) CDSSLLong * _Nullable endExecutionMoment __attribute__((swift_name("endExecutionMoment")));
@property (readonly) CDSSLLong * _Nullable endMoment __attribute__((swift_name("endMoment")));
@property (readonly) CDSSLLong * _Nullable expirationDate __attribute__((swift_name("expirationDate")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable frequency __attribute__((swift_name("frequency")));
@property (readonly) NSString * _Nullable idOnSafes __attribute__((swift_name("idOnSafes")));
@property (readonly) NSString * _Nullable instructionForPatient __attribute__((swift_name("instructionForPatient")));
@property (readonly) NSString * _Nullable instructionForReimbursement __attribute__((swift_name("instructionForReimbursement")));
@property (readonly) CDSSLBoolean * _Nullable knownUsage __attribute__((swift_name("knownUsage")));
@property (readonly) CDSSLBoolean * _Nullable medicationChanged __attribute__((swift_name("medicationChanged")));
@property (readonly) NSString * _Nullable medicationSchemeDocumentId __attribute__((swift_name("medicationSchemeDocumentId")));
@property (readonly) NSString * _Nullable medicationSchemeIdOnSafe __attribute__((swift_name("medicationSchemeIdOnSafe")));
@property (readonly) CDSSLInt * _Nullable medicationSchemeSafeVersion __attribute__((swift_name("medicationSchemeSafeVersion")));
@property (readonly) CDSSLLong * _Nullable medicationSchemeTimeStampOnSafe __attribute__((swift_name("medicationSchemeTimeStampOnSafe")));
@property (readonly) NSString * _Nullable medicationUse __attribute__((swift_name("medicationUse")));
@property (readonly) CDSSLCardinal_sdkMedicinalproduct * _Nullable medicinalProduct __attribute__((swift_name("medicinalProduct")));
@property (readonly, getter=doNewSafeMedication) CDSSLBoolean * _Nullable newSafeMedication __attribute__((swift_name("newSafeMedication")));
@property (readonly) CDSSLInt * _Nullable numberOfPackages __attribute__((swift_name("numberOfPackages")));
@property (readonly) NSString * _Nullable origin __attribute__((swift_name("origin")));
@property (readonly) NSString * _Nullable posology __attribute__((swift_name("posology")));
@property (readonly) CDSSLBoolean * _Nullable posologyChanged __attribute__((swift_name("posologyChanged")));
@property (readonly) NSString * _Nullable prescriptionRID __attribute__((swift_name("prescriptionRID")));
@property (readonly) NSArray<CDSSLCardinal_sdkRegimenItem *> * _Nullable regimen __attribute__((swift_name("regimen")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable reimbursementReason __attribute__((swift_name("reimbursementReason")));
@property (readonly) CDSSLCardinal_sdkRenewal * _Nullable renewal __attribute__((swift_name("renewal")));
@property (readonly) NSString * _Nullable safeIdName __attribute__((swift_name("safeIdName")));
@property (readonly) CDSSLInt * _Nullable status __attribute__((swift_name("status")));
@property (readonly) CDSSLCardinal_sdkSubstanceproduct * _Nullable substanceProduct __attribute__((swift_name("substanceProduct")));
@property (readonly) CDSSLBoolean * _Nullable substitutionAllowed __attribute__((swift_name("substitutionAllowed")));
@property (readonly) NSArray<CDSSLCardinal_sdkSuspension *> * _Nullable suspension __attribute__((swift_name("suspension")));
@property (readonly) NSString * _Nullable temporality __attribute__((swift_name("temporality")));
@property (readonly) CDSSLLong * _Nullable timestampOnSafe __attribute__((swift_name("timestampOnSafe")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTimeSeries")))
@interface CDSSLCardinal_sdkTimeSeries : CDSSLBase
- (instancetype)initWithFields:(NSArray<NSString *> *)fields samples:(NSArray<NSArray<CDSSLDouble *> *> *)samples min:(NSArray<CDSSLDouble *> *)min max:(NSArray<CDSSLDouble *> *)max mean:(NSArray<CDSSLDouble *> *)mean median:(NSArray<CDSSLDouble *> *)median variance:(NSArray<CDSSLDouble *> *)variance __attribute__((swift_name("init(fields:samples:min:max:mean:median:variance:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTimeSeriesCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkTimeSeries *)doCopyFields:(NSArray<NSString *> *)fields samples:(NSArray<NSArray<CDSSLDouble *> *> *)samples min:(NSArray<CDSSLDouble *> *)min max:(NSArray<CDSSLDouble *> *)max mean:(NSArray<CDSSLDouble *> *)mean median:(NSArray<CDSSLDouble *> *)median variance:(NSArray<CDSSLDouble *> *)variance __attribute__((swift_name("doCopy(fields:samples:min:max:mean:median:variance:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<NSString *> *fields __attribute__((swift_name("fields")));
@property (readonly) NSArray<CDSSLDouble *> *max __attribute__((swift_name("max")));
@property (readonly) NSArray<CDSSLDouble *> *mean __attribute__((swift_name("mean")));
@property (readonly) NSArray<CDSSLDouble *> *median __attribute__((swift_name("median")));
@property (readonly) NSArray<CDSSLDouble *> *min __attribute__((swift_name("min")));
@property (readonly) NSArray<NSArray<CDSSLDouble *> *> *samples __attribute__((swift_name("samples")));
@property (readonly) NSArray<CDSSLDouble *> *variance __attribute__((swift_name("variance")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLinkQualification.Companion")))
@interface CDSSLCardinal_sdkLinkQualificationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkLinkQualificationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedContent.Companion")))
@interface CDSSLCardinal_sdkEncryptedContentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedContentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedContent.Companion")))
@interface CDSSLCardinal_sdkDecryptedContentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedContentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShamirUpdateRequest.Companion")))
@interface CDSSLCardinal_sdkShamirUpdateRequestCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkShamirUpdateRequestCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDeletedAttachment.Companion")))
@interface CDSSLCardinal_sdkDeletedAttachmentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDeletedAttachmentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentLocation.Companion")))
@interface CDSSLCardinal_sdkDocumentLocationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDocumentLocationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentStatus.Companion")))
@interface CDSSLCardinal_sdkDocumentStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDocumentStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentType.Companion")))
@interface CDSSLCardinal_sdkDocumentTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDocumentTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDataAttachment.Companion")))
@interface CDSSLCardinal_sdkDataAttachmentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDataAttachmentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMessageAttachment.Companion")))
@interface CDSSLCardinal_sdkMessageAttachmentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMessageAttachmentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMessageReadStatus.Companion")))
@interface CDSSLCardinal_sdkMessageReadStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMessageReadStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAction")))
@interface CDSSLCardinal_sdkAction : CDSSLBase
- (instancetype)initWithLaunchers:(NSArray<CDSSLCardinal_sdkLauncher *> * _Nullable)launchers expression:(NSString * _Nullable)expression states:(NSArray<CDSSLCardinal_sdkState *> * _Nullable)states __attribute__((swift_name("init(launchers:expression:states:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkActionCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkAction *)doCopyLaunchers:(NSArray<CDSSLCardinal_sdkLauncher *> * _Nullable)launchers expression:(NSString * _Nullable)expression states:(NSArray<CDSSLCardinal_sdkState *> * _Nullable)states __attribute__((swift_name("doCopy(launchers:expression:states:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable expression __attribute__((swift_name("expression")));
@property (readonly) NSArray<CDSSLCardinal_sdkLauncher *> * _Nullable launchers __attribute__((swift_name("launchers")));
@property (readonly) NSArray<CDSSLCardinal_sdkState *> * _Nullable states __attribute__((swift_name("states")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSection")))
@interface CDSSLCardinal_sdkSection : CDSSLBase
- (instancetype)initWithSection:(NSString *)section fields:(NSArray<id<CDSSLCardinal_sdkStructureElement>> *)fields description:(NSString * _Nullable)description keywords:(NSArray<NSString *> * _Nullable)keywords __attribute__((swift_name("init(section:fields:description:keywords:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSectionCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkSection *)doCopySection:(NSString *)section fields:(NSArray<id<CDSSLCardinal_sdkStructureElement>> *)fields description:(NSString * _Nullable)description keywords:(NSArray<NSString *> * _Nullable)keywords __attribute__((swift_name("doCopy(section:fields:description:keywords:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable description_ __attribute__((swift_name("description_")));
@property (readonly) NSArray<id<CDSSLCardinal_sdkStructureElement>> *fields __attribute__((swift_name("fields")));
@property (readonly) NSArray<NSString *> * _Nullable keywords __attribute__((swift_name("keywords")));
@property (readonly) NSString *section __attribute__((swift_name("section")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFormTemplateLayout.Companion")))
@interface CDSSLCardinal_sdkFormTemplateLayoutCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkFormTemplateLayoutCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDocumentGroup.Companion")))
@interface CDSSLCardinal_sdkDocumentGroupCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDocumentGroupCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCareTeamMemberType")))
@interface CDSSLCardinal_sdkCareTeamMemberType : CDSSLKotlinEnum<CDSSLCardinal_sdkCareTeamMemberType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkCareTeamMemberTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkCareTeamMemberType *physician __attribute__((swift_name("physician")));
@property (class, readonly) CDSSLCardinal_sdkCareTeamMemberType *specialist __attribute__((swift_name("specialist")));
@property (class, readonly) CDSSLCardinal_sdkCareTeamMemberType *other __attribute__((swift_name("other")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkCareTeamMemberType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkCareTeamMemberType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLaterality.Companion")))
@interface CDSSLCardinal_sdkLateralityCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkLateralityCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedPlanOfAction.Companion")))
@interface CDSSLCardinal_sdkDecryptedPlanOfActionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedPlanOfActionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedEpisode.Companion")))
@interface CDSSLCardinal_sdkDecryptedEpisodeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedEpisodeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedCareTeamMember.Companion")))
@interface CDSSLCardinal_sdkDecryptedCareTeamMemberCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedCareTeamMemberCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedPlanOfAction.Companion")))
@interface CDSSLCardinal_sdkEncryptedPlanOfActionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedPlanOfActionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedEpisode.Companion")))
@interface CDSSLCardinal_sdkEncryptedEpisodeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedEpisodeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedCareTeamMember.Companion")))
@interface CDSSLCardinal_sdkEncryptedCareTeamMemberCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedCareTeamMemberCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkIdentityDocumentReader.Companion")))
@interface CDSSLCardinal_sdkIdentityDocumentReaderCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkIdentityDocumentReaderCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkInvoiceInterventionType.Companion")))
@interface CDSSLCardinal_sdkInvoiceInterventionTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkInvoiceInterventionTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPaymentType.Companion")))
@interface CDSSLCardinal_sdkPaymentTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPaymentTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPayment.Companion")))
@interface CDSSLCardinal_sdkPaymentCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPaymentCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedInvoicingCode.Companion")))
@interface CDSSLCardinal_sdkDecryptedInvoicingCodeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedInvoicingCodeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTaskStatus.Companion")))
@interface CDSSLCardinal_sdkTaskStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTaskStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedInsurability.Companion")))
@interface CDSSLCardinal_sdkDecryptedInsurabilityCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedInsurabilityCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedPatientHealthCareParty.Companion")))
@interface CDSSLCardinal_sdkDecryptedPatientHealthCarePartyCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedPatientHealthCarePartyCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedFinancialInstitutionInformation.Companion")))
@interface CDSSLCardinal_sdkDecryptedFinancialInstitutionInformationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedFinancialInstitutionInformationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedMedicalHouseContract.Companion")))
@interface CDSSLCardinal_sdkDecryptedMedicalHouseContractCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedMedicalHouseContractCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedInsurability.Companion")))
@interface CDSSLCardinal_sdkEncryptedInsurabilityCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedInsurabilityCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedPatientHealthCareParty.Companion")))
@interface CDSSLCardinal_sdkEncryptedPatientHealthCarePartyCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedPatientHealthCarePartyCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedFinancialInstitutionInformation.Companion")))
@interface CDSSLCardinal_sdkEncryptedFinancialInstitutionInformationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedFinancialInstitutionInformationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedMedicalHouseContract.Companion")))
@interface CDSSLCardinal_sdkEncryptedMedicalHouseContractCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedMedicalHouseContractCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEntityWithEncryptionMetadataTypeName.Companion")))
@interface CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeNameCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEntityWithEncryptionMetadataTypeNameCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptions.ShareableEntityCompanion")))
@interface CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntityCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkShareAllPatientDataOptionsShareableEntityCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptionsSharePatientDataError")))
@protocol CDSSLCardinal_sdkShareAllPatientDataOptionsSharePatientDataError
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkShareAllPatientDataOptions.EntityResultCompanion")))
@interface CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResultCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkShareAllPatientDataOptionsEntityResultCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReceiptBlobType.Companion")))
@interface CDSSLCardinal_sdkReceiptBlobTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReceiptBlobTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTimeTableHour")))
@interface CDSSLCardinal_sdkTimeTableHour : CDSSLBase
- (instancetype)initWithStartHour:(CDSSLLong * _Nullable)startHour endHour:(CDSSLLong * _Nullable)endHour __attribute__((swift_name("init(startHour:endHour:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTimeTableHourCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkTimeTableHour *)doCopyStartHour:(CDSSLLong * _Nullable)startHour endHour:(CDSSLLong * _Nullable)endHour __attribute__((swift_name("doCopy(startHour:endHour:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable endHour __attribute__((swift_name("endHour")));
@property (readonly) CDSSLLong * _Nullable startHour __attribute__((swift_name("startHour")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTimeTableItem.Companion")))
@interface CDSSLCardinal_sdkTimeTableItemCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTimeTableItemCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRight.Companion")))
@interface CDSSLCardinal_sdkRightCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRightCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPeriodicity.Companion")))
@interface CDSSLCardinal_sdkPeriodicityCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPeriodicityCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCodeFlag.Companion")))
@interface CDSSLCardinal_sdkCodeFlagCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCodeFlagCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAppendixType.Companion")))
@interface CDSSLCardinal_sdkAppendixTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAppendixTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReportVersion.Companion")))
@interface CDSSLCardinal_sdkReportVersionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReportVersionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFrontEndMigrationStatus.Companion")))
@interface CDSSLCardinal_sdkFrontEndMigrationStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkFrontEndMigrationStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkOperationToken.Companion")))
@interface CDSSLCardinal_sdkOperationTokenCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkOperationTokenCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAuthenticationClass.Companion")))
@interface CDSSLCardinal_sdkAuthenticationClassCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAuthenticationClassCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDatabaseSynchronization")))
@interface CDSSLCardinal_sdkDatabaseSynchronization : CDSSLBase
- (instancetype)initWithSource:(NSString * _Nullable)source target:(NSString * _Nullable)target filter:(NSString * _Nullable)filter localTarget:(CDSSLCardinal_sdkDatabaseSynchronizationTarget * _Nullable)localTarget __attribute__((swift_name("init(source:target:filter:localTarget:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDatabaseSynchronizationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDatabaseSynchronization *)doCopySource:(NSString * _Nullable)source target:(NSString * _Nullable)target filter:(NSString * _Nullable)filter localTarget:(CDSSLCardinal_sdkDatabaseSynchronizationTarget * _Nullable)localTarget __attribute__((swift_name("doCopy(source:target:filter:localTarget:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString * _Nullable filter __attribute__((swift_name("filter")));
@property (readonly) CDSSLCardinal_sdkDatabaseSynchronizationTarget * _Nullable localTarget __attribute__((swift_name("localTarget")));
@property (readonly) NSString * _Nullable source __attribute__((swift_name("source")));
@property (readonly) NSString * _Nullable target __attribute__((swift_name("target")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReplication.Companion")))
@interface CDSSLCardinal_sdkReplicationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReplicationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRoleConfiguration.SourceCompanion")))
@interface CDSSLCardinal_sdkRoleConfigurationSourceCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRoleConfigurationSourceCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDatabaseInfo.Companion")))
@interface CDSSLCardinal_sdkDatabaseInfoCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDatabaseInfoCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkView.Companion")))
@interface CDSSLCardinal_sdkViewCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkViewCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkHealthcarePartyStatus.Companion")))
@interface CDSSLCardinal_sdkHealthcarePartyStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkHealthcarePartyStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkHealthcarePartyHistoryStatus.Companion")))
@interface CDSSLCardinal_sdkHealthcarePartyHistoryStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkHealthcarePartyHistoryStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTelecomType.Companion")))
@interface CDSSLCardinal_sdkTelecomTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTelecomTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFlatRateType")))
@interface CDSSLCardinal_sdkFlatRateType : CDSSLKotlinEnum<CDSSLCardinal_sdkFlatRateType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkFlatRateTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkFlatRateType *physician __attribute__((swift_name("physician")));
@property (class, readonly) CDSSLCardinal_sdkFlatRateType *physiotherapist __attribute__((swift_name("physiotherapist")));
@property (class, readonly) CDSSLCardinal_sdkFlatRateType *nurse __attribute__((swift_name("nurse")));
@property (class, readonly) CDSSLCardinal_sdkFlatRateType *ptd __attribute__((swift_name("ptd")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkFlatRateType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkFlatRateType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedFlatRateTarification.Companion")))
@interface CDSSLCardinal_sdkDecryptedFlatRateTarificationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedFlatRateTarificationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkKeywordSubword.Companion")))
@interface CDSSLCardinal_sdkKeywordSubwordCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkKeywordSubwordCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkPredicate")))
@protocol CDSSLCardinal_sdkPredicate
@required
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRemoteAuthentication")))
@interface CDSSLCardinal_sdkRemoteAuthentication : CDSSLBase
- (instancetype)initWithBasic:(CDSSLCardinal_sdkBasic * _Nullable)basic __attribute__((swift_name("init(basic:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRemoteAuthenticationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRemoteAuthentication *)doCopyBasic:(CDSSLCardinal_sdkBasic * _Nullable)basic __attribute__((swift_name("doCopy(basic:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkBasic * _Nullable basic __attribute__((swift_name("basic")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRemote.Companion")))
@interface CDSSLCardinal_sdkRemoteCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRemoteCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/datetime/serializers/LocalDateTimeIso8601Serializer))
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeLocalDateTime")))
@interface CDSSLKotlinx_datetimeLocalDateTime : CDSSLBase <CDSSLKotlinComparable>
- (instancetype)initWithDate:(CDSSLKotlinx_datetimeLocalDate *)date time:(CDSSLKotlinx_datetimeLocalTime *)time __attribute__((swift_name("init(date:time:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithYear:(int32_t)year monthNumber:(int32_t)monthNumber dayOfMonth:(int32_t)dayOfMonth hour:(int32_t)hour minute:(int32_t)minute second:(int32_t)second nanosecond:(int32_t)nanosecond __attribute__((swift_name("init(year:monthNumber:dayOfMonth:hour:minute:second:nanosecond:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithYear:(int32_t)year month:(CDSSLKotlinx_datetimeMonth *)month dayOfMonth:(int32_t)dayOfMonth hour:(int32_t)hour minute:(int32_t)minute second:(int32_t)second nanosecond:(int32_t)nanosecond __attribute__((swift_name("init(year:month:dayOfMonth:hour:minute:second:nanosecond:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeLocalDateTimeCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(CDSSLKotlinx_datetimeLocalDateTime *)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLKotlinx_datetimeLocalDate *date __attribute__((swift_name("date")));
@property (readonly) int32_t dayOfMonth __attribute__((swift_name("dayOfMonth")));
@property (readonly) CDSSLKotlinx_datetimeDayOfWeek *dayOfWeek __attribute__((swift_name("dayOfWeek")));
@property (readonly) int32_t dayOfYear __attribute__((swift_name("dayOfYear")));
@property (readonly) int32_t hour __attribute__((swift_name("hour")));
@property (readonly) int32_t minute __attribute__((swift_name("minute")));
@property (readonly) CDSSLKotlinx_datetimeMonth *month __attribute__((swift_name("month")));
@property (readonly) int32_t monthNumber __attribute__((swift_name("monthNumber")));
@property (readonly) int32_t nanosecond __attribute__((swift_name("nanosecond")));
@property (readonly) int32_t second __attribute__((swift_name("second")));
@property (readonly) CDSSLKotlinx_datetimeLocalTime *time __attribute__((swift_name("time")));
@property (readonly) int32_t year __attribute__((swift_name("year")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/datetime/serializers/UtcOffsetSerializer))
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeUtcOffset")))
@interface CDSSLKotlinx_datetimeUtcOffset : CDSSLBase
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeUtcOffsetCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t totalSeconds __attribute__((swift_name("totalSeconds")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/datetime/serializers/TimeZoneSerializer))
*/
__attribute__((swift_name("Kotlinx_datetimeTimeZone")))
@interface CDSSLKotlinx_datetimeTimeZone : CDSSLBase
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeTimeZoneCompanion *companion __attribute__((swift_name("companion")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (CDSSLKotlinx_datetimeInstant *)toInstant:(CDSSLKotlinx_datetimeLocalDateTime *)receiver __attribute__((swift_name("toInstant(_:)")));
- (CDSSLKotlinx_datetimeLocalDateTime *)toLocalDateTime:(CDSSLKotlinx_datetimeInstant *)receiver __attribute__((swift_name("toLocalDateTime(_:)")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkZonedDateTime.Companion")))
@interface CDSSLCardinal_sdkZonedDateTimeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkZonedDateTimeCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLCardinal_sdkZonedDateTime *)fromIso8601StringIsoDateString:(NSString *)isoDateString __attribute__((swift_name("fromIso8601String(isoDateString:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReplicationStats.Companion")))
@interface CDSSLCardinal_sdkReplicationStatsCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReplicationStatsCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedValorisation.Companion")))
@interface CDSSLCardinal_sdkDecryptedValorisationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedValorisationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLetterValue.Companion")))
@interface CDSSLCardinal_sdkLetterValueCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkLetterValueCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTypedValuesType")))
@interface CDSSLCardinal_sdkTypedValuesType : CDSSLKotlinEnum<CDSSLCardinal_sdkTypedValuesType *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTypedValuesTypeCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkTypedValuesType *boolean __attribute__((swift_name("boolean")));
@property (class, readonly) CDSSLCardinal_sdkTypedValuesType *integer __attribute__((swift_name("integer")));
@property (class, readonly) CDSSLCardinal_sdkTypedValuesType *double_ __attribute__((swift_name("double_")));
@property (class, readonly) CDSSLCardinal_sdkTypedValuesType *string __attribute__((swift_name("string")));
@property (class, readonly) CDSSLCardinal_sdkTypedValuesType *date __attribute__((swift_name("date")));
@property (class, readonly) CDSSLCardinal_sdkTypedValuesType *clob __attribute__((swift_name("clob")));
@property (class, readonly) CDSSLCardinal_sdkTypedValuesType *json __attribute__((swift_name("json")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkTypedValuesType *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkTypedValuesType *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPropertyTypeStub.Companion")))
@interface CDSSLCardinal_sdkPropertyTypeStubCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPropertyTypeStubCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedTypedValue.Companion")))
@interface CDSSLCardinal_sdkEncryptedTypedValueCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedTypedValueCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlin.SinceKotlin(version="1.1")
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKVariance")))
@interface CDSSLKotlinKVariance : CDSSLKotlinEnum<CDSSLKotlinKVariance *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) CDSSLKotlinKVariance *invariant __attribute__((swift_name("invariant")));
@property (class, readonly) CDSSLKotlinKVariance *in __attribute__((swift_name("in")));
@property (class, readonly) CDSSLKotlinKVariance *out __attribute__((swift_name("out")));
+ (CDSSLKotlinArray<CDSSLKotlinKVariance *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLKotlinKVariance *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("KotlinKTypeProjection.Companion")))
@interface CDSSLKotlinKTypeProjectionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinKTypeProjectionCompanion *shared __attribute__((swift_name("shared")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (CDSSLKotlinKTypeProjection *)contravariantType:(id<CDSSLKotlinKType>)type __attribute__((swift_name("contravariant(type:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (CDSSLKotlinKTypeProjection *)covariantType:(id<CDSSLKotlinKType>)type __attribute__((swift_name("covariant(type:)")));

/**
 * @note annotations
 *   kotlin.jvm.JvmStatic
*/
- (CDSSLKotlinKTypeProjection *)invariantType:(id<CDSSLKotlinKType>)type __attribute__((swift_name("invariant(type:)")));
@property (readonly) CDSSLKotlinKTypeProjection *STAR __attribute__((swift_name("STAR")));
@end

__attribute__((swift_name("Kotlinx_datetimeDateTimeFormat")))
@protocol CDSSLKotlinx_datetimeDateTimeFormat
@required
- (NSString *)formatValue:(id _Nullable)value __attribute__((swift_name("format(value:)")));
- (id<CDSSLKotlinAppendable>)formatToAppendable:(id<CDSSLKotlinAppendable>)appendable value:(id _Nullable)value __attribute__((swift_name("formatTo(appendable:value:)")));
- (id _Nullable)parseInput:(id)input __attribute__((swift_name("parse(input:)")));
- (id _Nullable)parseOrNullInput:(id)input __attribute__((swift_name("parseOrNull(input:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSecureDelegation.Companion")))
@interface CDSSLCardinal_sdkSecureDelegationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSecureDelegationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEmployer.Companion")))
@interface CDSSLCardinal_sdkEmployerCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEmployerCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkContractChangeType.Companion")))
@interface CDSSLCardinal_sdkContractChangeTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkContractChangeTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMhcSignatureType.Companion")))
@interface CDSSLCardinal_sdkMhcSignatureTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMhcSignatureTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSuspensionReason.Companion")))
@interface CDSSLCardinal_sdkSuspensionReasonCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSuspensionReasonCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPartnershipType.Companion")))
@interface CDSSLCardinal_sdkPartnershipTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPartnershipTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPartnershipStatus.Companion")))
@interface CDSSLCardinal_sdkPartnershipStatusCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPartnershipStatusCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReferralPeriod.Companion")))
@interface CDSSLCardinal_sdkReferralPeriodCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReferralPeriodCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPatientHealthCarePartyType.Companion")))
@interface CDSSLCardinal_sdkPatientHealthCarePartyTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPatientHealthCarePartyTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAddressType.Companion")))
@interface CDSSLCardinal_sdkAddressTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAddressTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkPersonNameUse.Companion")))
@interface CDSSLCardinal_sdkPersonNameUseCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkPersonNameUseCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedTypedValue.Companion")))
@interface CDSSLCardinal_sdkDecryptedTypedValueCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedTypedValueCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDecryptedTelecom.Companion")))
@interface CDSSLCardinal_sdkDecryptedTelecomCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDecryptedTelecomCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkEncryptedTelecom.Companion")))
@interface CDSSLCardinal_sdkEncryptedTelecomCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkEncryptedTelecomCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkServiceLink.Companion")))
@interface CDSSLCardinal_sdkServiceLinkCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkServiceLinkCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReferenceRange")))
@interface CDSSLCardinal_sdkReferenceRange : CDSSLBase
- (instancetype)initWithLow:(CDSSLDouble * _Nullable)low high:(CDSSLDouble * _Nullable)high stringValue:(NSString * _Nullable)stringValue tags:(NSArray<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSArray<CDSSLCardinal_sdkCodeStub *> *)codes notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes age:(CDSSLCardinal_sdkRange * _Nullable)age __attribute__((swift_name("init(low:high:stringValue:tags:codes:notes:age:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkReferenceRangeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkReferenceRange *)doCopyLow:(CDSSLDouble * _Nullable)low high:(CDSSLDouble * _Nullable)high stringValue:(NSString * _Nullable)stringValue tags:(NSArray<CDSSLCardinal_sdkCodeStub *> *)tags codes:(NSArray<CDSSLCardinal_sdkCodeStub *> *)codes notes:(NSArray<CDSSLCardinal_sdkAnnotation *> *)notes age:(CDSSLCardinal_sdkRange * _Nullable)age __attribute__((swift_name("doCopy(low:high:stringValue:tags:codes:notes:age:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkRange * _Nullable age __attribute__((swift_name("age")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *codes __attribute__((swift_name("codes")));
@property (readonly) CDSSLDouble * _Nullable high __attribute__((swift_name("high")));
@property (readonly) CDSSLDouble * _Nullable low __attribute__((swift_name("low")));
@property (readonly) NSArray<CDSSLCardinal_sdkAnnotation *> *notes __attribute__((swift_name("notes")));
@property (readonly) NSString * _Nullable stringValue __attribute__((swift_name("stringValue")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *tags __attribute__((swift_name("tags")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMeasure.Companion")))
@interface CDSSLCardinal_sdkMeasureCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMeasureCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSubstanceproduct")))
@interface CDSSLCardinal_sdkSubstanceproduct : CDSSLBase
- (instancetype)initWithIntendedcds:(NSArray<CDSSLCardinal_sdkCodeStub *> *)intendedcds deliveredcds:(NSArray<CDSSLCardinal_sdkCodeStub *> *)deliveredcds intendedname:(NSString * _Nullable)intendedname deliveredname:(NSString * _Nullable)deliveredname productId:(NSString * _Nullable)productId __attribute__((swift_name("init(intendedcds:deliveredcds:intendedname:deliveredname:productId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSubstanceproductCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkSubstanceproduct *)doCopyIntendedcds:(NSArray<CDSSLCardinal_sdkCodeStub *> *)intendedcds deliveredcds:(NSArray<CDSSLCardinal_sdkCodeStub *> *)deliveredcds intendedname:(NSString * _Nullable)intendedname deliveredname:(NSString * _Nullable)deliveredname productId:(NSString * _Nullable)productId __attribute__((swift_name("doCopy(intendedcds:deliveredcds:intendedname:deliveredname:productId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *deliveredcds __attribute__((swift_name("deliveredcds")));
@property (readonly) NSString * _Nullable deliveredname __attribute__((swift_name("deliveredname")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *intendedcds __attribute__((swift_name("intendedcds")));
@property (readonly) NSString * _Nullable intendedname __attribute__((swift_name("intendedname")));
@property (readonly) NSString * _Nullable productId __attribute__((swift_name("productId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMedicinalproduct")))
@interface CDSSLCardinal_sdkMedicinalproduct : CDSSLBase
- (instancetype)initWithIntendedcds:(NSArray<CDSSLCardinal_sdkCodeStub *> *)intendedcds deliveredcds:(NSArray<CDSSLCardinal_sdkCodeStub *> *)deliveredcds intendedname:(NSString * _Nullable)intendedname deliveredname:(NSString * _Nullable)deliveredname productId:(NSString * _Nullable)productId __attribute__((swift_name("init(intendedcds:deliveredcds:intendedname:deliveredname:productId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkMedicinalproductCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkMedicinalproduct *)doCopyIntendedcds:(NSArray<CDSSLCardinal_sdkCodeStub *> *)intendedcds deliveredcds:(NSArray<CDSSLCardinal_sdkCodeStub *> *)deliveredcds intendedname:(NSString * _Nullable)intendedname deliveredname:(NSString * _Nullable)deliveredname productId:(NSString * _Nullable)productId __attribute__((swift_name("doCopy(intendedcds:deliveredcds:intendedname:deliveredname:productId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *deliveredcds __attribute__((swift_name("deliveredcds")));
@property (readonly) NSString * _Nullable deliveredname __attribute__((swift_name("deliveredname")));
@property (readonly) NSArray<CDSSLCardinal_sdkCodeStub *> *intendedcds __attribute__((swift_name("intendedcds")));
@property (readonly) NSString * _Nullable intendedname __attribute__((swift_name("intendedname")));
@property (readonly) NSString * _Nullable productId __attribute__((swift_name("productId")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDuration")))
@interface CDSSLCardinal_sdkDuration : CDSSLBase
- (instancetype)initWithValue:(CDSSLDouble * _Nullable)value unit:(CDSSLCardinal_sdkCodeStub * _Nullable)unit __attribute__((swift_name("init(value:unit:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDurationCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkDuration *)doCopyValue:(CDSSLDouble * _Nullable)value unit:(CDSSLCardinal_sdkCodeStub * _Nullable)unit __attribute__((swift_name("doCopy(value:unit:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable unit __attribute__((swift_name("unit")));
@property (readonly) CDSSLDouble * _Nullable value __attribute__((swift_name("value")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRenewal")))
@interface CDSSLCardinal_sdkRenewal : CDSSLBase
- (instancetype)initWithDecimal:(CDSSLInt * _Nullable)decimal duration:(CDSSLCardinal_sdkDuration * _Nullable)duration __attribute__((swift_name("init(decimal:duration:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRenewalCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRenewal *)doCopyDecimal:(CDSSLInt * _Nullable)decimal duration:(CDSSLCardinal_sdkDuration * _Nullable)duration __attribute__((swift_name("doCopy(decimal:duration:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLInt * _Nullable decimal __attribute__((swift_name("decimal")));
@property (readonly) CDSSLCardinal_sdkDuration * _Nullable duration __attribute__((swift_name("duration")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRegimenItem")))
@interface CDSSLCardinal_sdkRegimenItem : CDSSLBase
- (instancetype)initWithDate:(CDSSLLong * _Nullable)date dayNumber:(CDSSLInt * _Nullable)dayNumber weekday:(CDSSLCardinal_sdkWeekday * _Nullable)weekday dayPeriod:(CDSSLCardinal_sdkCodeStub * _Nullable)dayPeriod timeOfDay:(CDSSLLong * _Nullable)timeOfDay administratedQuantity:(CDSSLCardinal_sdkAdministrationQuantity * _Nullable)administratedQuantity __attribute__((swift_name("init(date:dayNumber:weekday:dayPeriod:timeOfDay:administratedQuantity:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRegimenItemCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRegimenItem *)doCopyDate:(CDSSLLong * _Nullable)date dayNumber:(CDSSLInt * _Nullable)dayNumber weekday:(CDSSLCardinal_sdkWeekday * _Nullable)weekday dayPeriod:(CDSSLCardinal_sdkCodeStub * _Nullable)dayPeriod timeOfDay:(CDSSLLong * _Nullable)timeOfDay administratedQuantity:(CDSSLCardinal_sdkAdministrationQuantity * _Nullable)administratedQuantity __attribute__((swift_name("doCopy(date:dayNumber:weekday:dayPeriod:timeOfDay:administratedQuantity:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkAdministrationQuantity * _Nullable administratedQuantity __attribute__((swift_name("administratedQuantity")));
@property (readonly) CDSSLLong * _Nullable date __attribute__((swift_name("date")));
@property (readonly) CDSSLInt * _Nullable dayNumber __attribute__((swift_name("dayNumber")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable dayPeriod __attribute__((swift_name("dayPeriod")));
@property (readonly) CDSSLLong * _Nullable timeOfDay __attribute__((swift_name("timeOfDay")));
@property (readonly) CDSSLCardinal_sdkWeekday * _Nullable weekday __attribute__((swift_name("weekday")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkParagraphAgreement")))
@interface CDSSLCardinal_sdkParagraphAgreement : CDSSLBase
- (instancetype)initWithTimestamp:(CDSSLLong * _Nullable)timestamp paragraph:(NSString * _Nullable)paragraph accepted:(CDSSLBoolean * _Nullable)accepted inTreatment:(CDSSLBoolean * _Nullable)inTreatment canceled:(CDSSLBoolean * _Nullable)canceled careProviderReference:(NSString * _Nullable)careProviderReference decisionReference:(NSString * _Nullable)decisionReference start:(CDSSLLong * _Nullable)start end:(CDSSLLong * _Nullable)end cancelationDate:(CDSSLLong * _Nullable)cancelationDate quantityValue:(CDSSLDouble * _Nullable)quantityValue quantityUnit:(NSString * _Nullable)quantityUnit ioRequestReference:(NSString * _Nullable)ioRequestReference responseType:(NSString * _Nullable)responseType refusalJustification:(NSDictionary<NSString *, NSString *> * _Nullable)refusalJustification verses:(NSSet<CDSSLLong *> * _Nullable)verses coverageType:(NSString * _Nullable)coverageType unitNumber:(CDSSLDouble * _Nullable)unitNumber strength:(CDSSLDouble * _Nullable)strength strengthUnit:(NSString * _Nullable)strengthUnit agreementAppendices:(NSArray<CDSSLCardinal_sdkAgreementAppendix *> * _Nullable)agreementAppendices documentId:(NSString * _Nullable)documentId __attribute__((swift_name("init(timestamp:paragraph:accepted:inTreatment:canceled:careProviderReference:decisionReference:start:end:cancelationDate:quantityValue:quantityUnit:ioRequestReference:responseType:refusalJustification:verses:coverageType:unitNumber:strength:strengthUnit:agreementAppendices:documentId:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkParagraphAgreementCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkParagraphAgreement *)doCopyTimestamp:(CDSSLLong * _Nullable)timestamp paragraph:(NSString * _Nullable)paragraph accepted:(CDSSLBoolean * _Nullable)accepted inTreatment:(CDSSLBoolean * _Nullable)inTreatment canceled:(CDSSLBoolean * _Nullable)canceled careProviderReference:(NSString * _Nullable)careProviderReference decisionReference:(NSString * _Nullable)decisionReference start:(CDSSLLong * _Nullable)start end:(CDSSLLong * _Nullable)end cancelationDate:(CDSSLLong * _Nullable)cancelationDate quantityValue:(CDSSLDouble * _Nullable)quantityValue quantityUnit:(NSString * _Nullable)quantityUnit ioRequestReference:(NSString * _Nullable)ioRequestReference responseType:(NSString * _Nullable)responseType refusalJustification:(NSDictionary<NSString *, NSString *> * _Nullable)refusalJustification verses:(NSSet<CDSSLLong *> * _Nullable)verses coverageType:(NSString * _Nullable)coverageType unitNumber:(CDSSLDouble * _Nullable)unitNumber strength:(CDSSLDouble * _Nullable)strength strengthUnit:(NSString * _Nullable)strengthUnit agreementAppendices:(NSArray<CDSSLCardinal_sdkAgreementAppendix *> * _Nullable)agreementAppendices documentId:(NSString * _Nullable)documentId __attribute__((swift_name("doCopy(timestamp:paragraph:accepted:inTreatment:canceled:careProviderReference:decisionReference:start:end:cancelationDate:quantityValue:quantityUnit:ioRequestReference:responseType:refusalJustification:verses:coverageType:unitNumber:strength:strengthUnit:agreementAppendices:documentId:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLBoolean * _Nullable accepted __attribute__((swift_name("accepted")));
@property (readonly) NSArray<CDSSLCardinal_sdkAgreementAppendix *> * _Nullable agreementAppendices __attribute__((swift_name("agreementAppendices")));
@property (readonly) CDSSLLong * _Nullable cancelationDate __attribute__((swift_name("cancelationDate")));
@property (readonly) CDSSLBoolean * _Nullable canceled __attribute__((swift_name("canceled")));
@property (readonly) NSString * _Nullable careProviderReference __attribute__((swift_name("careProviderReference")));
@property (readonly) NSString * _Nullable coverageType __attribute__((swift_name("coverageType")));
@property (readonly) NSString * _Nullable decisionReference __attribute__((swift_name("decisionReference")));
@property (readonly) NSString * _Nullable documentId __attribute__((swift_name("documentId")));
@property (readonly) CDSSLLong * _Nullable end __attribute__((swift_name("end")));
@property (readonly) CDSSLBoolean * _Nullable inTreatment __attribute__((swift_name("inTreatment")));
@property (readonly) NSString * _Nullable ioRequestReference __attribute__((swift_name("ioRequestReference")));
@property (readonly) NSString * _Nullable paragraph __attribute__((swift_name("paragraph")));
@property (readonly) NSString * _Nullable quantityUnit __attribute__((swift_name("quantityUnit")));
@property (readonly) CDSSLDouble * _Nullable quantityValue __attribute__((swift_name("quantityValue")));
@property (readonly) NSDictionary<NSString *, NSString *> * _Nullable refusalJustification __attribute__((swift_name("refusalJustification")));
@property (readonly) NSString * _Nullable responseType __attribute__((swift_name("responseType")));
@property (readonly) CDSSLLong * _Nullable start __attribute__((swift_name("start")));
@property (readonly) CDSSLDouble * _Nullable strength __attribute__((swift_name("strength")));
@property (readonly) NSString * _Nullable strengthUnit __attribute__((swift_name("strengthUnit")));
@property (readonly) CDSSLLong * _Nullable timestamp __attribute__((swift_name("timestamp")));
@property (readonly) CDSSLDouble * _Nullable unitNumber __attribute__((swift_name("unitNumber")));
@property (readonly) NSSet<CDSSLLong *> * _Nullable verses __attribute__((swift_name("verses")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSuspension")))
@interface CDSSLCardinal_sdkSuspension : CDSSLBase
- (instancetype)initWithBeginMoment:(CDSSLLong * _Nullable)beginMoment endMoment:(CDSSLLong * _Nullable)endMoment suspensionReason:(NSString * _Nullable)suspensionReason lifecycle:(NSString * _Nullable)lifecycle __attribute__((swift_name("init(beginMoment:endMoment:suspensionReason:lifecycle:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkSuspensionCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkSuspension *)doCopyBeginMoment:(CDSSLLong * _Nullable)beginMoment endMoment:(CDSSLLong * _Nullable)endMoment suspensionReason:(NSString * _Nullable)suspensionReason lifecycle:(NSString * _Nullable)lifecycle __attribute__((swift_name("doCopy(beginMoment:endMoment:suspensionReason:lifecycle:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLLong * _Nullable beginMoment __attribute__((swift_name("beginMoment")));
@property (readonly) CDSSLLong * _Nullable endMoment __attribute__((swift_name("endMoment")));
@property (readonly) NSString * _Nullable lifecycle __attribute__((swift_name("lifecycle")));
@property (readonly) NSString * _Nullable suspensionReason __attribute__((swift_name("suspensionReason")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMedication.Companion")))
@interface CDSSLCardinal_sdkMedicationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMedicationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTimeSeries.Companion")))
@interface CDSSLCardinal_sdkTimeSeriesCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTimeSeriesCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLauncher")))
@interface CDSSLCardinal_sdkLauncher : CDSSLBase
- (instancetype)initWithName:(NSString *)name triggerer:(CDSSLCardinal_sdkTrigger *)triggerer shouldPassValue:(BOOL)shouldPassValue __attribute__((swift_name("init(name:triggerer:shouldPassValue:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkLauncherCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) BOOL shouldPassValue __attribute__((swift_name("shouldPassValue")));
@property (readonly) CDSSLCardinal_sdkTrigger *triggerer __attribute__((swift_name("triggerer")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkState")))
@interface CDSSLCardinal_sdkState : CDSSLBase
- (instancetype)initWithName:(NSString *)name stateToUpdate:(CDSSLCardinal_sdkStateToUpdate *)stateToUpdate canLaunchLauncher:(BOOL)canLaunchLauncher __attribute__((swift_name("init(name:stateToUpdate:canLaunchLauncher:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkStateCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) BOOL canLaunchLauncher __attribute__((swift_name("canLaunchLauncher")));
@property (readonly) NSString *name __attribute__((swift_name("name")));
@property (readonly) CDSSLCardinal_sdkStateToUpdate *stateToUpdate __attribute__((swift_name("stateToUpdate")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAction.Companion")))
@interface CDSSLCardinal_sdkActionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkActionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((swift_name("Cardinal_sdkStructureElement")))
@protocol CDSSLCardinal_sdkStructureElement
@required
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSection.Companion")))
@interface CDSSLCardinal_sdkSectionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSectionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkCareTeamMemberType.Companion")))
@interface CDSSLCardinal_sdkCareTeamMemberTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkCareTeamMemberTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTimeTableHour.Companion")))
@interface CDSSLCardinal_sdkTimeTableHourCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTimeTableHourCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDatabaseSynchronization.Target")))
@interface CDSSLCardinal_sdkDatabaseSynchronizationTarget : CDSSLKotlinEnum<CDSSLCardinal_sdkDatabaseSynchronizationTarget *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkDatabaseSynchronizationTargetCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkDatabaseSynchronizationTarget *base __attribute__((swift_name("base")));
@property (class, readonly) CDSSLCardinal_sdkDatabaseSynchronizationTarget *healthdata __attribute__((swift_name("healthdata")));
@property (class, readonly) CDSSLCardinal_sdkDatabaseSynchronizationTarget *patient __attribute__((swift_name("patient")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkDatabaseSynchronizationTarget *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkDatabaseSynchronizationTarget *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDatabaseSynchronization.Companion")))
@interface CDSSLCardinal_sdkDatabaseSynchronizationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDatabaseSynchronizationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkFlatRateType.Companion")))
@interface CDSSLCardinal_sdkFlatRateTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkFlatRateTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkBasic")))
@interface CDSSLCardinal_sdkBasic : CDSSLBase
- (instancetype)initWithUsername:(NSString *)username password:(NSString *)password __attribute__((swift_name("init(username:password:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkBasicCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkBasic *)doCopyUsername:(NSString *)username password:(NSString *)password __attribute__((swift_name("doCopy(username:password:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) NSString *password __attribute__((swift_name("password")));
@property (readonly) NSString *username __attribute__((swift_name("username")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRemoteAuthentication.Companion")))
@interface CDSSLCardinal_sdkRemoteAuthenticationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRemoteAuthenticationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/datetime/serializers/LocalDateIso8601Serializer))
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeLocalDate")))
@interface CDSSLKotlinx_datetimeLocalDate : CDSSLBase <CDSSLKotlinComparable>
- (instancetype)initWithYear:(int32_t)year monthNumber:(int32_t)monthNumber dayOfMonth:(int32_t)dayOfMonth __attribute__((swift_name("init(year:monthNumber:dayOfMonth:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithYear:(int32_t)year month:(CDSSLKotlinx_datetimeMonth *)month dayOfMonth:(int32_t)dayOfMonth __attribute__((swift_name("init(year:month:dayOfMonth:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeLocalDateCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(CDSSLKotlinx_datetimeLocalDate *)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (int32_t)toEpochDays __attribute__((swift_name("toEpochDays()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t dayOfMonth __attribute__((swift_name("dayOfMonth")));
@property (readonly) CDSSLKotlinx_datetimeDayOfWeek *dayOfWeek __attribute__((swift_name("dayOfWeek")));
@property (readonly) int32_t dayOfYear __attribute__((swift_name("dayOfYear")));
@property (readonly) CDSSLKotlinx_datetimeMonth *month __attribute__((swift_name("month")));
@property (readonly) int32_t monthNumber __attribute__((swift_name("monthNumber")));
@property (readonly) int32_t year __attribute__((swift_name("year")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/datetime/serializers/LocalTimeIso8601Serializer))
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeLocalTime")))
@interface CDSSLKotlinx_datetimeLocalTime : CDSSLBase <CDSSLKotlinComparable>
- (instancetype)initWithHour:(int32_t)hour minute:(int32_t)minute second:(int32_t)second nanosecond:(int32_t)nanosecond __attribute__((swift_name("init(hour:minute:second:nanosecond:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeLocalTimeCompanion *companion __attribute__((swift_name("companion")));
- (int32_t)compareToOther:(CDSSLKotlinx_datetimeLocalTime *)other __attribute__((swift_name("compareTo(other:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (int32_t)toMillisecondOfDay __attribute__((swift_name("toMillisecondOfDay()")));
- (int64_t)toNanosecondOfDay __attribute__((swift_name("toNanosecondOfDay()")));
- (int32_t)toSecondOfDay __attribute__((swift_name("toSecondOfDay()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) int32_t hour __attribute__((swift_name("hour")));
@property (readonly) int32_t minute __attribute__((swift_name("minute")));
@property (readonly) int32_t nanosecond __attribute__((swift_name("nanosecond")));
@property (readonly) int32_t second __attribute__((swift_name("second")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeMonth")))
@interface CDSSLKotlinx_datetimeMonth : CDSSLKotlinEnum<CDSSLKotlinx_datetimeMonth *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *january __attribute__((swift_name("january")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *february __attribute__((swift_name("february")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *march __attribute__((swift_name("march")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *april __attribute__((swift_name("april")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *may __attribute__((swift_name("may")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *june __attribute__((swift_name("june")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *july __attribute__((swift_name("july")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *august __attribute__((swift_name("august")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *september __attribute__((swift_name("september")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *october __attribute__((swift_name("october")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *november __attribute__((swift_name("november")));
@property (class, readonly) CDSSLKotlinx_datetimeMonth *december __attribute__((swift_name("december")));
+ (CDSSLKotlinArray<CDSSLKotlinx_datetimeMonth *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLKotlinx_datetimeMonth *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeLocalDateTime.Companion")))
@interface CDSSLKotlinx_datetimeLocalDateTimeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeLocalDateTimeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_datetimeDateTimeFormat>)FormatBuilder:(void (^)(id<CDSSLKotlinx_datetimeDateTimeFormatBuilderWithDateTime>))builder __attribute__((swift_name("Format(builder:)")));
- (CDSSLKotlinx_datetimeLocalDateTime *)parseInput:(id)input format:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("parse(input:format:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeDayOfWeek")))
@interface CDSSLKotlinx_datetimeDayOfWeek : CDSSLKotlinEnum<CDSSLKotlinx_datetimeDayOfWeek *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) CDSSLKotlinx_datetimeDayOfWeek *monday __attribute__((swift_name("monday")));
@property (class, readonly) CDSSLKotlinx_datetimeDayOfWeek *tuesday __attribute__((swift_name("tuesday")));
@property (class, readonly) CDSSLKotlinx_datetimeDayOfWeek *wednesday __attribute__((swift_name("wednesday")));
@property (class, readonly) CDSSLKotlinx_datetimeDayOfWeek *thursday __attribute__((swift_name("thursday")));
@property (class, readonly) CDSSLKotlinx_datetimeDayOfWeek *friday __attribute__((swift_name("friday")));
@property (class, readonly) CDSSLKotlinx_datetimeDayOfWeek *saturday __attribute__((swift_name("saturday")));
@property (class, readonly) CDSSLKotlinx_datetimeDayOfWeek *sunday __attribute__((swift_name("sunday")));
+ (CDSSLKotlinArray<CDSSLKotlinx_datetimeDayOfWeek *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLKotlinx_datetimeDayOfWeek *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeUtcOffset.Companion")))
@interface CDSSLKotlinx_datetimeUtcOffsetCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeUtcOffsetCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_datetimeDateTimeFormat>)FormatBlock:(void (^)(id<CDSSLKotlinx_datetimeDateTimeFormatBuilderWithUtcOffset>))block __attribute__((swift_name("Format(block:)")));
- (CDSSLKotlinx_datetimeUtcOffset *)parseInput:(id)input format:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("parse(input:format:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@property (readonly) CDSSLKotlinx_datetimeUtcOffset *ZERO __attribute__((swift_name("ZERO")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeTimeZone.Companion")))
@interface CDSSLKotlinx_datetimeTimeZoneCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeTimeZoneCompanion *shared __attribute__((swift_name("shared")));
- (CDSSLKotlinx_datetimeTimeZone *)currentSystemDefault __attribute__((swift_name("currentSystemDefault()")));
- (CDSSLKotlinx_datetimeTimeZone *)ofZoneId:(NSString *)zoneId __attribute__((swift_name("of(zoneId:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@property (readonly) CDSSLKotlinx_datetimeFixedOffsetTimeZone *UTC __attribute__((swift_name("UTC")));
@property (readonly) NSSet<NSString *> *availableZoneIds __attribute__((swift_name("availableZoneIds")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTypedValuesType.Companion")))
@interface CDSSLCardinal_sdkTypedValuesTypeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTypedValuesTypeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((swift_name("KotlinAppendable")))
@protocol CDSSLKotlinAppendable
@required
- (id<CDSSLKotlinAppendable>)appendValue:(unichar)value __attribute__((swift_name("append(value:)")));
- (id<CDSSLKotlinAppendable>)appendValue_:(id _Nullable)value __attribute__((swift_name("append(value_:)")));
- (id<CDSSLKotlinAppendable>)appendValue:(id _Nullable)value startIndex:(int32_t)startIndex endIndex:(int32_t)endIndex __attribute__((swift_name("append(value:startIndex:endIndex:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRange")))
@interface CDSSLCardinal_sdkRange : CDSSLBase
- (instancetype)initWithLow:(CDSSLDouble * _Nullable)low high:(CDSSLDouble * _Nullable)high __attribute__((swift_name("init(low:high:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkRangeCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkRange *)doCopyLow:(CDSSLDouble * _Nullable)low high:(CDSSLDouble * _Nullable)high __attribute__((swift_name("doCopy(low:high:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLDouble * _Nullable high __attribute__((swift_name("high")));
@property (readonly) CDSSLDouble * _Nullable low __attribute__((swift_name("low")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkReferenceRange.Companion")))
@interface CDSSLCardinal_sdkReferenceRangeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkReferenceRangeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSubstanceproduct.Companion")))
@interface CDSSLCardinal_sdkSubstanceproductCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSubstanceproductCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkMedicinalproduct.Companion")))
@interface CDSSLCardinal_sdkMedicinalproductCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkMedicinalproductCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDuration.Companion")))
@interface CDSSLCardinal_sdkDurationCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDurationCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRenewal.Companion")))
@interface CDSSLCardinal_sdkRenewalCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRenewalCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkWeekday")))
@interface CDSSLCardinal_sdkWeekday : CDSSLBase
- (instancetype)initWithWeekday:(CDSSLCardinal_sdkCodeStub * _Nullable)weekday weekNumber:(CDSSLInt * _Nullable)weekNumber __attribute__((swift_name("init(weekday:weekNumber:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkWeekdayCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkWeekday *)doCopyWeekday:(CDSSLCardinal_sdkCodeStub * _Nullable)weekday weekNumber:(CDSSLInt * _Nullable)weekNumber __attribute__((swift_name("doCopy(weekday:weekNumber:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLInt * _Nullable weekNumber __attribute__((swift_name("weekNumber")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable weekday __attribute__((swift_name("weekday")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAdministrationQuantity")))
@interface CDSSLCardinal_sdkAdministrationQuantity : CDSSLBase
- (instancetype)initWithQuantity:(CDSSLDouble * _Nullable)quantity administrationUnit:(CDSSLCardinal_sdkCodeStub * _Nullable)administrationUnit unit:(NSString * _Nullable)unit __attribute__((swift_name("init(quantity:administrationUnit:unit:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAdministrationQuantityCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkAdministrationQuantity *)doCopyQuantity:(CDSSLDouble * _Nullable)quantity administrationUnit:(CDSSLCardinal_sdkCodeStub * _Nullable)administrationUnit unit:(NSString * _Nullable)unit __attribute__((swift_name("doCopy(quantity:administrationUnit:unit:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLCardinal_sdkCodeStub * _Nullable administrationUnit __attribute__((swift_name("administrationUnit")));
@property (readonly) CDSSLDouble * _Nullable quantity __attribute__((swift_name("quantity")));
@property (readonly) NSString * _Nullable unit __attribute__((swift_name("unit")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRegimenItem.Companion")))
@interface CDSSLCardinal_sdkRegimenItemCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRegimenItemCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAgreementAppendix")))
@interface CDSSLCardinal_sdkAgreementAppendix : CDSSLBase
- (instancetype)initWithDocSeq:(CDSSLInt * _Nullable)docSeq verseSeq:(CDSSLInt * _Nullable)verseSeq documentId:(NSString * _Nullable)documentId path:(NSString * _Nullable)path __attribute__((swift_name("init(docSeq:verseSeq:documentId:path:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkAgreementAppendixCompanion *companion __attribute__((swift_name("companion")));
- (CDSSLCardinal_sdkAgreementAppendix *)doCopyDocSeq:(CDSSLInt * _Nullable)docSeq verseSeq:(CDSSLInt * _Nullable)verseSeq documentId:(NSString * _Nullable)documentId path:(NSString * _Nullable)path __attribute__((swift_name("doCopy(docSeq:verseSeq:documentId:path:)")));
- (BOOL)isEqual:(id _Nullable)other __attribute__((swift_name("isEqual(_:)")));
- (NSUInteger)hash __attribute__((swift_name("hash()")));
- (NSString *)description __attribute__((swift_name("description()")));
@property (readonly) CDSSLInt * _Nullable docSeq __attribute__((swift_name("docSeq")));
@property (readonly) NSString * _Nullable documentId __attribute__((swift_name("documentId")));
@property (readonly) NSString * _Nullable path __attribute__((swift_name("path")));
@property (readonly) CDSSLInt * _Nullable verseSeq __attribute__((swift_name("verseSeq")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkParagraphAgreement.Companion")))
@interface CDSSLCardinal_sdkParagraphAgreementCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkParagraphAgreementCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkSuspension.Companion")))
@interface CDSSLCardinal_sdkSuspensionCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkSuspensionCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTrigger")))
@interface CDSSLCardinal_sdkTrigger : CDSSLKotlinEnum<CDSSLCardinal_sdkTrigger *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkTriggerCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkTrigger *theInit __attribute__((swift_name("theInit")));
@property (class, readonly) CDSSLCardinal_sdkTrigger *change __attribute__((swift_name("change")));
@property (class, readonly) CDSSLCardinal_sdkTrigger *click __attribute__((swift_name("click")));
@property (class, readonly) CDSSLCardinal_sdkTrigger *visible __attribute__((swift_name("visible")));
@property (class, readonly) CDSSLCardinal_sdkTrigger *error __attribute__((swift_name("error")));
@property (class, readonly) CDSSLCardinal_sdkTrigger *valid __attribute__((swift_name("valid")));
@property (class, readonly) CDSSLCardinal_sdkTrigger *event __attribute__((swift_name("event")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkTrigger *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkTrigger *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkLauncher.Companion")))
@interface CDSSLCardinal_sdkLauncherCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkLauncherCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkStateToUpdate")))
@interface CDSSLCardinal_sdkStateToUpdate : CDSSLKotlinEnum<CDSSLCardinal_sdkStateToUpdate *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly, getter=companion) CDSSLCardinal_sdkStateToUpdateCompanion *companion __attribute__((swift_name("companion")));
@property (class, readonly) CDSSLCardinal_sdkStateToUpdate *value __attribute__((swift_name("value")));
@property (class, readonly) CDSSLCardinal_sdkStateToUpdate *visible __attribute__((swift_name("visible")));
@property (class, readonly) CDSSLCardinal_sdkStateToUpdate *readonly __attribute__((swift_name("readonly")));
@property (class, readonly) CDSSLCardinal_sdkStateToUpdate *clazz __attribute__((swift_name("clazz")));
@property (class, readonly) CDSSLCardinal_sdkStateToUpdate *required __attribute__((swift_name("required")));
+ (CDSSLKotlinArray<CDSSLCardinal_sdkStateToUpdate *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLCardinal_sdkStateToUpdate *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkState.Companion")))
@interface CDSSLCardinal_sdkStateCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkStateCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkDatabaseSynchronization.TargetCompanion")))
@interface CDSSLCardinal_sdkDatabaseSynchronizationTargetCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkDatabaseSynchronizationTargetCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkBasic.Companion")))
@interface CDSSLCardinal_sdkBasicCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkBasicCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeLocalDate.Companion")))
@interface CDSSLKotlinx_datetimeLocalDateCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeLocalDateCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_datetimeDateTimeFormat>)FormatBlock:(void (^)(id<CDSSLKotlinx_datetimeDateTimeFormatBuilderWithDate>))block __attribute__((swift_name("Format(block:)")));
- (CDSSLKotlinx_datetimeLocalDate *)fromEpochDaysEpochDays:(int32_t)epochDays __attribute__((swift_name("fromEpochDays(epochDays:)")));
- (CDSSLKotlinx_datetimeLocalDate *)parseInput:(id)input format:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("parse(input:format:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeLocalTime.Companion")))
@interface CDSSLKotlinx_datetimeLocalTimeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeLocalTimeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_datetimeDateTimeFormat>)FormatBuilder:(void (^)(id<CDSSLKotlinx_datetimeDateTimeFormatBuilderWithTime>))builder __attribute__((swift_name("Format(builder:)")));
- (CDSSLKotlinx_datetimeLocalTime *)fromMillisecondOfDayMillisecondOfDay:(int32_t)millisecondOfDay __attribute__((swift_name("fromMillisecondOfDay(millisecondOfDay:)")));
- (CDSSLKotlinx_datetimeLocalTime *)fromNanosecondOfDayNanosecondOfDay:(int64_t)nanosecondOfDay __attribute__((swift_name("fromNanosecondOfDay(nanosecondOfDay:)")));
- (CDSSLKotlinx_datetimeLocalTime *)fromSecondOfDaySecondOfDay:(int32_t)secondOfDay __attribute__((swift_name("fromSecondOfDay(secondOfDay:)")));
- (CDSSLKotlinx_datetimeLocalTime *)parseInput:(id)input format:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("parse(input:format:)")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((swift_name("Kotlinx_datetimeDateTimeFormatBuilder")))
@protocol CDSSLKotlinx_datetimeDateTimeFormatBuilder
@required
- (void)charsValue:(NSString *)value __attribute__((swift_name("chars(value:)")));
@end

__attribute__((swift_name("Kotlinx_datetimeDateTimeFormatBuilderWithDate")))
@protocol CDSSLKotlinx_datetimeDateTimeFormatBuilderWithDate <CDSSLKotlinx_datetimeDateTimeFormatBuilder>
@required
- (void)dateFormat:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("date(format:)")));
- (void)dayOfMonthPadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("dayOfMonth(padding:)")));
- (void)dayOfWeekNames:(CDSSLKotlinx_datetimeDayOfWeekNames *)names __attribute__((swift_name("dayOfWeek(names:)")));
- (void)monthNameNames:(CDSSLKotlinx_datetimeMonthNames *)names __attribute__((swift_name("monthName(names:)")));
- (void)monthNumberPadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("monthNumber(padding:)")));
- (void)yearPadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("year(padding:)")));
- (void)yearTwoDigitsBaseYear:(int32_t)baseYear __attribute__((swift_name("yearTwoDigits(baseYear:)")));
@end

__attribute__((swift_name("Kotlinx_datetimeDateTimeFormatBuilderWithTime")))
@protocol CDSSLKotlinx_datetimeDateTimeFormatBuilderWithTime <CDSSLKotlinx_datetimeDateTimeFormatBuilder>
@required
- (void)amPmHourPadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("amPmHour(padding:)")));
- (void)amPmMarkerAm:(NSString *)am pm:(NSString *)pm __attribute__((swift_name("amPmMarker(am:pm:)")));
- (void)hourPadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("hour(padding:)")));
- (void)minutePadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("minute(padding:)")));
- (void)secondPadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("second(padding:)")));
- (void)secondFractionFixedLength:(int32_t)fixedLength __attribute__((swift_name("secondFraction(fixedLength:)")));
- (void)secondFractionMinLength:(int32_t)minLength maxLength:(int32_t)maxLength __attribute__((swift_name("secondFraction(minLength:maxLength:)")));
- (void)timeFormat:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("time(format:)")));
@end

__attribute__((swift_name("Kotlinx_datetimeDateTimeFormatBuilderWithDateTime")))
@protocol CDSSLKotlinx_datetimeDateTimeFormatBuilderWithDateTime <CDSSLKotlinx_datetimeDateTimeFormatBuilderWithDate, CDSSLKotlinx_datetimeDateTimeFormatBuilderWithTime>
@required
- (void)dateTimeFormat:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("dateTime(format:)")));
@end

__attribute__((swift_name("Kotlinx_datetimeDateTimeFormatBuilderWithUtcOffset")))
@protocol CDSSLKotlinx_datetimeDateTimeFormatBuilderWithUtcOffset <CDSSLKotlinx_datetimeDateTimeFormatBuilder>
@required
- (void)offsetFormat:(id<CDSSLKotlinx_datetimeDateTimeFormat>)format __attribute__((swift_name("offset(format:)")));
- (void)offsetHoursPadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("offsetHours(padding:)")));
- (void)offsetMinutesOfHourPadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("offsetMinutesOfHour(padding:)")));
- (void)offsetSecondsOfMinutePadding:(CDSSLKotlinx_datetimePadding *)padding __attribute__((swift_name("offsetSecondsOfMinute(padding:)")));
@end


/**
 * @note annotations
 *   kotlinx.serialization.Serializable(with=NormalClass(value=kotlinx/datetime/serializers/FixedOffsetTimeZoneSerializer))
*/
__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeFixedOffsetTimeZone")))
@interface CDSSLKotlinx_datetimeFixedOffsetTimeZone : CDSSLKotlinx_datetimeTimeZone
- (instancetype)initWithOffset:(CDSSLKotlinx_datetimeUtcOffset *)offset __attribute__((swift_name("init(offset:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeFixedOffsetTimeZoneCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSString *id __attribute__((swift_name("id")));
@property (readonly) CDSSLKotlinx_datetimeUtcOffset *offset __attribute__((swift_name("offset")));
@property (readonly) int32_t totalSeconds __attribute__((swift_name("totalSeconds"))) __attribute__((deprecated("Use offset.totalSeconds")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkRange.Companion")))
@interface CDSSLCardinal_sdkRangeCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkRangeCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkWeekday.Companion")))
@interface CDSSLCardinal_sdkWeekdayCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkWeekdayCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAdministrationQuantity.Companion")))
@interface CDSSLCardinal_sdkAdministrationQuantityCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAdministrationQuantityCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkAgreementAppendix.Companion")))
@interface CDSSLCardinal_sdkAgreementAppendixCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkAgreementAppendixCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkTrigger.Companion")))
@interface CDSSLCardinal_sdkTriggerCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkTriggerCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Cardinal_sdkStateToUpdate.Companion")))
@interface CDSSLCardinal_sdkStateToUpdateCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLCardinal_sdkStateToUpdateCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializerTypeParamsSerializers:(CDSSLKotlinArray<id<CDSSLKotlinx_serialization_coreKSerializer>> *)typeParamsSerializers __attribute__((swift_name("serializer(typeParamsSerializers:)")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimePadding")))
@interface CDSSLKotlinx_datetimePadding : CDSSLKotlinEnum<CDSSLKotlinx_datetimePadding *>
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
- (instancetype)initWithName:(NSString *)name ordinal:(int32_t)ordinal __attribute__((swift_name("init(name:ordinal:)"))) __attribute__((objc_designated_initializer)) __attribute__((unavailable));
@property (class, readonly) CDSSLKotlinx_datetimePadding *none __attribute__((swift_name("none")));
@property (class, readonly) CDSSLKotlinx_datetimePadding *zero __attribute__((swift_name("zero")));
@property (class, readonly) CDSSLKotlinx_datetimePadding *space __attribute__((swift_name("space")));
+ (CDSSLKotlinArray<CDSSLKotlinx_datetimePadding *> *)values __attribute__((swift_name("values()")));
@property (class, readonly) NSArray<CDSSLKotlinx_datetimePadding *> *entries __attribute__((swift_name("entries")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeDayOfWeekNames")))
@interface CDSSLKotlinx_datetimeDayOfWeekNames : CDSSLBase
- (instancetype)initWithNames:(NSArray<NSString *> *)names __attribute__((swift_name("init(names:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithMonday:(NSString *)monday tuesday:(NSString *)tuesday wednesday:(NSString *)wednesday thursday:(NSString *)thursday friday:(NSString *)friday saturday:(NSString *)saturday sunday:(NSString *)sunday __attribute__((swift_name("init(monday:tuesday:wednesday:thursday:friday:saturday:sunday:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeDayOfWeekNamesCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<NSString *> *names __attribute__((swift_name("names")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeMonthNames")))
@interface CDSSLKotlinx_datetimeMonthNames : CDSSLBase
- (instancetype)initWithNames:(NSArray<NSString *> *)names __attribute__((swift_name("init(names:)"))) __attribute__((objc_designated_initializer));
- (instancetype)initWithJanuary:(NSString *)january february:(NSString *)february march:(NSString *)march april:(NSString *)april may:(NSString *)may june:(NSString *)june july:(NSString *)july august:(NSString *)august september:(NSString *)september october:(NSString *)october november:(NSString *)november december:(NSString *)december __attribute__((swift_name("init(january:february:march:april:may:june:july:august:september:october:november:december:)"))) __attribute__((objc_designated_initializer));
@property (class, readonly, getter=companion) CDSSLKotlinx_datetimeMonthNamesCompanion *companion __attribute__((swift_name("companion")));
@property (readonly) NSArray<NSString *> *names __attribute__((swift_name("names")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeFixedOffsetTimeZone.Companion")))
@interface CDSSLKotlinx_datetimeFixedOffsetTimeZoneCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeFixedOffsetTimeZoneCompanion *shared __attribute__((swift_name("shared")));
- (id<CDSSLKotlinx_serialization_coreKSerializer>)serializer __attribute__((swift_name("serializer()")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeDayOfWeekNames.Companion")))
@interface CDSSLKotlinx_datetimeDayOfWeekNamesCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeDayOfWeekNamesCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) CDSSLKotlinx_datetimeDayOfWeekNames *ENGLISH_ABBREVIATED __attribute__((swift_name("ENGLISH_ABBREVIATED")));
@property (readonly) CDSSLKotlinx_datetimeDayOfWeekNames *ENGLISH_FULL __attribute__((swift_name("ENGLISH_FULL")));
@end

__attribute__((objc_subclassing_restricted))
__attribute__((swift_name("Kotlinx_datetimeMonthNames.Companion")))
@interface CDSSLKotlinx_datetimeMonthNamesCompanion : CDSSLBase
+ (instancetype)alloc __attribute__((unavailable));
+ (instancetype)allocWithZone:(struct _NSZone *)zone __attribute__((unavailable));
+ (instancetype)companion __attribute__((swift_name("init()")));
@property (class, readonly, getter=shared) CDSSLKotlinx_datetimeMonthNamesCompanion *shared __attribute__((swift_name("shared")));
@property (readonly) CDSSLKotlinx_datetimeMonthNames *ENGLISH_ABBREVIATED __attribute__((swift_name("ENGLISH_ABBREVIATED")));
@property (readonly) CDSSLKotlinx_datetimeMonthNames *ENGLISH_FULL __attribute__((swift_name("ENGLISH_FULL")));
@end

#pragma pop_macro("_Nullable_result")
#pragma clang diagnostic pop
NS_ASSUME_NONNULL_END
